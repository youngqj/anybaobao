<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.interesting.modules.reportform.mapper.ReportFormMapper">

	<select id="remittanceReport" resultType="com.interesting.modules.reportform.vo.PageRemittanceReportVO">
		WITH rt as (
		SELECT
		rem.order_id,
		rem.id,
		GROUP_CONCAT(DISTINCT xc.`name`) AS customerName,
		GROUP_CONCAT(DISTINCT rem.order_num) AS order_num,
		GROUP_CONCAT(DISTINCT xoed.invoice_num) AS invoice_num
		FROM xq_remittance_detail rem
		left join xq_order xo on xo.id = rem.order_id
		LEFT JOIN xq_overseas_exit_detail xoed ON TRIM(rem.order_num) = TRIM(xoed.customer_order_num)
		and xoed.source_rep_num = xo.order_num
		and xoed.iz_delete = 0
		LEFT JOIN xq_customer xc ON xoed.customer_id = xc.id
		WHERE rem.order_num!='' AND rem.iz_delete=0
        <if test="dto.remittanceDateStart != null and dto.remittanceDateStart !='' and dto.remittanceDateEnd != null and dto.remittanceDateEnd !=''">
            and rem.remittance_date between #{dto.remittanceDateStart} and #{dto.remittanceDateEnd}
        </if>
		<if test="customerIds != null">
			AND xoed.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
        GROUP BY rem.id
		) SELECT
		xrd.id,
		IFNULL( DATE_FORMAT( xrd.remittance_date, '%Y/%m/%d' ), '-' ) AS remittance_date,
		ifnull( IF ( xo.order_type = 1, rt.order_num , xo.order_num ), '-' ) AS order_num,
		ifnull( IF ( xo.order_type = 1, rt.invoice_num , xo.invoice_num ), '-' ) AS invoice_num,
		xrd.currency,
		ifnull( sum(xrd.remittance_amount), 0.00 ) remittanceAmount,
		ifnull( sum(xrd.factoring_money), 0.00 ) factoringMoney,
		IFNULL( IF ( xo.order_type = 1, rt.customerName , xc.`name` ), '-' ) AS customer_name,
		ifnull( sum(xrd.factoring_interest), 0.00 ) factoringInterest,
		ifnull( sum(xrd.quality), 0.00 ) quality,
		ifnull( sum(xrd.discount), 0.00 ) discount,
		ifnull( sum(xrd.service_charge), 0.00 ) serviceCharge,
		IF
		( ( xrd.remarks IS NULL OR xrd.remarks = '' ), '-', xrd.remarks ) remarks
		FROM
		xq_remittance_detail xrd
		LEFT JOIN xq_order xo ON xrd.order_id = xo.id
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		AND xc.iz_delete = 0
		LEFT JOIN rt rt on xrd.id=rt.id
		WHERE
		xrd.iz_delete = 0
		AND xo.id IS NOT NULL
		AND xo.iz_delete = 0
		<if test="customerIds != null">
			and ((
			xo.order_type = '2'
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
			)
			or (
			xo.order_type = '1'
			and xrd.order_num in (
			select oed.customer_order_num
			from xq_overseas_exit_detail oed
			where
			oed.iz_delete = 0
			and oed.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
			)
			)
			)
		</if>
		<if test="dto.remittanceDateStart != null and dto.remittanceDateStart !='' and dto.remittanceDateEnd != null and dto.remittanceDateEnd !=''">
			and xrd.remittance_date between #{dto.remittanceDateStart} and #{dto.remittanceDateEnd}
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and (xo.order_num like concat('%',#{dto.orderNum},'%') or rt.order_num  like concat('%',#{dto.orderNum},'%') )
		</if>
		<if test="dto.invoiceNum != null and dto.invoiceNum != ''">
			and xo.invoice_num like concat('%',#{dto.invoiceNum},'%')
		</if>
		GROUP BY xrd.id
		order by xrd.remittance_date
		<if test="dto.reportFormTimeOrder != null and dto.reportFormTimeOrder !='' and dto.reportFormTimeOrder == 'desc'">
			desc
		</if>
		,order_num,invoice_num
    </select>

	<select id="sumRemittanceFinance"
			resultType="com.interesting.modules.reportform.vo.SumRemittanceFinanceVO">

		SELECT
		zzz.currency,
		SUM(zzz.totalRemittanceAmount) totalRemittanceAmount,
		SUM(zzz.totalFactoringInterest) totalFactoringInterest,
		SUM(zzz.totalFactoringMoney) totalFactoringMoney,
		SUM(zzz.totalRemittanceAmount) + SUM(zzz.totalFactoringMoney) AS totalRemittanceAmountAddFactoringMoney
		FROM(

		SELECT
		xrd.currency,
		IFNULL( SUM(xrd.remittance_amount), 0.00 ) totalRemittanceAmount,
		IFNULL( SUM(xrd.factoring_money), 0.00 ) totalFactoringMoney,
		IFNULL( SUM(xrd.factoring_interest), 0.00 ) totalFactoringInterest

		FROM
		xq_remittance_detail xrd
		LEFT JOIN xq_order xo ON xrd.order_id = xo.id

		WHERE
		xrd.iz_delete = 0
		AND xo.id IS NOT NULL
		AND xo.iz_delete = 0
		<if test="customerIds != null">
			and ((
			xo.order_type = '2'
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
			)
			or (
			xo.order_type = '1'
			and xrd.order_num in (
			select oed.customer_order_num
			from xq_overseas_exit_detail oed
			where
			oed.iz_delete = 0
			and oed.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
			)
			)
			)
		</if>
		<if test="dto.remittanceDateStart != null and dto.remittanceDateStart !='' and dto.remittanceDateEnd != null and dto.remittanceDateEnd !=''">
			and xrd.remittance_date between #{dto.remittanceDateStart} and #{dto.remittanceDateEnd}
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and (xo.order_num like concat('%',#{dto.orderNum},'%') or  xrd.order_num like concat('%',#{dto.orderNum},'%') )
		</if>
		<if test="dto.invoiceNum != null and dto.invoiceNum != ''">
			and xo.invoice_num like concat('%',#{dto.invoiceNum},'%')
		</if>

		GROUP BY xrd.id
		) zzz GROUP BY zzz.currency



	</select>

	<select id="pageWarehouseCost" resultType="com.interesting.modules.reportform.vo.WarehouseCostPageVO">
		SELECT
			xw.name warehouseName,
			xpi.`product_name`,
			xo.`order_num`,
			oed.pallet_num,
			oed.`create_time`,
			oed.`warehouse_lot`,
			oed.`enter_num`,
			oed.`packaging` packing,
			(SUBSTRING_INDEX(oed.`packaging`, '/', 1) * SUBSTRING_INDEX(oed.`packaging`, '/', -1))*oed.`enter_num` totalWeight,
			DATE_ADD(oed.create_time,INTERVAL 1 MONTH) expectedDeliveryTime,
			DATEDIFF(NOW(), oed.create_time) AS monthDiff,
			IFNULL(xod.price_per_box,0) notReceivedPrice,
			oed.gross_weight_per_box weightPerLb,
			oed.gross_weight_total totalBoxesWeight,
			IFNULL((SELECT IFNULL(expense,0)  FROM xq_warehouse_cost_detail WHERE  warehouse_lot = oed.`warehouse_lot` AND warehouse_id = oed.warehouse_id AND months = 1),0) firstMonthFee,
			IFNULL((SELECT IFNULL(expense,0)   FROM xq_warehouse_cost_detail WHERE  warehouse_lot = oed.`warehouse_lot` AND warehouse_id = oed.warehouse_id AND months = 2),0) secondMonthFee,
			IFNULL((SELECT IFNULL(expense,0)   FROM xq_warehouse_cost_detail WHERE  warehouse_lot = oed.`warehouse_lot` AND warehouse_id = oed.warehouse_id AND months = 3),0) thirdMonthFee,
			IFNULL((SELECT IFNULL(expense,0)   FROM xq_warehouse_cost_detail WHERE  warehouse_lot = oed.`warehouse_lot` AND warehouse_id = oed.warehouse_id AND months = 4),0) forthMonthFee,
			IFNULL((SELECT IFNULL(SUM(IFNULL(expense,0)),0)  FROM xq_warehouse_cost_detail WHERE  warehouse_lot = oed.`warehouse_lot` AND warehouse_id = oed.warehouse_id AND months > 4 ),0) fifthMonthFee,
			IFNULL((SELECT IF(MAX(months)>3,MAX(months)-4,0) FROM xq_warehouse_cost_detail WHERE warehouse_lot = oed.`warehouse_lot` AND warehouse_id = oed.warehouse_id ),0) overMonth,
			IFNULL((SELECT IFNULL(COUNT(*)*owf.transfer_charge,0) FROM xq_overseas_exit_detail WHERE warehouse_lot = oed.`warehouse_lot`),0) deliveryFee,
			(
			SELECT IF(oed.`enter_num` - IFNULL(SUM(exit_num),0)=0,1,0) FROM xq_overseas_exit_detail WHERE warehouse_lot = oed.`warehouse_lot` and iz_delete = 0
			) izFinished,
			(
			SELECT IF(oed.`enter_num` - IFNULL(SUM(exit_num),0)=0,(
			SELECT DATE(MAX(create_time)) FROM xq_overseas_exit_detail WHERE warehouse_lot = oed.`warehouse_lot`
			),NULL) FROM xq_overseas_exit_detail WHERE warehouse_lot = oed.`warehouse_lot` and iz_delete = 0
			) realFinishTime

		FROM
		xq_overseas_enter_detail oed
		LEFT JOIN  xq_product_info xpi ON oed.`product_id` = xpi.id
		LEFT JOIN xq_order_detail xod ON oed.`order_detail_id` = xod.`id` AND xod.iz_delete = 0
		LEFT JOIN xq_order xo ON xo.`id` = xod.`order_id` AND xo.iz_delete = 0
		LEFT JOIN xq_overseas_warehouse_fee owf ON owf.warehouse_id = oed.warehouse_id AND owf.iz_delete = 0
		LEFT JOIN xq_warehouse xw ON xw.id = oed.warehouse_id AND xw.iz_delete = 0
		WHERE oed.iz_delete = 0


		<if test="dto.lot != null and dto.lot != ''">
			and oed.warehouse_lot like concat('%',#{dto.lot},'%')
		</if>
		<if test="dto.createTimeStart != null and dto.createTimeStart != '' and dto.createTimeEnd != null and '' != dto.createTimeEnd">
			and DATE(oed.`create_time`) between #{dto.createTimeStart} and #{dto.createTimeEnd}
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
		<if test="dto.productName != null and dto.productName != ''">
			and xpi.`product_name` like concat('%',#{dto.productName},'%')
		</if>
		<if test="dto.warehouseId != null and dto.warehouseId != ''">
			and oed.`warehouse_id`= #{dto.warehouseId}
		</if>
		order by oed.`create_time`
		<if test="dto.reportFormTimeOrder != null and dto.reportFormTimeOrder !='' and dto.reportFormTimeOrder == 'desc'">
			desc
		</if>
		,xw.name,xo.`order_num`,oed.`warehouse_lot`


    </select>

    <select id="orderAcsrPage" resultType="com.interesting.modules.reportform.vo.OrderAscrListVO">
		with xs as ( select id,name from xq_supplier where iz_delete = 0 )
        SELECT
        zzz.id, supplierName,originalSupplierName, purchase_contract_no, order_num, accessory_name, size, material_specification,
        order_quantity, unit_price, currency, purchase_amount, tax_included_amount, finance_audit_amount,categoryName,
        un_finance_audit_amount, tax_rate, finance_status
        FROM
        (
        SELECT
        xap.id,
		IFNUll(xs.`name`,'-') AS supplierName,
		ifnull(xs2.name,'-') as originalSupplierName,
		IFNUll(xap.purchase_contract_no,'-') as purchase_contract_no,
		IFNUll(xo.order_num,'-') as order_num,
		IFNUll(xai.accessory_name,'-') as accessory_name,
		IFNUll(xai.size,'-') as size,
		IFNUll(xai.material_specification,'-') as material_specification,
		IFNUll(xap.order_quantity,0.00) as order_quantity,
		IFNUll(xap.unit_price,0.00) as unit_price,
        IFNULL(xap.currency, 'CNY' ) AS currency,
        IFNULL(xac.name, '' ) AS categoryName,
		IFNUll(xap.purchase_amount,0.00) as purchase_amount,
		IFNUll(xap.tax_included_amount,0.00) as tax_included_amount,
		ifnull( finance_audit_amount, 0.00 ) AS finance_audit_amount,
		IFNUll(xap.tax_included_amount - ifnull( finance_audit_amount, 0 ) ,0.00)AS un_finance_audit_amount,
		IFNUll(xap.tax_rate,0.00) as tax_rate,
        CASE
        WHEN (ifnull( finance_audit_amount, 0 ) - xap.tax_included_amount &lt; 0
        and ifnull(sum(ifnull(xi.num, 0)), 0) + ifnull(xap.order_quantity, 0) &gt; 0) THEN
        1 ELSE 2
        END AS finance_status,
        xap.create_time
        FROM
        xq_accessories_purchase xap
        LEFT JOIN xs ON xs.id = xap.supplier_id
        LEFT JOIN xq_order xo ON xo.id = xap.order_id
        AND xo.iz_delete = 0
        LEFT JOIN xq_accessory_info xai ON xap.accessory_id = xai.id
        AND xai.iz_delete = 0
        LEFT JOIN xq_accessory_category xac ON xac.id = xai.category_id
        left join xq_raw_material_purchase xrmp on xap.product_id = xrmp.product_id and xap.order_id = xrmp.order_id and xrmp.iz_delete = 0
        left join xs xs2 on xs2.id = xrmp.supplier_id
        left join xq_inventory xi on xi.source_id = xap.id and xi.iz_delete = 0
        WHERE
        1 = 1
        and xac.name not like "%温度计%"
        AND xap.iz_delete = 0
		<if test="supplierIds != null">
			and xap.supplier_id in
			<foreach collection="supplierIds" item="supplierId" separator="," open="(" close=")">
				#{supplierId}
			</foreach>
		</if>
		<if test="originalSupplierIds != null">
			and xrmp.supplier_id in
			<foreach collection="originalSupplierIds" item="originalSupplierId" separator="," open="(" close=")">
				#{originalSupplierId}
			</foreach>
		</if>
        <if test="dto.orderNum != null and dto.orderNum != ''">
            and xo.order_num like concat('%',#{dto.orderNum},'%')
        </if>

        <if test="dto.accessoryName != null and dto.accessoryName != ''">
            and xai.accessory_name like concat('%',#{dto.accessoryName},'%')
        </if>
        <if test="dto.purchaseContractNo != null and dto.purchaseContractNo != ''">
            and xap.purchase_contract_no like concat('%',#{dto.purchaseContractNo},'%')
        </if>
        GROUP BY
        xap.id

        ) zzz
        WHERE
        1 = 1
        <if test="dto.financeStatus!=null">
            and zzz.finance_status =#{dto.financeStatus}
        </if>
        order by zzz.order_num desc,zzz.create_time desc


    </select>


	<select id="sumOrderAcsrPage" resultType="com.interesting.modules.reportform.vo.SumOrderAscrFinanceVO">
		with xs as ( select id,name from xq_supplier where iz_delete = 0 )
        select
        ttt.currency,
        sum(ttt.tax_included_amount) AS total_tax_included_amount,
        sum(ttt.finance_audit_amount) AS total_finance_audit_amount,
        sum(ttt.tax_included_amount - ttt.finance_audit_amount) AS total_un_finance_audit_amount,
        sum(ttt.order_quantity) AS order_total_quantity

        from
        (
        SELECT
            distinct
		ifnull(xap.currency,'CNY') currency,
		IFNUll(xap.tax_included_amount,0.00) as tax_included_amount,
		ifnull( finance_audit_amount, 0.00 ) AS finance_audit_amount,
		IFNUll(xap.order_quantity,0.00) as order_quantity,
        xo.id,
        xap.id id2,
		CASE
		WHEN ifnull( finance_audit_amount, 0 ) - xap.tax_included_amount &lt; 0 THEN
		1 ELSE 2
		END AS finance_status
        FROM
        xq_accessories_purchase xap
        LEFT JOIN xs ON xs.id = xap.supplier_id
        LEFT JOIN xq_order xo ON xo.id = xap.order_id
        AND xo.iz_delete = 0
        LEFT JOIN xq_accessory_info xai ON xap.accessory_id = xai.id
        AND xai.iz_delete = 0
		left join xq_raw_material_purchase xrmp on xap.product_id = xrmp.product_id and xap.order_id = xrmp.order_id and xrmp.iz_delete = 0
		left join xs xs2 on xs2.id = xrmp.supplier_id
		LEFT JOIN xq_accessory_category xac ON xac.id = xai.category_id
        WHERE
        1 = 1
		and xac.name not like "%温度计%"
        AND xap.iz_delete = 0
		<if test="supplierIds != null">
			and xap.supplier_id in
			<foreach collection="supplierIds" item="supplierId" separator="," open="(" close=")">
				#{supplierId}
			</foreach>
		</if>
		<if test="originalSupplierIds != null">
			and xrmp.supplier_id in
			<foreach collection="originalSupplierIds" item="originalSupplierId" separator="," open="(" close=")">
				#{originalSupplierId}
			</foreach>
		</if>
        <if test="dto.orderNum != null and dto.orderNum != ''">
          and xo.order_num like concat('%',#{dto.orderNum},'%')
        </if>

        <if test="dto.accessoryName != null and dto.accessoryName != ''">
            and xai.accessory_name like concat('%',#{dto.accessoryName},'%')
        </if>
        <if test="dto.purchaseContractNo != null and dto.purchaseContractNo != ''">
            and xap.purchase_contract_no like concat('%',#{dto.purchaseContractNo},'%')
        </if>

        GROUP BY
        xap.id
        ) ttt
        where 1=1
		<if test="dto.financeStatus!=null">
			and ttt.finance_status =#{dto.financeStatus}
		</if>
        group by ttt.currency
    </select>


	<select id="freightReport" resultType="com.interesting.modules.reportform.vo.FreightReportVO">


		WITH gnlyf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gnlyf_agent,
		'gnlyf' AS fee_type,
        xfci.finance_amount AS gnlyf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time,
		xfci.payable_amount,
		xfci.paid_amount
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gnlyf'
		-- and xfci.customer_id is null
		-- and xfci.supplier_id is null
		and xfci.order_id is not null
		-- and xfci.iz_default_color !=0
        and xfci.finance_amount != 0
		),
		gnbgf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gnbgf_agent,
        xfci.finance_amount AS gnbgf_price,
		'gnbgf' AS fee_type,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time,
		xfci.payable_amount,
		xfci.paid_amount
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gnbgf'
		-- and xfci.customer_id is null
		-- and xfci.supplier_id is null
		and xfci.order_id is not null
		-- and xfci.iz_default_color !=0
        and xfci.finance_amount != 0
		),
		hybxf AS (
		SELECT
		xie.order_id,
		xie.insurance_company,
        xie.finance_confirm_amount as insurance_fee,
		xie.application_date,
		'hybxf' AS fee_type,
		xie.pay_time,
		xie.pay_money,
		xie.payable_amount,
		xie.paid_amount
		FROM
		xq_insurance_expenses xie
		LEFT JOIN xq_order xo ON xo.id = xie.order_id
		WHERE
		xie.iz_delete = 0
        and xie.finance_confirm_amount !=0
		),
		gncdf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gncdf_agent,
		'gncdf' AS fee_type,
		xfci.price AS gncdf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time,
		xfci.payable_amount,
		xfci.paid_amount
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gncdf'
		-- and xfci.customer_id is null
		-- and xfci.supplier_id is null
		-- and xfci.iz_default_color !=0
		AND xfci.agent IS NOT NULL
		AND xfci.agent != ''
		and xfci.order_id is not null
        ),
        shf AS (
        SELECT
        xfci.order_id,
        xfci.agent AS shf_agent,
        'shf' AS fee_type,
        xfci.finance_amount AS shf_price,
        xfci.pay_time,
        xfci.pay_money,
        xfci.application_time,
        xfci.payable_amount,
        xfci.paid_amount
        FROM
        xq_freight_cost_info xfci
        LEFT JOIN xq_order xo ON xo.id = xfci.order_id
        WHERE
        xfci.iz_delete = 0
        AND xfci.fee_type = 'shf'
		-- and xfci.customer_id is null
		-- and xfci.supplier_id is null
        and xfci.order_id is not null
        and xfci.finance_amount != 0
		),
		gnewfy1 AS (
		SELECT
		xfci.order_id,
		xfci.agent ,
		'ewfy1' AS fee_type,
		xfci.finance_amount,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy1'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=1
		) ,
		gnewfy2 AS (
		SELECT
		xfci.order_id,
		xfci.agent,
		'ewfy2' AS fee_type,
		xfci.finance_amount,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy2'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=1
		)

		SELECT
		xod.id AS order_detail_id,
		IFNULL( DATE_FORMAT(xfi.etd, '%Y/%m/%d' ),'-') AS etd,
		IFNULL( IF ( xo.order_type = 1, CONCAT( '仓库订单', '-', xw.NAME ), xc.`name` ), '-' ) AS customer_name,
		IFNULL( xo.order_num, '-' ) AS order_num,
		IFNULL( GROUP_CONCAT(DISTINCT CONCAT_WS(' ',xpi.product_name) SEPARATOR ','), '-' ) AS product_name,
		IFNULL( xfi.ship_company, '-' ) AS ship_company,
		IFNULL( xfi.loading_port, '-' ) AS loading_port,
		IFNULL( xfi.destination_port, '-' ) AS destination_port,
		IFNULL( xfi.bill_of_lading, '-' ) AS bill_of_lading,
		IFNULL( xfi.container_no, '-' ) AS container_no,
		IFNULL( DATE_FORMAT( xfi.eta, '%Y/%m/%d' ),'-' ) AS arrive_port_time,
		IFNULL( gnlyf.gnlyf_price, 0.00 ) AS gnlyf_price,
		IFNULL( gnlyf.gnlyf_agent, '-' ) AS gnlyf_agent,
		IFNULL( gnlyf.pay_money, 0.00 ) AS gnlyfFinanceAmount,
		-- IFNULL( DATE_FORMAT(gnlyf.application_time, '%Y/%m/%d' ), '-' ) AS gnlyfApplicationTime,
		IFNULL( DATE_FORMAT(gnlyf.pay_time, '%Y/%m/%d' ), '-' ) AS gnlyfFinanceAuditTime,
		-- IFNULL( gnlyf.payable_amount, 0.00 ) AS gnlyfPayableAmount,
		-- IFNULL( gnlyf.paid_amount,0.00) AS gnlyfPaidAmount,

		IFNULL( gnbgf.gnbgf_price, 0.00 ) AS gnbgf_price,
		IFNULL( gnbgf.gnbgf_agent, '-' ) AS gnbgf_agent,
		IFNULL( gnbgf.pay_money, 0.00 ) AS gnbgfFinanceAmount,
		-- IFNULL( DATE_FORMAT(gnbgf.application_time, '%Y/%m/%d' ), '-' ) AS gnbgfApplicationTime,
		IFNULL( DATE_FORMAT(gnbgf.pay_time, '%Y/%m/%d' ), '-' ) AS gnbgfFinanceAuditTime,
		-- IFNULL( gnbgf.payable_amount, 0.00 ) AS gnbgfPayableAmount,
		-- IFNULL( gnbgf.paid_amount, 0.00 ) AS gnbgfPaidAmount,

		IFNULL( hybxf.insurance_fee, 0.00 ) AS gnhyf_price,
		IFNULL( hybxf.insurance_company, '-' ) AS gnhyf_agent,
		IFNULL( hybxf.pay_money, 0.00 ) AS gnhyfFinanceAmount,
		-- IFNULL( DATE_FORMAT(hybxf.application_date, '%Y/%m/%d' ), '-' ) AS gnhyfApplicationTime,
		IFNULL( DATE_FORMAT(hybxf.pay_time, '%Y/%m/%d' ), '-' ) AS gnhyfFinanceAuditTime,
		-- IFNULL( hybxf.payable_amount, 0.00 ) AS gnhyfPayableAmount,
		-- IFNULL( hybxf.paid_amount, 0.00 ) AS gnhyfPaidAmount,

		IFNULL( gncdf.gncdf_price, 0.00 ) AS gncdf_price,
		IFNULL( gncdf.gncdf_agent, '-' ) AS gncdf_agent,
		-- IFNULL( DATE_FORMAT(gncdf.application_time, '%Y/%m/%d' ), '-' ) AS gncdfApplicationTime,
		IFNULL( gncdf.pay_money, 0.00 ) AS gncdfFinanceAmount,
		IFNULL( DATE_FORMAT(gncdf.pay_time, '%Y/%m/%d' ), '-' ) AS gncdfFinanceAuditTime,
		-- IFNULL( gncdf.payable_amount, 0.00 ) AS gncdfPayableAmount,
		-- IFNULL( gncdf.paid_amount, 0.00 ) AS gncdfPaidAmount,

        IFNULL( shf.shf_price, 0.00 ) AS shf_price,
        IFNULL( shf.shf_agent, '-' ) AS shf_agent,
		-- IFNULL( DATE_FORMAT(shf.application_time, '%Y/%m/%d' ), '-' ) AS shfApplicationTime,
        IFNULL( shf.pay_money, 0.00 ) AS shfFinanceAmount,
		IFNULL( DATE_FORMAT(shf.pay_time, '%Y/%m/%d' ), '-' ) AS shfFinanceAuditTime,

		IFNULL( gnewfy1.finance_amount, 0.00 ) AS gnewfy1_price,
		IFNULL( gnewfy1.agent, '-' ) AS gnewfy1_agent,
		IFNULL( gnewfy1.pay_money, 0.00 ) AS gnewfy1FinanceAmount,
		IFNULL( SUBSTRING(gnewfy1.pay_time,1,10), '-' ) AS gnewfy1FinanceAuditTime,

		IFNULL( gnewfy2.finance_amount, 0.00 ) AS gnewfy2_price,
		IFNULL( gnewfy2.agent, '-' ) AS gnewfy2_agent,
		IFNULL( gnewfy2.pay_money, 0.00 ) AS gnewfy2FinanceAmount,
		IFNULL( SUBSTRING(gnewfy2.pay_time,1,10), '-' ) AS gnewfy2FinanceAuditTime
		FROM
		xq_order xo
		LEFT JOIN xq_order_detail xod ON xo.id = xod.order_id
		AND xod.iz_delete = 0
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		AND xfi.iz_delete = 0
		LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		AND xc.iz_delete = 0
		LEFT JOIN xq_product_info xpi ON xpi.id = xod.product_id
		AND xpi.iz_delete = 0
		LEFT JOIN gnlyf gnlyf ON gnlyf.order_id = xo.id
		LEFT JOIN gnbgf gnbgf ON gnbgf.order_id = xo.id
		LEFT JOIN hybxf hybxf ON hybxf.order_id = xo.id
		LEFT JOIN gncdf gncdf ON gncdf.order_id = xo.id
        LEFT JOIN shf shf ON shf.order_id = xo.id
		LEFT JOIN gnewfy1 ON gnewfy1.order_id = xo.id
		LEFT JOIN gnewfy2 ON gnewfy2.order_id = xo.id
		WHERE
		xo.iz_delete = 0
        <!--		<if test="dto.customerName!=null and dto.customerName!=''">-->
<!--			AND (xc.name LIKE CONCAT('%', #{dto.customerName}, '%') or xc.abbr LIKE CONCAT('%', #{dto.customerName},-->
<!--			'%') )-->
<!--		</if>-->
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>

		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>
		<if test="dto.gnlyfApplicationTimeStart != null and dto.gnlyfApplicationTimeStart !='' and dto.gnlyfApplicationTimeEnd != null and dto.gnlyfApplicationTimeEnd !=''">
			and gnlyf.application_time between #{dto.gnlyfApplicationTimeStart} and #{dto.gnlyfApplicationTimeEnd}
		</if>
		<if test="dto.gnbgfApplicationTimeStart != null and dto.gnbgfApplicationTimeStart !='' and dto.gnbgfApplicationTimeEnd != null and dto.gnbgfApplicationTimeEnd !=''">
			and gnbgf.application_time between #{dto.gnbgfApplicationTimeStart} and #{dto.gnbgfApplicationTimeEnd}
		</if>
		<if test="dto.gnhyfApplicationTimeStart != null and dto.gnhyfApplicationTimeStart !='' and dto.gnhyfApplicationTimeEnd != null and dto.gnhyfApplicationTimeEnd !=''">
			and hybxf.application_date between #{dto.gnhyfApplicationTimeStart} and #{dto.gnhyfApplicationTimeEnd}
		</if>
		<if test="dto.gncdfApplicationTimeStart != null and dto.gncdfApplicationTimeStart !='' and dto.gncdfApplicationTimeEnd != null and dto.gncdfApplicationTimeEnd !=''">
			and gncdf.application_time between #{dto.gncdfApplicationTimeStart} and #{dto.gncdfApplicationTimeEnd}
		</if>
        <if test="dto.shfApplicationTimeStart != null and dto.shfApplicationTimeStart !='' and dto.shfApplicationTimeEnd != null and dto.shfApplicationTimeEnd !=''">
            and shf.application_time between #{dto.shfApplicationTimeStart} and #{dto.shfApplicationTimeEnd}
        </if>
		<if test="dto.gnlyfAgent != null and dto.gnlyfAgent != ''">
			and gnlyf.gnlyf_agent like concat('%',#{dto.gnlyfAgent},'%')
		</if>
		<if test="dto.gnbgfAgent != null and dto.gnbgfAgent != ''">
			and gnbgf.gnbgf_agent like concat('%',#{dto.gnbgfAgent},'%')
		</if>
		<if test="dto.gnhyfAgent != null and dto.gnhyfAgent != ''">
			and hybxf.insurance_company like concat('%',#{dto.gnhyfAgent},'%')
		</if>

		<if test="dto.gncdfAgent!=null and dto.gncdfAgent!=''">
			and gncdf.gncdf_agent like concat('%',#{dto.gncdfAgent},'%')
		</if>
        <if test="dto.shfAgent!=null and dto.shfAgent!=''">
            and shf.shf_agent like concat('%',#{dto.shfAgent},'%')
        </if>
		<if test="dto.payTimeStartDate != null and dto.payTimeStartDate !='' and dto.payTimeStartEnd != null and dto.payTimeStartEnd !=''">
			and (gnlyf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnbgf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or hybxf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gncdf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or shf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnewfy2.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnewfy1.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd})
		</if>
		-- AND (
		-- EXISTS ( SELECT 1 FROM gnlyf WHERE gnlyf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gnbgf WHERE gnbgf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM hybxf WHERE hybxf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gncdf WHERE gncdf.order_id = xo.id )
		-- )

		GROUP BY
		xo.id
		ORDER BY
		xfi.etd
		<if test="dto.reportFormTimeOrder != null and dto.reportFormTimeOrder !='' and dto.reportFormTimeOrder == 'desc'">
			desc
		</if>
		         ,
		xo.id desc,xod.product_id desc
	</select>


	<select id="sumFreight" resultType="com.interesting.modules.reportform.vo.SumFreightVO">


		WITH gnlyf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gnlyf_agent,
		'gnlyf' AS fee_type,
		xfci.finance_amount AS gnlyf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time,
		xfci.payable_amount,
		xfci.paid_amount
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gnlyf'
		-- AND xfci.customer_id IS NULL
		-- AND xfci.supplier_id IS NULL
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		-- and xfci.iz_default_color !=0
		),
		gnbgf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gnbgf_agent,
		xfci.finance_amount AS gnbgf_price,
		'gnbgf' AS fee_type,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time,
		xfci.payable_amount,
		xfci.paid_amount
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gnbgf'
		-- AND xfci.customer_id IS NULL
		-- AND xfci.supplier_id IS NULL
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		-- and xfci.iz_default_color !=0
		),
		hybxf AS (
		SELECT
		xie.order_id,
		xie.insurance_company,
		xie.finance_confirm_amount AS insurance_fee,
		xie.application_date,
		'hybxf' AS fee_type,
		xie.pay_time,
		xie.pay_money,
		xie.payable_amount,
		xie.paid_amount
		FROM
		xq_insurance_expenses xie
		LEFT JOIN xq_order xo ON xo.id = xie.order_id
		WHERE
		xie.iz_delete = 0
		AND xie.finance_confirm_amount != 0
		),
		gncdf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gncdf_agent,
		'gncdf' AS fee_type,
		xfci.price AS gncdf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time,
		xfci.payable_amount,
		xfci.paid_amount
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gncdf'
		-- AND xfci.customer_id IS NULL
		-- AND xfci.supplier_id IS NULL
		AND xfci.order_id IS NOT NULL
		-- AND xfci.finance_amount != 0
		AND xfci.agent IS NOT NULL
		AND xfci.agent != ''
		-- and xfci.iz_default_color !=0
		),
		shf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS shf_agent,
		'shf' AS fee_type,
		xfci.finance_amount AS shf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time,
		xfci.payable_amount,
		xfci.paid_amount
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'shf'
		-- AND xfci.customer_id IS NULL
		-- AND xfci.supplier_id IS NULL
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		),
		gnewfy1 AS (
		SELECT
		xfci.order_id,
		xfci.agent ,
		'ewfy1' AS fee_type,
		xfci.finance_amount,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy1'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=1
		) ,
		gnewfy2 AS (
		SELECT
		xfci.order_id,
		xfci.agent,
		'ewfy2' AS fee_type,
		xfci.finance_amount,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy2'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=1
		)


		SELECT
		IFNULL( sum( t.gnlyf_price ), 0.00 ) AS totalgnlyf,
		IFNULL( sum( t.gnlyfFinanceAmount ), 0.00 ) AS totalgnlyfFinanceAmount,
		IFNULL( sum( t.gnbgf_price ), 0.00 ) AS totalgnbgf,
		IFNULL( sum( t.gnbgfFinanceAmount ), 0.00 ) AS totalgnbgfFinanceAmount,
		IFNULL( sum( t.gnhyf_price ), 0.00 ) AS totalhybxf,
		IFNULL( sum( t.gnhyfFinanceAmount ), 0.00 ) AS totalhybxfFinanceAmount,
		IFNULL( sum( t.gncdf_price ), 0.00 ) AS totalgncdf,
		IFNULL( sum( t.gncdfFinanceAmount ), 0.00 ) AS totalgncdfFinanceAmount,
		IFNULL( sum( t.shf_price ), 0.00 ) AS totalshf,
		IFNULL( sum( t.shfFinanceAmount ), 0.00 ) AS totalshfFinanceAmount,
		IFNULL( sum( t.gnewfy1Price ), 0.00 ) AS totalgnewfy1Price,
		IFNULL( sum( t.gnewfy1FinanceAmount ), 0.00 ) AS totalgnewfy1FinanceAmount,
		IFNULL( sum( t.gnewfy2Price ), 0.00 ) AS totalgnewfy2Price,
		IFNULL( sum( t.gnewfy2FinanceAmount ), 0.00 ) AS totalgnewfy2FinanceAmount

		FROM
		(
		SELECT
		IFNULL( gnlyf.gnlyf_price, 0.00 ) AS gnlyf_price,
		IFNULL( gnlyf.pay_money, 0.00 ) AS gnlyfFinanceAmount,
		IFNULL( gnbgf.gnbgf_price, 0.00 ) AS gnbgf_price,
		IFNULL( gnbgf.pay_money, 0.00 ) AS gnbgfFinanceAmount,
		IFNULL( hybxf.insurance_fee, 0.00 ) AS gnhyf_price,
		IFNULL( hybxf.pay_money, 0.00 ) AS gnhyfFinanceAmount,
		IFNULL( gncdf.gncdf_price, 0.00 ) AS gncdf_price,
		IFNULL( gncdf.pay_money, 0.00 ) AS gncdfFinanceAmount,
		IFNULL( shf.shf_price, 0.00 ) AS shf_price,
		IFNULL( shf.pay_money, 0.00 ) AS shfFinanceAmount,
		IFNULL( gnewfy1.finance_amount, 0.00 ) AS gnewfy1Price,
		IFNULL( gnewfy1.pay_money, 0.00 ) AS gnewfy1FinanceAmount,
		IFNULL( gnewfy2.finance_amount, 0.00 ) AS gnewfy2Price,
		IFNULL( gnewfy2.pay_money, 0.00 ) AS gnewfy2FinanceAmount
		FROM
		xq_order xo
		LEFT JOIN xq_order_detail xod ON xo.id = xod.order_id
		AND xod.iz_delete = 0
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		AND xfi.iz_delete = 0
		LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		AND xc.iz_delete = 0
		LEFT JOIN xq_product_info xpi ON xpi.id = xod.product_id
		AND xpi.iz_delete = 0
		LEFT JOIN gnlyf gnlyf ON gnlyf.order_id = xo.id
		LEFT JOIN gnbgf gnbgf ON gnbgf.order_id = xo.id
		LEFT JOIN hybxf hybxf ON hybxf.order_id = xo.id
		LEFT JOIN gncdf gncdf ON gncdf.order_id = xo.id
		LEFT JOIN shf shf ON shf.order_id = xo.id
		LEFT JOIN gnewfy1 ON gnewfy1.order_id = xo.id
		LEFT JOIN gnewfy2 ON gnewfy2.order_id = xo.id
		WHERE
		xo.iz_delete = 0
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>

		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>
		<if test="dto.gnlyfApplicationTimeStart != null and dto.gnlyfApplicationTimeStart !='' and dto.gnlyfApplicationTimeEnd != null and dto.gnlyfApplicationTimeEnd !=''">
			and gnlyf.application_time between #{dto.gnlyfApplicationTimeStart} and #{dto.gnlyfApplicationTimeEnd}
		</if>
		<if test="dto.gnbgfApplicationTimeStart != null and dto.gnbgfApplicationTimeStart !='' and dto.gnbgfApplicationTimeEnd != null and dto.gnbgfApplicationTimeEnd !=''">
			and gnbgf.application_time between #{dto.gnbgfApplicationTimeStart} and #{dto.gnbgfApplicationTimeEnd}
		</if>
		<if test="dto.gnhyfApplicationTimeStart != null and dto.gnhyfApplicationTimeStart !='' and dto.gnhyfApplicationTimeEnd != null and dto.gnhyfApplicationTimeEnd !=''">
			and hybxf.application_date between #{dto.gnhyfApplicationTimeStart} and #{dto.gnhyfApplicationTimeEnd}
		</if>
		<if test="dto.gncdfApplicationTimeStart != null and dto.gncdfApplicationTimeStart !='' and dto.gncdfApplicationTimeEnd != null and dto.gncdfApplicationTimeEnd !=''">
			and gncdf.application_time between #{dto.gncdfApplicationTimeStart} and #{dto.gncdfApplicationTimeEnd}
		</if>
		<if test="dto.shfApplicationTimeStart != null and dto.shfApplicationTimeStart !='' and dto.shfApplicationTimeEnd != null and dto.shfApplicationTimeEnd !=''">
			and shf.application_time between #{dto.shfApplicationTimeStart} and #{dto.shfApplicationTimeEnd}
		</if>
		<if test="dto.gnlyfAgent != null and dto.gnlyfAgent != ''">
			and gnlyf.gnlyf_agent like concat('%',#{dto.gnlyfAgent},'%')
		</if>
		<if test="dto.gnbgfAgent != null and dto.gnbgfAgent != ''">
			and gnbgf.gnbgf_agent like concat('%',#{dto.gnbgfAgent},'%')
		</if>
		<if test="dto.gnhyfAgent != null and dto.gnhyfAgent != ''">
			and hybxf.insurance_company like concat('%',#{dto.gnhyfAgent},'%')
		</if>

		<if test="dto.gncdfAgent!=null and dto.gncdfAgent!=''">
			and gncdf.gncdf_agent like concat('%',#{dto.gncdfAgent},'%')
		</if>
		<if test="dto.shfAgent!=null and dto.shfAgent!=''">
			and shf.shf_agent like concat('%',#{dto.shfAgent},'%')
		</if>
		<if test="dto.payTimeStartDate != null and dto.payTimeStartDate !='' and dto.payTimeStartEnd != null and dto.payTimeStartEnd !=''">
			and (gnlyf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnbgf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or hybxf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gncdf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnewfy1.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnewfy2.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or shf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd})
		</if>
		-- AND (
		-- EXISTS ( SELECT 1 FROM gnlyf WHERE gnlyf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gnbgf WHERE gnbgf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM hybxf WHERE hybxf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gncdf WHERE gncdf.order_id = xo.id )
		-- )
		GROUP BY
		xo.id
		ORDER BY
		xfi.etd
		<if test="dto.reportFormTimeOrder != null and dto.reportFormTimeOrder !='' and dto.reportFormTimeOrder == 'desc'">
			desc
		</if>,
		xo.id DESC,
		xod.product_id DESC
		) t
	</select>

	<select id="freightGWReport" resultType="com.interesting.modules.reportform.vo.FreightGWReportVO">
		-- 国内海运费
		WITH gnhyf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gnhyf_agent,
		'gnhyf' AS fee_type,
		xfci.finance_amount AS gnhyf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gnhyf'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0

		),
		-- 国内港杂费
		gngzf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gngzf_agent,
		xfci.finance_amount AS gngzf_price,
		'gngzf' AS fee_type,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gngzf'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		),
		-- 清关关费
		qggs AS (
		SELECT
		xfci.order_id,
		xfci.agent AS qggs_agent,
		xfci.finance_amount AS qggs_price,
		'qggs' AS fee_type,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'qggs'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		),
		gwqgf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gwqgf_agent,
		'gwqgf' AS fee_type,
		xfci.finance_amount AS gwqgf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gwqgf'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		),
		gwkcf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gwkcf_agent,
		'gwkcf' AS fee_type,
		xfci.finance_amount AS gwkcf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type LIKE 'gwkcf%'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		),
		ewfy1 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy1_agent,
		'ewfy1' AS fee_type,
		xfci.finance_amount AS ewfy1_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy1'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy2 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy2_agent,
		'ewfy2' AS fee_type,
		xfci.finance_amount AS ewfy2_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy2'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy3 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy3_agent,
		'ewfy3' AS fee_type,
		xfci.finance_amount AS ewfy3_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy3'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy4 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy4_agent,
		'ewfy4' AS fee_type,
		xfci.finance_amount AS ewfy4_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy4'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy5 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy5_agent,
		'ewfy5' AS fee_type,
		xfci.finance_amount AS ewfy5_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy5'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy6 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy6_agent,
		'ewfy6' AS fee_type,
		xfci.finance_amount AS ewfy6_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy6'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		gnewfy3 AS (
		SELECT
		xfci.order_id,
		xfci.agent ,
		'ewfy3' AS fee_type,
		xfci.finance_amount,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy3'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=1
		) ,
		gnewfy4 AS (
		SELECT
		xfci.order_id,
		xfci.agent,
		'ewfy4' AS fee_type,
		xfci.finance_amount,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy4'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=1
		)

		SELECT
		xod.id AS order_detail_id,
		IFNULL(DATE_FORMAT( xfi.etd, '%Y/%m/%d' ), '-' ) AS etd,
		IFNULL( IF ( xo.order_type = 1, CONCAT( '仓库订单', '-', xw.NAME ), xc.`name` ), '-' ) AS customer_name,
		IFNULL( xo.order_num, '-' ) AS order_num,
		IFNULL( GROUP_CONCAT(DISTINCT CONCAT_WS(' ',xpi.product_name) SEPARATOR ','), '-' ) AS product_name,
		IFNULL( xfi.ship_company, '-' ) AS ship_company,
		IFNULL( xfi.loading_port, '-' ) AS loading_port,
		IFNULL( xfi.destination_port, '-' ) AS destination_port,
		IFNULL( xfi.bill_of_lading, '-' ) AS bill_of_lading,
		IFNULL( xfi.container_no, '-' ) AS container_no,
		IFNULL( DATE_FORMAT( xfi.eta, '%Y/%m/%d' ),'-' ) AS arrive_port_time,

		IFNULL( gnhyf.gnhyf_price, 0.00 ) AS gnhyf_price,
		IFNULL( gnhyf.gnhyf_agent, '-' ) AS gnhyf_agent,
		IFNULL( gnhyf.pay_money, 0.00 ) AS gnhyfFinanceAmount,
		IFNULL( SUBSTRING(gnhyf.pay_time,1,10), '-' ) AS gnhyfFinanceAuditTime,
		-- IFNULL( gnhyf.application_time, '-' ) AS gnhyfApplicationTime,

		IFNULL( gngzf.gngzf_price, 0.00 ) AS gngzf_price,
		IFNULL( gnhyf.gnhyf_agent, '-' ) AS gngzf_agent,
		IFNULL( gngzf.pay_money, 0.00 ) AS gngzfFinanceAmount,
		IFNULL( SUBSTRING(gngzf.pay_time,1,10), '-' ) AS gngzfFinanceAuditTime,
		-- IFNULL( gngzf.application_time, '-' ) AS gngzfApplicationTime,

		IFNULL( qggs.qggs_price, 0.00 ) + IFNULL( gwqgf.gwqgf_price, 0.00 ) AS gwqgf_price,
		IFNULL( gwqgf.gwqgf_agent, '-' ) AS gwqgf_agent,
		IFNULL( gwqgf.pay_money, 0.00 ) + IFNULL( qggs.pay_money, 0.00 ) AS gwqgfFinanceAmount,
		IFNULL( SUBSTRING(gwqgf.pay_time,1,10), '-' ) AS gwqgfFinanceAuditTime,
		-- IFNULL( gwqgf.application_time, '-' ) AS gwqgfApplicationTime,

		IFNULL( gwkcf.gwkcf_price, 0.00 ) AS gwkcf_price,
		IFNULL( gwkcf.gwkcf_agent, '-' ) AS gwkcf_agent,
		IFNULL( gwkcf.pay_money, 0.00 ) AS gwkcfFinanceAmount,
		IFNULL( SUBSTRING(gwkcf.pay_time,1,10), '-' ) AS gwkcfFinanceAuditTime,
		-- IFNULL( gwkcf.application_time, '-' ) AS gwkcfApplicationTime

		IFNULL( ewfy1.ewfy1_price, 0.00 ) AS ewfy1_price,
		IFNULL( ewfy1.ewfy1_agent, '-' ) AS ewfy1_agent,
		IFNULL( ewfy1.pay_money, 0.00 ) AS ewfy1FinanceAmount,
		IFNULL( SUBSTRING(ewfy1.pay_time,1,10), '-' ) AS ewfy1FinanceAuditTime,
		-- IFNULL( ewfy1.application_time, '-' ) AS ewfy1ApplicationTime,

		IFNULL( ewfy2.ewfy2_price, 0.00 ) AS ewfy2_price,
		IFNULL( ewfy2.ewfy2_agent, '-' ) AS ewfy2_agent,
		IFNULL( ewfy2.pay_money, 0.00 ) AS ewfy2FinanceAmount,
		IFNULL( SUBSTRING(ewfy2.pay_time,1,10), '-' ) AS ewfy2FinanceAuditTime,
		-- IFNULL( ewfy2.application_time, '-' ) AS ewfy2ApplicationTime,

		IFNULL( ewfy3.ewfy3_price, 0.00 ) AS ewfy3_price,
		IFNULL( ewfy3.ewfy3_agent, '-' ) AS ewfy3_agent,
		IFNULL( ewfy3.pay_money, 0.00 ) AS ewfy3FinanceAmount,
		IFNULL( SUBSTRING(ewfy3.pay_time,1,10), '-' ) AS ewfy3FinanceAuditTime,
		-- IFNULL( ewfy3.application_time, '-' ) AS ewfy3ApplicationTime,

		IFNULL( ewfy4.ewfy4_price, 0.00 ) AS ewfy4_price,
		IFNULL( ewfy4.ewfy4_agent, '-' ) AS ewfy4_agent,
		IFNULL( ewfy4.pay_money, 0.00 ) AS ewfy4FinanceAmount,
		IFNULL( SUBSTRING(ewfy4.pay_time,1,10), '-' ) AS ewfy4FinanceAuditTime,
		-- IFNULL( ewfy4.application_time, '-' ) AS ewfy4ApplicationTime,

		IFNULL( ewfy5.ewfy5_price, 0.00 ) AS ewfy5_price,
		IFNULL( ewfy5.ewfy5_agent, '-' ) AS ewfy5_agent,
		IFNULL( ewfy5.pay_money, 0.00 ) AS ewfy5FinanceAmount,
		IFNULL( SUBSTRING(ewfy5.pay_time,1,10), '-' ) AS ewfy5FinanceAuditTime,
		-- IFNULL( ewfy5.application_time, '-' ) AS ewfy5ApplicationTime,

		IFNULL( ewfy6.ewfy6_price, 0.00 ) AS ewfy6_price,
		IFNULL( ewfy6.ewfy6_agent, '-' ) AS ewfy6_agent,
		IFNULL( ewfy6.pay_money, 0.00 ) AS ewfy6FinanceAmount,
		IFNULL( SUBSTRING(ewfy6.pay_time,1,10), '-' ) AS ewfy6FinanceAuditTime,
		-- IFNULL( ewfy6.application_time, '-' ) AS ewfy6ApplicationTime

		IFNULL( gnewfy3.finance_amount, 0.00 ) AS gnewfy3_price,
		IFNULL( gnewfy3.agent, '-' ) AS gnewfy3_agent,
		IFNULL( gnewfy3.pay_money, 0.00 ) AS gnewfy3FinanceAmount,
		IFNULL( SUBSTRING(gnewfy3.pay_time,1,10), '-' ) AS gnewfy3FinanceAuditTime,

		IFNULL( gnewfy4.finance_amount, 0.00 ) AS gnewfy4_price,
		IFNULL( gnewfy4.agent, '-' ) AS gnewfy4_agent,
		IFNULL( gnewfy4.pay_money, 0.00 ) AS gnewfy4FinanceAmount,
		IFNULL( SUBSTRING(gnewfy4.pay_time,1,10), '-' ) AS gnewfy4FinanceAuditTime
		FROM
		xq_order xo
		LEFT JOIN xq_order_detail xod ON xo.id = xod.order_id
		AND xod.iz_delete = 0
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		AND xfi.iz_delete = 0
		LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		AND xc.iz_delete = 0
		LEFT JOIN xq_product_info xpi ON xpi.id = xod.product_id
		AND xpi.iz_delete = 0
		LEFT JOIN gnhyf gnhyf ON gnhyf.order_id = xo.id
		LEFT JOIN gngzf gngzf ON gngzf.order_id = xo.id
		LEFT JOIN qggs qggs ON qggs.order_id = xo.id
		LEFT JOIN gwqgf ON gwqgf.order_id = xo.id
		LEFT JOIN gwkcf gwkcf ON gwkcf.order_id = xo.id
		LEFT JOIN ewfy1 ewfy1 ON ewfy1.order_id = xo.id
		LEFT JOIN ewfy2 ewfy2 ON ewfy2.order_id = xo.id
		LEFT JOIN ewfy3 ewfy3 ON ewfy3.order_id = xo.id
		LEFT JOIN ewfy4 ewfy4 ON ewfy4.order_id = xo.id
		LEFT JOIN ewfy5 ewfy5 ON ewfy5.order_id = xo.id
		LEFT JOIN ewfy6 ewfy6 ON ewfy6.order_id = xo.id
		LEFT JOIN gnewfy3 ON gnewfy3.order_id = xo.id
		LEFT JOIN gnewfy4 ON gnewfy4.order_id = xo.id
		WHERE
		xo.iz_delete = 0
		/* AND (
		EXISTS ( SELECT 1 FROM gnhyf WHERE gnhyf.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM gngzf WHERE gngzf.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM qggs WHERE qggs.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM gwqgf WHERE gwqgf.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM gwkcf WHERE gwkcf.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM ewfy2 WHERE ewfy2.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM ewfy1 WHERE ewfy1.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM ewfy3 WHERE ewfy3.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM ewfy4 WHERE ewfy4.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM ewfy5 WHERE ewfy5.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM ewfy6 WHERE ewfy6.order_id = xo.id )
		)
		*/
<!--		<if test="dto.customerName!=null and dto.customerName!=''">-->
<!--			AND (xc.name LIKE CONCAT('%', #{dto.customerName}, '%') or xc.abbr LIKE CONCAT('%', #{dto.customerName},-->
<!--			'%') )-->
<!--		</if>-->
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>

		<if test="dto.shipCompany != null and dto.shipCompany != ''">
			and xfi.ship_company like concat('%',#{dto.shipCompany},'%')
		</if>

        <if test="dto.gnhyfAgent != null and dto.gnhyfAgent != ''">
            and gnhyf.gnhyf_agent like concat('%',#{dto.gnhyfAgent},'%')
        </if>

        <if test="dto.gngzfAgent != null and dto.gngzfAgent != ''">
            and gngzf.gngzf_agent like concat('%',#{dto.gngzfAgent},'%')
        </if>
        <if test="dto.gwqgfAgent != null and dto.gwqgfAgent != ''">
            and gwqgf.gwqgf_agent like concat('%',#{dto.gwqgfAgent},'%')
        </if>

        <if test="dto.gwkcfAgent != null and dto.gwkcfAgent != ''">
            and gwkcf.gwkcf_agent like concat('%',#{dto.gwkcfAgent},'%')
        </if>

        <if test="dto.ewfy1Agent != null and dto.ewfy1Agent != ''">
            and ewfy1.ewfy1_agent like concat('%',#{dto.ewfy1Agent},'%')
        </if>

        <if test="dto.ewfy2Agent != null and dto.ewfy2Agent != ''">
            and ewfy2.ewfy2_agent like concat('%',#{dto.ewfy2Agent},'%')
        </if>

        <if test="dto.ewfy3Agent != null and dto.ewfy3Agent != ''">
            and ewfy3.ewfy1_agent like concat('%',#{dto.ewfy3Agent},'%')
        </if>

        <if test="dto.ewfy4Agent != null and dto.ewfy4Agent != ''">
            and ewfy4.ewfy4_agent like concat('%',#{dto.ewfy4Agent},'%')
        </if>

        <if test="dto.ewfy5Agent != null and dto.ewfy5Agent != ''">
            and ewfy5.ewfy5_agent like concat('%',#{dto.ewfy5Agent},'%')
        </if>

        <if test="dto.ewfy6Agent != null and dto.ewfy6Agent != ''">
            and ewfy1.ewfy6_agent like concat('%',#{dto.ewfy6Agent},'%')
        </if>

        <if test="dto.gwcyfAgent != null and dto.gwcyfAgent != ''">
            and gwcyf.gwcyf_agent like concat('%',#{dto.gwcyfAgent},'%')
        </if>
		<if test="dto.payTimeStartDate != null and dto.payTimeStartDate !='' and dto.payTimeStartEnd != null and dto.payTimeStartEnd !=''">
			and (gnhyf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gngzf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gwqgf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gwkcf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy1.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy2.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy3.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy4.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy5.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy6.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnewfy3.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnewfy4.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}

			    )
		</if>


        GROUP BY
		xo.id
		ORDER BY
		xfi.etd
		<if test="dto.reportFormTimeOrder != null and dto.reportFormTimeOrder !='' and dto.reportFormTimeOrder == 'desc'">
			desc
		</if>
		         ,
		xo.id desc,xod.product_id desc
	</select>

	<select id="sumFreightGWReport" resultType="com.interesting.modules.reportform.vo.SumFreightGWVO">

		WITH gnhyf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gnhyf_agent,
		'gnhyf' AS fee_type,
		xfci.finance_amount AS gnhyf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gnhyf'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0

		),
		-- 国内港杂费
		gngzf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gngzf_agent,
		xfci.finance_amount AS gngzf_price,
		'gngzf' AS fee_type,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gngzf'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		),
		-- 清关关费
		qggs AS (
		SELECT
		xfci.order_id,
		xfci.agent AS qggs_agent,
		xfci.finance_amount AS qggs_price,
		'qggs' AS fee_type,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'qggs'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		),
		gwqgf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gwqgf_agent,
		'gwqgf' AS fee_type,
		xfci.finance_amount AS gwqgf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gwqgf'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		),
		gwkcf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gwkcf_agent,
		'gwkcf' AS fee_type,
		xfci.finance_amount AS gwkcf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type LIKE 'gwkcf%'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		),
		ewfy1 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy1_agent,
		'ewfy1' AS fee_type,
		xfci.finance_amount AS ewfy1_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy1'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy2 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy2_agent,
		'ewfy2' AS fee_type,
		xfci.finance_amount AS ewfy2_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy2'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy3 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy3_agent,
		'ewfy3' AS fee_type,
		xfci.finance_amount AS ewfy3_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy3'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy4 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy4_agent,
		'ewfy4' AS fee_type,
		xfci.finance_amount AS ewfy4_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy4'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy5 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy5_agent,
		'ewfy5' AS fee_type,
		xfci.finance_amount AS ewfy5_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy5'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy6 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy6_agent,
		'ewfy6' AS fee_type,
		xfci.finance_amount AS ewfy6_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy6'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		gnewfy3 AS (
		SELECT
		xfci.order_id,
		xfci.agent ,
		'ewfy3' AS fee_type,
		xfci.finance_amount,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy3'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=1
		) ,
		gnewfy4 AS (
		SELECT
		xfci.order_id,
		xfci.agent,
		'ewfy4' AS fee_type,
		xfci.finance_amount,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy4'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=1
		)
		select
		(ifnull(sum(gngzf_price),0.00) + ifnull(sum(gnewfy3_price),0.00) + ifnull(sum(gnewfy4_price),0.00))as totalgngzf,
		(ifnull(sum(gngzfFinanceAmount),0.00) + ifnull(sum(gnewfy3FinanceAmount),0.00) + ifnull(sum(gnewfy4FinanceAmount),0.00)) as totalgngzfFinanceAmount,
		(ifnull(sum(gnhyf_price),0.00)+ ifnull(sum(gwqgf_price),0.00)+
		ifnull(sum(gwkcf_price),0.00)+ ifnull(sum(ewfy1_price),0.00)+
		ifnull(sum(ewfy2_price),0.00)+ ifnull(sum(ewfy3_price),0.00)+
		ifnull(sum(ewfy4_price),0.00) + ifnull(sum(ewfy5_price),0.00)+
		ifnull(sum(ewfy6_price),0.00) ) as totalOther,
		(ifnull(sum(gnhyfFinanceAmount),0.00)+ ifnull(sum(gwqgfFinanceAmount),0.00)+
		ifnull(sum(gwkcfFinanceAmount),0.00)+ ifnull(sum(ewfy1FinanceAmount),0.00)+
		ifnull(sum(ewfy2FinanceAmount),0.00)+ifnull(sum(ewfy3FinanceAmount),0.00)+
		ifnull(sum(ewfy4FinanceAmount),0.00)+ifnull(sum(ewfy5FinanceAmount),0.00)+
		ifnull(sum(ewfy6FinanceAmount),0.00) ) as totalOtherFinanceAmount
		from (
		SELECT
		IFNULL( gnhyf.gnhyf_price, 0.00 ) AS gnhyf_price,
		IFNULL( gnhyf.pay_money, 0.00 ) AS gnhyfFinanceAmount,

		IFNULL( gngzf.gngzf_price, 0.00 ) AS gngzf_price,
		IFNULL( gngzf.pay_money, 0.00 ) AS gngzfFinanceAmount,

		IFNULL( qggs.qggs_price, 0.00 ) + IFNULL( gwqgf.gwqgf_price, 0.00 ) AS gwqgf_price,
		IFNULL( gwqgf.pay_money, 0.00 ) + IFNULL( qggs.pay_money, 0.00 ) AS gwqgfFinanceAmount,

		IFNULL( gwkcf.gwkcf_price, 0.00 ) AS gwkcf_price,
		IFNULL( gwkcf.pay_money, 0.00 ) AS gwkcfFinanceAmount,

		IFNULL( ewfy1.ewfy1_price, 0.00 ) AS ewfy1_price,
		IFNULL( ewfy1.pay_money, 0.00 ) AS ewfy1FinanceAmount,

		IFNULL( ewfy2.ewfy2_price, 0.00 ) AS ewfy2_price,
		IFNULL( ewfy2.pay_money, 0.00 ) AS ewfy2FinanceAmount,

		IFNULL( ewfy3.ewfy3_price, 0.00 ) AS ewfy3_price,
		IFNULL( ewfy3.pay_money, 0.00 ) AS ewfy3FinanceAmount,

		IFNULL( ewfy4.ewfy4_price, 0.00 ) AS ewfy4_price,
		IFNULL( ewfy4.pay_money, 0.00 ) AS ewfy4FinanceAmount,

		IFNULL( ewfy5.ewfy5_price, 0.00 ) AS ewfy5_price,
		IFNULL( ewfy5.pay_money, 0.00 ) AS ewfy5FinanceAmount,

		IFNULL( ewfy6.ewfy6_price, 0.00 ) AS ewfy6_price,
		IFNULL( ewfy6.pay_money, 0.00 ) AS ewfy6FinanceAmount,

		IFNULL( gnewfy3.finance_amount, 0.00 ) AS gnewfy3_price,
		IFNULL( gnewfy3.pay_money, 0.00 ) AS gnewfy3FinanceAmount,

		IFNULL( gnewfy4.finance_amount, 0.00 ) AS gnewfy4_price,
		IFNULL( gnewfy4.pay_money, 0.00 ) AS gnewfy4FinanceAmount


		FROM
		xq_order xo
		LEFT JOIN xq_order_detail xod ON xo.id = xod.order_id
		AND xod.iz_delete = 0
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		AND xfi.iz_delete = 0
		LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		AND xc.iz_delete = 0
		LEFT JOIN xq_product_info xpi ON xpi.id = xod.product_id
		AND xpi.iz_delete = 0
		LEFT JOIN gnhyf gnhyf ON gnhyf.order_id = xo.id
		LEFT JOIN gngzf gngzf ON gngzf.order_id = xo.id
		LEFT JOIN qggs qggs ON qggs.order_id = xo.id
		LEFT JOIN gwqgf ON gwqgf.order_id = xo.id
		LEFT JOIN gwkcf gwkcf ON gwkcf.order_id = xo.id
		LEFT JOIN ewfy1 ewfy1 ON ewfy1.order_id = xo.id
		LEFT JOIN ewfy2 ewfy2 ON ewfy2.order_id = xo.id
		LEFT JOIN ewfy3 ewfy3 ON ewfy3.order_id = xo.id
		LEFT JOIN ewfy4 ewfy4 ON ewfy4.order_id = xo.id
		LEFT JOIN ewfy5 ewfy5 ON ewfy5.order_id = xo.id
		LEFT JOIN ewfy6 ewfy6 ON ewfy6.order_id = xo.id
		LEFT JOIN gnewfy3 ON gnewfy3.order_id = xo.id
		LEFT JOIN gnewfy4 ON gnewfy4.order_id = xo.id
		WHERE
		xo.iz_delete = 0
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>

		<if test="dto.shipCompany != null and dto.shipCompany != ''">
			and xfi.ship_company like concat('%',#{dto.shipCompany},'%')
		</if>

		<if test="dto.gnhyfAgent != null and dto.gnhyfAgent != ''">
			and gnhyf.gnhyf_agent like concat('%',#{dto.gnhyfAgent},'%')
		</if>

		<if test="dto.gngzfAgent != null and dto.gngzfAgent != ''">
			and gngzf.gngzf_agent like concat('%',#{dto.gngzfAgent},'%')
		</if>
		<if test="dto.gwqgfAgent != null and dto.gwqgfAgent != ''">
			and gwqgf.gwqgf_agent like concat('%',#{dto.gwqgfAgent},'%')
		</if>

		<if test="dto.gwkcfAgent != null and dto.gwkcfAgent != ''">
			and gwkcf.gwkcf_agent like concat('%',#{dto.gwkcfAgent},'%')
		</if>

		<if test="dto.ewfy1Agent != null and dto.ewfy1Agent != ''">
			and ewfy1.ewfy1_agent like concat('%',#{dto.ewfy1Agent},'%')
		</if>

		<if test="dto.ewfy2Agent != null and dto.ewfy2Agent != ''">
			and ewfy2.ewfy2_agent like concat('%',#{dto.ewfy2Agent},'%')
		</if>

		<if test="dto.ewfy3Agent != null and dto.ewfy3Agent != ''">
			and ewfy3.ewfy1_agent like concat('%',#{dto.ewfy3Agent},'%')
		</if>

		<if test="dto.ewfy4Agent != null and dto.ewfy4Agent != ''">
			and ewfy4.ewfy4_agent like concat('%',#{dto.ewfy4Agent},'%')
		</if>

		<if test="dto.ewfy5Agent != null and dto.ewfy5Agent != ''">
			and ewfy5.ewfy5_agent like concat('%',#{dto.ewfy5Agent},'%')
		</if>

		<if test="dto.ewfy6Agent != null and dto.ewfy6Agent != ''">
			and ewfy1.ewfy6_agent like concat('%',#{dto.ewfy6Agent},'%')
		</if>

		<if test="dto.gwcyfAgent != null and dto.gwcyfAgent != ''">
			and gwcyf.gwcyf_agent like concat('%',#{dto.gwcyfAgent},'%')
		</if>
		<if test="dto.payTimeStartDate != null and dto.payTimeStartDate !='' and dto.payTimeStartEnd != null and dto.payTimeStartEnd !=''">
			and (gnhyf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gngzf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gwqgf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gwkcf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy1.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy2.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy3.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy4.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy5.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy6.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnewfy3.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnewfy4.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd})
		</if>
		-- AND (
		-- EXISTS ( SELECT 1 FROM gnhyf WHERE gnhyf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gngzf WHERE gngzf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM qggs WHERE qggs.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gwqgf WHERE gwqgf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gwkcf WHERE gwkcf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy2 WHERE ewfy2.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy1 WHERE ewfy1.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy3 WHERE ewfy3.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy4 WHERE ewfy4.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy5 WHERE ewfy5.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy6 WHERE ewfy6.order_id = xo.id )
		-- )
		--

		GROUP BY
		xo.id
		ORDER BY
		xfi.etd
		<if test="dto.reportFormTimeOrder != null and dto.reportFormTimeOrder !='' and dto.reportFormTimeOrder == 'desc'">
			desc
		</if>
		,
		xo.id desc,xod.product_id desc
		) t
	</select>




	<select id="freightTYReport" resultType="com.interesting.modules.reportform.vo.FreightTYReportVO">
		WITH gnhyf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gnhyf_agent,
		'gnhyf' AS fee_type,
        xfci.price AS gnhyf_price,
        xfci.application_time,
		xfci.pay_time,
		xfci.pay_money
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gnhyf'
		AND xfci.iz_return_fee = 1

		),
		gngzf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gngzf_agent,
        xfci.price AS gngzf_price,
        xfci.application_time,
		'gngzf' AS fee_type,
		xfci.pay_time,
		xfci.pay_money
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gngzf'
		AND xfci.iz_return_fee = 1

		),
		gwkcf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gwkcf_agent,
		'gwkcf' AS fee_type,
        xfci.price AS gwkcf_price,
        xfci.application_time,
		xfci.pay_time,
		xfci.pay_money
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gwkcf'
		AND xfci.iz_return_fee = 1

		),
		ewfy1 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy1_agent,
		'ewfy1' AS fee_type,
        xfci.price AS ewfy1_price,
        xfci.application_time,
		xfci.pay_time,
		xfci.pay_money
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy1'
		AND xfci.iz_return_fee = 1

		) SELECT
		xod.id AS order_detail_id,
        IFNULL(DATE_FORMAT( xfi.etd, '%Y/%m/%d' ), '-' ) AS etd,
		IFNULL( IF ( xo.order_type = 1, CONCAT( '仓库订单', '-', xw.NAME,' ','客户名称','-',xc.`name` ), xc.`name` ), '-' ) AS
		customer_name,
        IFNULL( xo.order_num, '-' ) AS order_num,
        IFNULL( xpi.product_name, '-' ) AS product_name,
        IFNULL( xfi.ship_company, '-' ) AS ship_company,
        IFNULL( xfi.loading_port, '-' ) AS loading_port,
        IFNULL( xfi.destination_port, '-' ) AS destination_port,
        IFNULL( xfi.bill_of_lading, '-' ) AS bill_of_lading,
        IFNULL( xfi.container_no, '-' ) AS container_no,
        IFNULL(DATE_FORMAT( xfi.arrive_port_time, '%Y/%m/%d' ), '-' ) AS arrive_port_time,

		IFNULL( gnhyf.gnhyf_price, 0.00 ) AS gnhyf_price,
        IFNULL( gnhyf.gnhyf_agent, '-' ) AS gnhyf_agent,
		IFNULL( gnhyf.pay_money, 0.00 ) AS gnhyfFinanceAmount,
        IFNULL( DATE_FORMAT(gnhyf.application_time, '%Y-%m-%d' ), '-' ) AS gnhyfApplicationTime,
        IFNULL( DATE_FORMAT(gnhyf.pay_time, '%Y-%m-%d' ), '-' ) AS gnhyfFinanceAuditTime,

		IFNULL( gngzf.gngzf_price, 0.00 ) AS gngzf_price,
        IFNULL( gngzf.gngzf_agent, '-' ) AS gngzf_agent,
		IFNULL( gngzf.pay_money, 0.00 ) AS gngzfFinanceAmount,
        IFNULL( DATE_FORMAT(gngzf.application_time, '%Y-%m-%d' ), '-' ) AS gngzfApplicationTime,
        IFNULL( DATE_FORMAT(gngzf.pay_time, '%Y-%m-%d' ), '-' ) AS gngzfFinanceAuditTime,

		IFNULL( gwkcf.gwkcf_price,0.00 ) AS gwkcf_price,
        IFNULL( gwkcf.gwkcf_agent, '-' ) AS gwkcf_agent,
		IFNULL( gwkcf.pay_money, 0.00 ) AS gwkcfFinanceAmount,
        IFNULL( DATE_FORMAT(gwkcf.application_time, '%Y-%m-%d' ), '-' ) AS gwkcfApplicationTime,
        IFNULL( DATE_FORMAT(gwkcf.pay_time, '%Y-%m-%d' ), '-' ) AS gwkcfFinanceAuditTime,

		IFNULL( ewfy1.ewfy1_price, 0.00 ) AS ewfy1_price,
        IFNULL( ewfy1.ewfy1_agent, '-' ) AS ewfy1_agent,
		IFNULL( ewfy1.pay_money, 0.00 ) AS ewfy1FinanceAmount,
        IFNULL( DATE_FORMAT(ewfy1.application_time, '%Y-%m-%d' ), '-' ) AS ewfy1ApplicationTime,
        IFNULL( DATE_FORMAT(ewfy1.pay_time, '%Y-%m-%d' ), '-' ) AS ewfy1FinanceAuditTime,
		gnhyf.fee_type AS gnhyf_fee_type,
		gngzf.fee_type AS gngzf_fee_type,
		gwkcf.fee_type AS gwkcf_fee_type,
		ewfy1.fee_type AS ewfy1_fee_type
		FROM
		(
		SELECT xo.* FROM xq_order xo
		INNER JOIN xq_freight_cost_info fci ON xo.id = fci.order_id
		WHERE xo.iz_delete = 0 AND fci.iz_delete = 0 AND fci.iz_return_fee = 1
		) AS xo
		LEFT JOIN xq_order_detail xod ON xo.id = xod.order_id
		AND xod.iz_delete = 0
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		AND xfi.iz_delete = 0
		LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		AND xc.iz_delete = 0
		LEFT JOIN xq_product_info xpi ON xpi.id = xod.product_id
		AND xpi.iz_delete = 0
		LEFT JOIN gnhyf gnhyf ON gnhyf.order_id = xo.id
		LEFT JOIN gngzf gngzf ON gngzf.order_id = xo.id
		LEFT JOIN gwkcf gwkcf ON gwkcf.order_id = xo.id
		LEFT JOIN ewfy1 ewfy1 ON ewfy1.order_id = xo.id
		WHERE
		xo.iz_delete = 0
		-- AND (
		-- EXISTS ( SELECT 1 FROM gnhyf WHERE gnhyf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gngzf WHERE gngzf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gwkcf WHERE gwkcf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy1 WHERE ewfy1.order_id = xo.id )
		-- )
		<if test="dto.payDateStart != null and dto.payDateStart != '' and dto.payDateEnd != null and dto.payDateEnd != ''">
			and ((gnhyf.pay_time between #{dto.payDateStart} and #{dto.payDateEnd}) or (gngzf.pay_time between #{dto.payDateStart} and #{dto.payDateEnd})
			or (gwkcf.pay_time between #{dto.payDateStart} and #{dto.payDateEnd}) or (ewfy1.pay_time between #{dto.payDateStart} and #{dto.payDateEnd}))
		</if>

		<if test="dto.applicationDateStart != null and dto.applicationDateStart != '' and dto.applicationDateEnd != null and dto.applicationDateEnd != ''">
			and ((gnhyf.application_time between #{dto.applicationDateStart} and #{dto.applicationDateEnd}) or (gngzf.application_time between #{dto.applicationDateStart} and #{dto.applicationDateEnd})
			or (gwkcf.application_time between #{dto.applicationDateStart} and #{dto.applicationDateEnd}) or (ewfy1.application_time between #{dto.applicationDateStart} and #{dto.applicationDateEnd}))
		</if>
		<if test="dto.customerName!=null and dto.customerName!=''">
			AND (xc.name LIKE CONCAT('%', #{dto.customerName}, '%') or xc.abbr LIKE CONCAT('%', #{dto.customerName},
			'%') )
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
        <!--<if test="dto.productName != null and dto.productName != ''">-->
        <!--and xpi.product_name like concat('%',#{dto.productName},'%')-->
        <!--</if>-->
		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>
        <!--<if test="dto.loadingPort != null and dto.loadingPort != ''">-->
        <!--and xfi.loading_port like concat('%',#{dto.loadingPort},'%')-->
        <!--</if>-->
        <!--<if test="dto.destinationPort != null and dto.destinationPort != ''">-->
        <!--and xfi.destination_port like concat('%',#{dto.destinationPort},'%')-->
        <!--</if>-->
        <!--<if test="dto.shipCompany != null and dto.shipCompany != ''">-->
        <!--and xfi.ship_company like concat('%',#{dto.shipCompany},'%')-->
        <!--</if>-->

        <!--<if test="dto.billOfLading!=null and dto.billOfLading!=''">-->
        <!--and xfi.bill_of_lading like concat('%',#{dto.billOfLading},'%')-->
        <!--</if>-->
        <!--<if test="dto.containerNo != null and dto.containerNo != ''">-->
        <!--and xfi.container_no like concat('%',#{dto.containerNo},'%')-->
        <!--</if>-->
		GROUP BY
		xo.id
		ORDER BY
		xfi.etd DESC,
		xo.id desc,xod.product_id desc
	</select>

	<select id="freightKYReport" resultType="com.interesting.modules.reportform.vo.FreightKYReportVO">
		select id,
		bill_of_landing_date,
		bill_of_landing_no,
		factory_name,
		customer,
		port_of_destination,
		gnfy,
		gnhkje,
		gnsjfkr,
		qghd,
		gwfy,
		gwhkje,
		gwsjfkr,
		remark,
		finance_remark,
		airport_name
		from xq_airport
		where iz_delete=0
		<if test="dto != null">
			<if test="dto.billOfLandingNo != null and dto.billOfLandingNo != ''">
				AND bill_of_landing_no LIKE CONCAT('%', #{dto.billOfLandingNo}, '%')
			</if>
			<if test="dto.factoryName != null and dto.factoryName != ''">
				AND factory_name LIKE CONCAT('%', #{dto.factoryName}, '%')
			</if>
			<if test="dto.customer != null and dto.customer != ''">
				AND customer LIKE CONCAT('%', #{dto.customer}, '%')
			</if>
			<if test="dto.portOfDestination != null and dto.portOfDestination != ''">
				AND port_of_destination LIKE CONCAT('%', #{dto.portOfDestination}, '%')
			</if>
		</if>
		order by create_time desc
	</select>

	<select id="freightKCReport" resultType="com.interesting.modules.reportform.vo.FreightKCReportVO">
		select
		GROUP_CONCAT(NULLIF(CONCAT_WS(',',xo.order_num),'')) as order_num,
		ifNull(xti.`customer_order_num`,'-') as customer_order_num,
		ifNull(xti.`truck_company`,'-') as truck_company,
		ifNull(sum(xti.`truck_fee`),0.00) as truck_fee,
		ifNull(xti.`remark`,'-') as remark,
		xti.apply_date ,
		xti.pay_date ,
		ifNull(sum(xti.`payed_price`),0.00) as payed_price,
		ifNull(sum(xti.`finance_amount`),0.00) as finance_amount,
		xti.`finance_audit_time`,
		xti.`delivery_time`,
		ifNull(xti.`delivery_warehouse`,'-') as delivery_warehouse,
		xti.`arrival_time`,
		ifNull(xti.`arrival_warehouse`,'-') as arrival_warehouse,
		ifNull(xti.`customer_name`,'-') as customer_name
		FROM
		`xq_truck_info` xti
		LEFT JOIN xq_order xo on xo.id=xti.order_id
		where 1=1 and
		xti.iz_delete=0

		<if test="dto != null">
			<if test="dto.orderNum != null and dto.orderNum != ''">
				AND order_num LIKE CONCAT('%', #{dto.orderNum}, '%')
			</if>
			<if test="dto.truck != null and dto.truck != ''">
				AND truck_company LIKE CONCAT('%', #{dto.truck}, '%')
			</if>
			<if test="dto.applyDateStart != null and dto.applyDateStart != '' and dto.applyDateEnd != null and dto.applyDateEnd != ''">
				and apply_date between #{dto.applyDateStart} and #{dto.applyDateEnd}
			</if>
			<if test="dto.payDateStart != null and dto.payDateStart != '' and dto.payDateEnd != null and dto.payDateEnd != ''">
				and pay_date between #{dto.payDateStart} and #{dto.payDateEnd}
			</if>

		</if>
		GROUP BY customer_order_num
		order by xti.create_time desc
	</select>

	<select id="factoryReport" resultType="com.interesting.modules.reportform.vo.FactoryReportVO">


        WITH rt AS (
		SELECT
		xo.id AS order_id,
        xap.product_id,
		xap.layout_requirements,
        ifnull( SUM( xap.tax_included_amount ), 0 ) AS purchase_amount,
        xap.id as xacId
		FROM
		xq_order xo
		LEFT JOIN (
		SELECT
		xap.order_id,
        xai.id,
        xap.product_id,
        xap.id as xap_id,
		xap.layout_requirements,
		xap.tax_included_amount
		FROM
		xq_accessories_purchase xap
		LEFT JOIN xq_accessory_info xai ON xai.id = xap.accessory_id
		WHERE
        xai.category_id = '1702556752196595713'
		and xap.iz_delete=0
		) xap ON xo.id = xap.order_id
		GROUP BY
        xo.id,
		xap.product_id,
		xap.layout_requirements
		),
		rrt AS (
		SELECT
		xo.id AS order_id,
		ifnull( SUM( xap.tax_included_amount ), 0 ) AS purchase_amount
		FROM
		xq_order xo
		LEFT JOIN (
		SELECT
		xap.order_id,
        xap.product_id,
		xap.tax_included_amount
		FROM
		xq_accessories_purchase xap
		LEFT JOIN xq_accessory_info xai ON xai.id = xap.accessory_id
		WHERE
        xai.category_id in
        ('1702561185135521793','1702561262365241346','1702561314655629314','1702561496394821633','1702560489090772994','1702556913677299714')
		and xap.iz_delete=0
		) xap ON xo.id = xap.order_id
		GROUP BY
		xo.id
		),
		rrrt AS (
		SELECT
		xo.id AS order_id,
        xap.product_id,
		xap.layout_requirements,
        xap.id,
		ifnull( SUM( xap.tax_included_amount ), 0 ) AS purchase_amount
		FROM
		xq_order xo
		LEFT JOIN (
		SELECT
		xap.order_id,
        xai.id,
        xap.product_id,
		xap.layout_requirements,
		xap.tax_included_amount
		FROM
		xq_accessories_purchase xap
		LEFT JOIN xq_accessory_info xai ON xai.id = xap.accessory_id
		WHERE
        xai.category_id in ('1702556779962888194')
		and xap.iz_delete=0
		) xap ON xo.id = xap.order_id
		GROUP BY
        xo.id,
		xap.product_id,
		xap.layout_requirements
		),
		rrrrt AS (
		SELECT
		xo.id AS order_id,
		xap.product_id,
		xap.layout_requirements,
		xap.id,
		ifnull( SUM( xap.tax_included_amount ), 0 ) AS purchase_amount
		FROM
		xq_order xo
		LEFT JOIN (
		SELECT
		xap.order_id,
		xai.id,
		xap.product_id,
		xap.layout_requirements,
		xap.tax_included_amount
		FROM
		xq_accessories_purchase xap
		LEFT JOIN xq_accessory_info xai ON xai.id = xap.accessory_id
		WHERE
		xai.category_id in ('1736668764186763266')
		and xap.iz_delete=0
		) xap ON xo.id = xap.order_id
		GROUP BY
		xo.id,
		xap.product_id,
		xap.layout_requirements
		),
		rrrrrt AS (
		SELECT
		xo.id AS order_id,
		xap.product_id,
		xap.layout_requirements,
		xap.id,
		ifnull( SUM( xap.tax_included_amount ), 0 ) AS purchase_amount
		FROM
		xq_order xo
		LEFT JOIN (
		SELECT
		xap.order_id,
		xai.id,
		xap.product_id,
		xap.layout_requirements,
		xap.tax_included_amount
		FROM
		xq_accessories_purchase xap
		LEFT JOIN xq_accessory_info xai ON xai.id = xap.accessory_id
		WHERE
		xai.category_id in ('1710867340224053249')
		and xap.iz_delete=0
		) xap ON xo.id = xap.order_id
		GROUP BY
		xo.id,
		xap.product_id,
		xap.layout_requirements
		),
		rrrrrrt AS (
		SELECT
		xo.id AS order_id,
		xap.product_id,
		xap.layout_requirements,
		xap.id,
		ifnull( SUM( xap.tax_included_amount ), 0 ) AS purchase_amount
		FROM
		xq_order xo
		LEFT JOIN (
		SELECT
		xap.order_id,
		xai.id,
		xap.product_id,
		xap.layout_requirements,
		xap.tax_included_amount
		FROM
		xq_accessories_purchase xap
		LEFT JOIN xq_accessory_info xai ON xai.id = xap.accessory_id
		WHERE
		xai.category_id in ('1750413596306632706')
		and xap.iz_delete=0
		) xap ON xo.id = xap.order_id
		GROUP BY
		xo.id,
		xap.product_id,
		xap.layout_requirements
		),
		recordCount AS ( SELECT count( 1 ) AS records, t1.source_id FROM xq_payment_detail t1 GROUP BY t1.source_id ),
		payDetail AS (
		SELECT
		TRIM( BOTH ',' FROM CONCAT_WS( ',', GROUP_CONCAT( COALESCE ( pay.pay_remark, '' ) ) ) ) AS pay_remark,
		pay.source_id
		FROM
		xq_payment_detail pay
		WHERE
		pay.iz_delete = 0
		GROUP BY
		pay.source_id
		),
		xpn3 as (
		SELECT
		GROUP_CONCAT( xpn3.note ) as note,
		xpn3.order_id
		FROM
		xq_problem_note xpn3
		WHERE
		xpn3.module_type = '3' and xpn3.iz_delete=0
		GROUP BY
		xpn3.order_id
		),xpn1 as (
		SELECT
		GROUP_CONCAT( xpn1.note ) as note,
		xpn1.order_id
		FROM
		xq_problem_note xpn1
		WHERE
		xpn1.module_type = '1' and xpn1.iz_delete=0
		GROUP BY
		xpn1.order_id
		),xpn2 as (
		SELECT
		GROUP_CONCAT( xpn2.note ) as note,
		xpn2.order_id
		FROM
		xq_problem_note xpn2
		WHERE
		xpn2.module_type = '2' and xpn2.iz_delete=0
		GROUP BY
		xpn2.order_id
		)

		,xpn4 as (
		SELECT
        GROUP_CONCAT( xpn4.insurance_date,xpn4.create_person,xpn4.trans_info ) as note,
		xpn4.order_id
		FROM
		xq_freight_note xpn4
		WHERE
		xpn4.iz_delete =0
		GROUP BY
		xpn4.order_id
        ),xrd as (
        select
        xo.id as order_id,
        COALESCE(GROUP_CONCAT(xrd.remarks SEPARATOR ' | '), '-') AS salesRemark
        from xq_remittance_detail xrd
        LEFT JOIN xq_order xo ON xrd.order_id = xo.id
        where xrd.iz_delete=0 and xrd.remarks !=''
        GROUP BY xo.id
		)

		SELECT

		IFNULL( DATE_FORMAT( xfi.etd, '%Y/%m/%d' ), '-' ) AS etd,
		IFNULL( IF ( xo.order_type = 1, CONCAT( '仓库订单', '-', xw.NAME,' ','客户名称','-',xc.`name` ), xc.`name` ), '-' ) AS
		customer_name,
		IFNULL( xo.order_num, '-' ) AS order_num,
		IFNULL( xrmp.purchase_contract, '-' ) AS purchase_contract_no,
		IFNULL( xo.invoice_num, '-' ) AS invoice_num,
		IFNULL( xpi.product_name_en, '-' ) AS product_name_en,
		IFNULL( xpi.product_name, '-' ) AS product_name,
		IFNULL( xpi.product_grade, '-' ) AS product_grade,
		IFNULL(CONCAT( xpi.packaging, ' ', xu1.`name`, '-', xod.total_boxes, 'CS' ),'-') AS packaging,
		IFNULL( xo.quality_control_person, '-' ) AS quality_control_person,
		IFNULL( sdi.item_text,xrmp.inspection_note) AS inspection_note,
		IFNULL( DATE_FORMAT( xfi.loading_date, '%Y/%m/%d' ) , '-' )AS loading_date,
		IFNULL( DATE_FORMAT( xfi.eta, '%Y/%m/%d' ),'-' ) AS arrive_port_time,
		IFNULL( xs.`name`, '-' ) AS supplierName,
		IFNULL( xrmp.weight, 0.00 ) AS weight,
		IFNULL( xu.`name`, '-' ) AS weight_unit,
		IFNULL( xrmp.unit_price, 0.00 ) AS unit_price,
		IFNULL( xrmp.real_unit_price, 0.00 ) AS real_unit_price,
		IFNULL( xrmp.currency, '-' ) AS currency,
		IFNULL( xrmp.purchase_amount, 0.00 ) AS purchase_amount,
		IFNULL( xrmp.first_payment_rate, 0.00 ) AS first_payment_rate,
		IFNULL( xrmp.first_payment, 0.00 ) AS first_payment,
		IFNULL( xrmp.purchase_note, '-' ) AS purchase_note,
		IFNULL(CONCAT(xrmp.financial_note,'/',xpn3.note), '-' ) AS financial_note,
		IFNULL( pd.pay_remark, '-' ) AS pay_remark,
        xpi.id as product_id,
        IFNULL( rrrt.purchase_amount, 0.00 ) AS nd_purchase_amount,
		IFNULL( rt.purchase_amount, 0.00 ) + IFNULL( rrrrt.purchase_amount, 0.00 ) AS zx_purchase_amount,
		IFNULL( rrt.purchase_amount, 0.00 ) AS qt_purchase_amount,
		IFNULL( rrrrrt.purchase_amount, 0.00 ) as yfPurchaseAmount,
		IFNULL( rrrrrrt.purchase_amount, 0.00 ) as sltPurchaseAmount,
		IFNULL( xrmp.purchase_note, '-' ) AS purchase_remark,

		DATE_FORMAT( IFNULL( xrmp.first_payment_expire_date, '' ), '%Y/%m/%d' ) firstDqDate,
		DATE_FORMAT( IFNULL( xrmp.payment_expire_date, '' ), '%Y/%m/%d' ) endDqDate,

		ifnull(gckk.pay_money,0) AS gckke,
		ifnull(sf.pay_money,0) AS sfje,
		ifnull(zf.pay_money,0) AS zfje,
		ifnull(mf.pay_money,0) AS wfje,
		xrmp.payment_amount,
		if(xrmp.finance_complete_state =1, 0.00,ifnull(xrmp.purchase_amount ,0)- ifnull(gckk.pay_money,0) -
		ifnull(xrmp.payment_amount,0) )AS sqye,
		ifnull(fkrq.pay_time ,'-')AS pay_time,
        IFNULL(xrd.salesRemark,'-') AS salesRemark,
		COALESCE(CONCAT( ifnull(xpn1.note,''),' | ',ifnull(xpn4.note,''),' | ',ifnull(xpn3.note,'') )) AS
		exceptionRemark
		-- IFNULL(CONCAT( xpn4.note ),'-') AS rawExceptionRemark
		-- IFNULL(CONCAT( xpn2.note ),'-') AS remmitExceptionRemark
		FROM
		xq_order xo
		LEFT JOIN xq_order_detail xod ON xo.id = xod.order_id
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		LEFT JOIN xq_raw_material_purchase xrmp ON xrmp.order_id = xo.id
		AND xod.product_id = xrmp.product_id
		AND xrmp.iz_delete = 0
		and xrmp.layout_requirements = xod.layout_requirements
		LEFT JOIN xq_unit xu ON xrmp.weight_unit = xu.id
		LEFT JOIN xq_unit xu1 ON xod.packaging_unit = xu1.id
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		LEFT JOIN xq_product_info xpi ON xpi.id = xod.product_id
		LEFT JOIN xq_supplier xs ON xs.id = xrmp.supplier_id
		left join sys_dict sd on sd.dict_code = 'inspection_note_way' and sd.iz_delete = 0
		left join sys_dict_item sdi on sd.id = sdi.dict_id and sdi.item_value = xrmp.inspection_note and sdi.iz_delete = 0
        LEFT JOIN rt rt ON rt.order_id = xrmp.order_id and rt.product_id=xrmp.product_id and rt.layout_requirements =  xrmp.layout_requirements
		LEFT JOIN rrt rrt ON rrt.order_id = xod.order_id
        LEFT JOIN rrrt rrrt ON rrrt.order_id = xod.order_id and rrrt.product_id=xrmp.product_id and rrrt.layout_requirements =  xrmp.layout_requirements
        LEFT JOIN rrrrt rrrrt ON rrrrt.order_id = xod.order_id and rrrrt.product_id=xrmp.product_id and rrrrt.layout_requirements =  xrmp.layout_requirements
        LEFT JOIN rrrrrt rrrrrt ON rrrrrt.order_id = xod.order_id and rrrrrt.product_id=xrmp.product_id and rrrrrt.layout_requirements =  xrmp.layout_requirements
        LEFT JOIN rrrrrrt rrrrrrt ON rrrrrrt.order_id = xod.order_id and rrrrrrt.product_id=xrmp.product_id and rrrrrrt.layout_requirements =  xrmp.layout_requirements
		LEFT JOIN payDetail pd ON pd.source_id = xrmp.id
		LEFT JOIN (
		SELECT
		t1.pay_money,
		t1.source_id
		FROM
		xq_payment_detail t1
		WHERE
		t1.iz_delete = 0 AND t1.type = 0
		GROUP BY
		source_id
		order by t1.create_time asc
		) sf ON sf.source_id = xrmp.id
		LEFT JOIN (
		SELECT
		pay_money,
		source_id
		FROM (
		SELECT
		pay_money,
		source_id,
		ROW_NUMBER() OVER (PARTITION BY source_id ORDER BY create_time ASC) AS row_num
		FROM
		xq_payment_detail
		WHERE
		iz_delete = 0 AND type = 0
		) t
		WHERE
		row_num = 2
		) zf ON zf.source_id = xrmp.id
		LEFT JOIN (
		SELECT
		source_id,
		SUM(pay_money) AS pay_money
		FROM (
		SELECT
		source_id,
		pay_money,
		ROW_NUMBER() OVER (PARTITION BY source_id ORDER BY create_time asc) AS row_num
		FROM
		xq_payment_detail
		WHERE
		iz_delete = 0 AND type = 0
		) t
		WHERE
		row_num > 2
		GROUP BY
		source_id
		) mf ON mf.source_id = xrmp.id
		LEFT JOIN (
		SELECT
		COALESCE(SUM(t1.pay_money), 0) AS pay_money,
		t2.source_id
		FROM
		(SELECT DISTINCT source_id FROM xq_payment_detail) t2
		LEFT JOIN
		xq_payment_detail t1 ON t1.source_id = t2.source_id AND t1.iz_delete = 0 AND t1.type = 1
		GROUP BY
		t2.source_id
		) gckk on gckk.source_id=xrmp.id
		LEFT JOIN (
		SELECT
		GROUP_CONCAT(DATE_FORMAT(t1.pay_time,'%Y/%m/%d') SEPARATOR '-') AS pay_time,
		t1.source_id
		FROM
		xq_payment_detail t1
		WHERE
		t1.iz_delete = 0 AND t1.type = 0
		GROUP BY
		t1.source_id
		order by t1.create_time asc
		) fkrq ON fkrq.source_id = xrmp.id
		LEFT JOIN recordCount recordCount ON recordCount.source_id = xrmp.id
        LEFT JOIN xrd xrd ON xrd.order_id = xo.id
		LEFT JOIN xpn1 xpn1 ON xpn1.order_id = xo.id
		LEFT JOIN xpn2 xpn2 ON xpn2.order_id = xo.id
		LEFT JOIN xpn3 xpn3 ON xpn3.order_id = xo.id
		LEFT JOIN xpn4 xpn4 ON xpn4.order_id = xo.id
		LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
		WHERE
		xo.iz_delete = 0
		and xod.iz_delete=0
		and xrmp.iz_delete=0
		AND xfi.customs_clearance_time IS NOT NULL
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
		<if test="dto.invoiceNum != null and dto.invoiceNum != ''">
			and xo.invoice_num like concat('%',#{dto.invoiceNum},'%')
		</if>
		<if test="dto.productName != null and dto.productName != ''">
			and xpi.product_name like concat('%',#{dto.productName},'%')
		</if>
		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>
		<if test="dto.purchaseContractNo != null and dto.purchaseContractNo != ''">
			and xrmp.purchase_contract like concat('%',#{dto.purchaseContractNo},'%')
		</if>
		<if test="dto.qualityControlPerson != null and dto.qualityControlPerson != ''">
			and xo.quality_control_person like concat('%',#{dto.qualityControlPerson},'%')
		</if>

		<if test="dto.inspectionNote != null and dto.inspectionNote != ''">
			and FIND_IN_SET(xrmp.inspection_note, #{dto.inspectionNote})
		</if>
		<if test="dto.currency != null and dto.currency != ''">
			and xrmp.currency = #{dto.currency}
		</if>
		<if test="dto.sqye != null and dto.sqye != ''">
			<if test="dto.sqye == 1">
				and (xrmp.finance_complete_state = 1
				or (ifnull(xrmp.purchase_amount ,0)- ifnull(gckk.pay_money,0) - ifnull(xrmp.payment_amount,0)) = 0 )
			</if>
			<if test="dto.sqye == 0">
				and (xrmp.finance_complete_state &lt;&gt; 1
				and (ifnull(xrmp.purchase_amount ,0)- ifnull(gckk.pay_money,0) - ifnull(xrmp.payment_amount,0)) &lt;&gt; 0 )
			</if>
		</if>

		<if test="supplierIds != null">
			and xrmp.supplier_id in
			<foreach collection="supplierIds" item="supplierId" separator="," open="(" close=")">
				#{supplierId}
			</foreach>
		</if>
        <!--		<if test="dto.supplierName!=null and dto.supplierName!=''">-->
        <!--			and xs.`name` like concat('%',#{dto.supplierName},'%')-->
        <!--		</if>-->
		GROUP BY
		xrmp.id
		ORDER BY

		xfi.etd
		<if test="dto.reportFormTimeOrder != null and dto.reportFormTimeOrder !='' and dto.reportFormTimeOrder == 'desc'">
			desc
		</if>
        ,xo.create_time,
		         xo.order_num desc,
		xod.id asc




	</select>


	<select id="salesStatisticsReport" resultType="com.interesting.modules.reportform.vo.SalesStatisticsReportVO">


		SELECT
		order_detail_id AS order_detail_id,
		IFNULL( etd, '-' ) AS etd,
		IFNULL( customer_name, '-' ) AS customer_name,
		orderType AS orderType,
		IFNULL( order_num, '-' ) AS order_num,
		IFNULL( purchase_contract_no, '-' ) AS purchase_contract_no,
		IFNULL( invoice_num, '-' ) AS invoice_num,
		IFNULL( product_name_en, '-' ) AS product_name_en,
		IFNULL( product_name, '-' ) AS product_name,
		IFNULL( packaging, '-' ) AS packaging,
		IFNULL( packagingUnit, '-' ) AS packagingUnit,
		IFNULL( quality_control_person, '-' ) AS quality_control_person,
		IFNULL( inspection_note, '-' ) AS inspection_note,
		IFNULL( agent, '-' ) AS agent,
		IFNULL( ship_company, '-' ) AS ship_company,
		IFNULL( loading_port, '-' ) AS loading_port,
		IFNULL( destination_port, '-' ) AS destination_port,
		IFNULL( bill_of_lading, '-' ) AS bill_of_lading,
		IFNULL( container_no, '-' ) AS container_no,
		IFNULL( loading_date, '-' ) AS loading_date,
		IFNULL( eta, '-' ) AS eta,
		IFNULL( supplierName, '-' ) AS supplierName,
		IFNULL( overseas_receiver, '-' ) AS overseas_receiver,
		IFNULL( domestic_sender, '-' ) AS domestic_sender,
		IFNULL( weight, 0.00 ) AS weight,
		IFNULL( unit, '-' ) AS unit,
		IFNULL( unit_price, 0.00 ) AS unit_price,
		IFNULL( currency, '-' ) AS currency,
		IFNULL( sales_amount, 0.00 ) AS sales_amount,
		IFNULL( pod_time, '-' ) AS pod_time,
		IFNULL( total_amount + totalExtra - ddkcCommiission, 0.00 ) as salesAmountSuddkc,
		IFNULL( thirdPartImportCommission, 0.00 ) AS thirdPartImportCommission,
		IFNULL( totalThirdPartImportCommission, 0.00 ) AS totalThirdPartImportCommission,
		IFNULL( middleManCommission, 0.00 ) AS middleManCommission,
		IFNULL( totalMiddleManCommission, 0.00 ) AS totalMiddleManCommission,
		IFNULL(discount ,0.00) AS discount,
		IFNULL(creditInsurancePremium ,0.00) AS creditInsurancePremium,
		IFNULL( service_charge, 0.00 ) AS service_charge,
		IFNULL( factoringInterest,0.00) AS factoringInterest,
		ifnull( remittance_amount1, 0.00 ) AS remittance_amount1,
		0.00 AS remittance_amount2,
		ifnull( factoring_money1, 0.00 ) AS factoring_money1,
		0.00 AS factoring_money2,
		ifnull( real_receive_amount, 0.00 ) AS real_receive_amount,
		ifnull( un_receive_amount, 0.00 ) AS un_receive_amount,
		ifnull( remittance_date, '-' ) AS remittance_date,
		ifnull( remittance_remark, '-' ) AS remittance_remark,
		ifnull( problem_note, '-' ) AS problem_note,
		IFNULL( remittance_time, '-' ) AS remittance_time,
		record_count AS record_count,
		insurance_effective_date,
		round(ifnull(extraFree, 0.00), 2) as extraFree,
		ifnull(amount, 0.00) as amount,
		ifnull(other, 0.00) as other,
		ROW_NUMBER() OVER (PARTITION BY id order by
		${dto.column}
		<if test="dto.order == 'asc'">
			desc
		</if>
		<if test="dto.order == 'desc'">
			asc
		</if>
		, order_num ASC, create_time DESC, order_detail_id DESC ) AS ranking
		FROM
		(
		WITH rt AS (
		SELECT
		xo.id AS order_id,
		SUM( remit.remittance_amount ) AS remittance_amount1,
		SUM( remit.factoring_money ) AS factoring_money1,
		SUM( remit.factoring_interest ) AS factoring_interest1,
		SUM( remit.discount ) AS discount1,
		SUM( remit.service_charge ) AS service_charge1,
		SUM( remit.quality ) AS quality1,
		GROUP_CONCAT( COALESCE ( DATE_FORMAT( remit.remittance_date, '%Y/%m/%d' ), '' ) SEPARATOR '|' ) AS
		remittance_date,
		GROUP_CONCAT( COALESCE ( remit.remarks, '' ) SEPARATOR '|' ) AS remittance_remark,
		IFNULL( SUM( COALESCE ( remit.remittance_amount, 0 ) ) + SUM( COALESCE ( remit.factoring_money, 0 ) ), 0 ) AS
		real_receive_amount
		FROM
		xq_order xo
		INNER JOIN xq_remittance_detail remit ON remit.order_id = xo.id
		WHERE
		remit.iz_delete = 0 -- OR remit.order_id IS NULL

		GROUP BY
		remit.order_id
		),
		rrt AS (
		SELECT
		xpn.order_id,
		GROUP_CONCAT( xpn.note ) AS problem_note
		FROM
		xq_problem_note xpn
		WHERE
		xpn.iz_delete = 0
		AND xpn.module_type = 1
		GROUP BY
		order_id
		),
		xpn4 as (
		SELECT
		GROUP_CONCAT( xpn4.insurance_date,xpn4.create_person,xpn4.trans_info ) as note,
		xpn4.order_id
		FROM
		xq_freight_note xpn4
		WHERE
		xpn4.iz_delete =0
		GROUP BY
		xpn4.order_id
		),
		rrrt AS (
		SELECT
		xod.order_id,
		ifnull( sum( xod.sales_amount ), 0 ) AS total_amount
		FROM
		xq_order_detail xod
		WHERE
		1 = 1
		AND xod.iz_delete = 0
		GROUP BY
		xod.order_id
		),
		rrrrt AS (
		SELECT
		xec.order_id,
		ifnull( sum( xec.price ), 0 ) AS totalExtra
		FROM
		xq_order_extra_cost xec
		WHERE
		1 = 1
		AND xec.iz_delete = 0
		GROUP BY
		xec.order_id
		),
		rrrrrt AS (
		SELECT
		xoc.order_id,
		ifnull( sum( xoc.amount ), 0 ) AS ddkcCommiission
		FROM
		xq_order_commission xoc
		WHERE
		1 = 1
		AND xoc.iz_delete = 0
		AND xoc.commission_type = 'ddkc'
		GROUP BY
		xoc.order_id
		),
		sd AS (
		SELECT
		sd.dict_code,
		sdi.item_text,
		sdi.item_value
		FROM
		sys_dict sd
		LEFT JOIN sys_dict_item sdi ON sd.id = sdi.dict_id
		AND sdi.iz_delete = 0
		WHERE
		sd.iz_delete = 0
		)
		<if test="dto.izReceiveAmount != null">select *
			from (
		</if>
		Select
		xo.id,
		xod.id AS order_detail_id,
		IFNULL( DATE_FORMAT( xfi.etd, '%Y/%m/%d' ), '-' ) AS etd,
		IFNULL(
		IF
		(
		xo.order_type = 1,
		CONCAT( '仓库订单', '-', xw.NAME, ' ' ),
		xc.`name`
		),
		'-'
		) AS customer_name,
		ot.item_text orderType,
		IFNULL( xo.order_num, '-' ) AS order_num,
		IFNULL( xrmp.purchase_contract, '-' ) AS purchase_contract_no,
		IFNULL( xo.invoice_num, '-' ) AS invoice_num,
		IFNULL( xod.product_name_en, '-' ) AS product_name_en,
		IFNULL( xod.product_name, '-' ) AS product_name,
		CONCAT( xod.packaging, ' ', xu1.`name`, '-', xod.total_boxes, 'CS' ) AS packaging,
		IFNULL( xod.packaging_name, '-' ) AS packagingUnit,
		IFNULL( xo.quality_control_person, '-' ) AS quality_control_person,
		IFNULL( inw.item_text, xrmp.inspection_note ) AS inspection_note,
		IFNULL( xfci.agent, '-' ) AS agent,
		IFNULL( xfi.ship_company, '-' ) AS ship_company,
		IFNULL( xfi.loading_port, '-' ) AS loading_port,
		IFNULL( xfi.destination_port, '-' ) AS destination_port,
		IFNULL( xfi.bill_of_lading, '-' ) AS bill_of_lading,
		IFNULL( xfi.container_no, '-' ) AS container_no,
		IFNULL( DATE_FORMAT( xfi.loading_date, '%Y/%m/%d' ), '-' ) AS loading_date,
		IFNULL( DATE_FORMAT( xfi.eta, '%Y/%m/%d' ), '-' ) AS eta,
		IFNULL( xs.`name`, '-' ) AS supplierName,
		IFNULL( xo.overseas_receiver, '-' ) AS overseas_receiver,
		IFNULL( xo.domestic_sender, '-' ) AS domestic_sender,
		IFNULL( xod.total_weight, 0.00 ) AS weight,
		IFNULL( xod.unit, '-' ) AS unit,
		IFNULL( xod.unit_price, 0.00 ) AS unit_price,
		IFNULL( xod.currency, '-' ) AS currency,
		IFNULL( xod.sales_amount, 0.00 ) AS sales_amount,
		IFNULL( DATE_FORMAT( xo.actual_delivery_date, '%Y/%m/%d' ), '-' ) AS pod_time,
		IFNULL( DATE_FORMAT( xre.remittance_expire_date, '%Y/%m/%d' ), '-' ) AS remittance_time,
		IFNULL(
		(
		SELECT
		SUM( cc.amount )
		FROM
		xq_order_commission cc
		WHERE
		cc.iz_delete = 0
		AND cc.commission_type = 'sfyj'
		AND cc.order_id = xo.id
		) * Round(xrmp.weight/t.all_box,2),
		0.00
		) AS thirdPartImportCommission,

		IFNULL(
		(
		SELECT
		SUM( cc.amount )
		FROM
		xq_order_commission cc
		WHERE
		cc.iz_delete = 0
		AND cc.commission_type = 'sfyj'
		AND cc.order_id = xo.id
		),
		0.00
		) AS totalThirdPartImportCommission,
		IFNULL(
		round(
		(
		SELECT
		SUM( cc.amount )
		FROM
		xq_order_commission cc
		WHERE
		cc.iz_delete = 0
		AND cc.commission_type = 'zjsyj'
		AND cc.order_id = xo.id
		) * Round(xrmp.weight/t.all_box,2),
		2
		),
		0.00
		) AS middleManCommission,
		IFNULL(
		round(
		(
		SELECT
		SUM( cc.amount )
		FROM
		xq_order_commission cc
		WHERE
		cc.iz_delete = 0
		AND cc.commission_type = 'zjsyj'
		AND cc.order_id = xo.id
		),
		2
		),
		0.00
		) AS totalMiddleManCommission,
		IFNULL(
		round(
		(
		SELECT
		SUM( rem.discount ) + sum( rem.quality )
		FROM
		xq_remittance_detail rem
		WHERE
		rem.iz_delete = 0
		AND rem.order_id = xo.id
		),
		2
		),
		0.00
		) AS discount,
		IFNULL(
		round(
		( SELECT SUM( rem.credit_insurance_premium_convert ) FROM xq_credit_insurance rem WHERE rem.iz_delete = 0 AND
		rem.order_id = xo.id ),
		2
		),
		0.00
		) AS creditInsurancePremium,
		IFNULL(
		round(
		( SELECT SUM( rem.factoring_interest ) FROM xq_remittance_detail rem WHERE rem.iz_delete = 0 AND rem.order_id =
		xo.id ),
		2
		),
		0.00
		) AS factoringInterest,
		IFNULL(
		( SELECT SUM( rem.service_charge ) FROM xq_remittance_detail rem WHERE rem.iz_delete = 0 AND rem.order_id =
		xo.id ),
		0.00
		) AS service_charge,
		ifnull( rt.remittance_amount1, 0.00 ) AS remittance_amount1,
		0.00 AS remittance_amount2,
		ifnull( rt.factoring_money1, 0.00 ) AS factoring_money1,
		0.00 AS factoring_money2,
		ifnull( rt.real_receive_amount, 0.00 ) AS real_receive_amount,
		ifnull( rrrt.total_amount, 0 ) + ifnull( rrrrt.totalExtra, 0 ) - ifnull( rrrrrt.ddkcCommiission, 0 ) - ifnull(
		rt.real_receive_amount, 0 ) - ifnull( rt.factoring_interest1, 0 ) - ifnull( rt.discount1, 0 ) - ifnull(
		rt.service_charge1, 0 ) - ifnull( rt.quality1, 0 ) AS un_receive_amount,
		ifnull( rt.remittance_date, '-' ) AS remittance_date,
		ifnull( rt.remittance_remark, '-' ) AS remittance_remark,
		CONCAT( ifnull( rrt.problem_note, '' ),' | ',ifnull(xpn4.note,'') ) AS problem_note,
		ifnull( rrrrrt.ddkcCommiission, 0.00 ) AS ddkcCommiission,
		rrrt.total_amount as total_amount,
		ifnull(rrrrt.totalExtra, 0.00) as totalExtra,
		( SELECT count( od.order_id ) FROM xq_order_detail od WHERE od.order_id = xo.id and od.iz_delete=0) AS
		record_count,
		t1.insurance_effective_date,
		(select sum(if(xod.currency = 'USD' and xoec.currency &lt;&gt; 'USD', (xoec.price / xoec.exchange_rate), xoec.price)) from xq_order_extra_cost xoec where xoec.iz_delete = 0 and xoec.order_id = xo.id and xoec.order_detail_id = xod.id) as extraFree,
		(select sum(if(xoc.commission_type = 'ddkc', xoc.amount, 0)) from xq_order_commission xoc where xoc.order_id = xo.id and xoc.iz_delete = 0) as amount,
		(select sum(xrd.discount) from xq_remittance_detail xrd where xrd.order_id = xo.id and xrd.iz_delete = 0) as other,
		xdd.create_time
		FROM
		xq_order xo
		LEFT JOIN ( SELECT order_id, SUM( weight ) AS all_box , COUNT( * ) AS record_count FROM xq_raw_material_purchase
		WHERE iz_delete = 0 GROUP BY order_id ) t ON t.order_id = xo.id
		left join
		    (select order_id,min(remittance_expire_date) as remittance_expire_date from xq_remittance_expire where iz_delete = 0 GROUP BY order_id)
		xre on xre.order_id = xo.id
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		LEFT JOIN sd ot ON ot.dict_code = 'order_type'
		AND ot.item_value = xo.order_type
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		LEFT JOIN xq_freight_cost_info xfci ON xfci.order_id = xo.id
		AND xfci.fee_type = 'gnhyf' and xfci.iz_delete=0
		LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
		LEFT JOIN rt rt ON rt.order_id = xo.id
		LEFT JOIN rrt rrt ON rrt.order_id = xo.id
		LEFT JOIN rrrt rrrt ON rrrt.order_id = xo.id
		LEFT JOIN rrrrt rrrrt ON rrrrt.order_id = xo.id
		LEFT JOIN rrrrrt rrrrrt ON rrrrrt.order_id = xo.id
		left JOIN xpn4 on xpn4.order_id = xo.id
		LEFT JOIN (
		SELECT
		xod.id,
		xod.order_id,
		xpi.product_name_en AS product_name_en,
		CASE

		WHEN xod.packaging LIKE '%/%' THEN
		( SUBSTRING_INDEX( xod.packaging, '/', 1 ) * SUBSTRING_INDEX( xod.packaging, '/', - 1 ) ) ELSE xod.packaging
		END AS cal_packaging,
		xu.`name` AS packaging_name,
		xod.total_boxes,
		xod.packaging_unit,
		xod.packaging,
		xod.product_id,
		xpi.product_name AS product_name,
		CASE

		WHEN xod.price_per_lb IS NULL THEN
		xod.total_boxes
		WHEN xod.price_per_lb = 0 THEN
		xod.total_boxes ELSE xod.total_weight
		END AS total_weight,
		CASE

		WHEN xod.price_per_lb IS NULL THEN
		'CS'
		WHEN xod.price_per_lb = 0 THEN
		'CS' ELSE xu1.`name`
		END AS unit,
		CASE

		WHEN xod.price_per_lb IS NULL THEN
		ifNull(
		IF
		(
		xod.currency = 'CNY',
		round( ( xod.sales_amount / xod.total_weight ) / o.exchange_rate, 3 ),
		round( xod.price_per_box, 3 )
		),
		0.00
		)
		WHEN xod.price_per_lb = 0 THEN
		ifNull(
		IF
		(
		xod.currency = 'CNY',
		round( ( xod.sales_amount / xod.total_weight ) / o.exchange_rate, 3 ),
		round( xod.price_per_box, 3 )
		),
		0.00
		) ELSE ifNull(
		IF
		(
		xod.currency = 'CNY',
		round( ( xod.price_per_lb / o.exchange_rate ), 3 ),
		round( xod.price_per_lb, 3 )
		),
		0.00
		)
		END AS unit_price,
		ifNULL( xod.sales_amount, 0.00 ) AS sales_amount,
		xod.currency AS currency,
		xoeid.pod_time
		FROM
		xq_order_detail xod
		LEFT JOIN xq_order o ON xod.order_id = o.id
		LEFT JOIN xq_product_info xpi ON xod.product_id = xpi.id
		AND xpi.iz_delete = 0
		LEFT JOIN xq_unit xu ON xu.id = xod.packaging_unit
		LEFT JOIN xq_unit xu1 ON xu1.id = xod.weight_per_box_unit
		AND xu1.iz_delete = 0
		LEFT JOIN xq_overseas_enter_detail xoed ON xoed.order_detail_id = xod.id
		LEFT JOIN xq_overseas_exit_detail xoeid ON xoeid.warehouse_lot = xoed.warehouse_lot
		LEFT JOIN xq_freight_info xfi ON o.id = xfi.order_id

		WHERE
		xod.iz_delete = 0
		) xod ON xod.order_id = xo.id
		LEFT JOIN xq_unit xu1 ON xod.packaging_unit = xu1.id
		LEFT JOIN xq_raw_material_purchase xrmp ON xrmp.order_id = xo.id and xrmp.product_id=xod.product_id
		LEFT JOIN sd inw ON inw.dict_code = 'inspection_note_way'
		AND inw.item_value = xrmp.inspection_note
		LEFT JOIN xq_supplier xs ON xs.id = xrmp.supplier_id
		LEFT JOIN xq_order xdd on xdd.id = xod.order_id and xdd.iz_delete = 0

		LEFT JOIN (
		SELECT order_id,MIN(create_time),insurance_effective_date  FROM xq_credit_insurance GROUP BY order_id
		) t1 on t1.order_id = xo.id
		WHERE
		xo.iz_delete = 0
		<if test="dto.insuranceEffectiveDateStart != null and dto.insuranceEffectiveDateEnd != null">
			and insurance_effective_date between #{dto.insuranceEffectiveDateStart} and #{dto.insuranceEffectiveDateEnd}
		</if>
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="dto.podTimeBegin != null and dto.podTimeEnd != null">
			and xo.actual_delivery_date between trim(#{dto.podTimeBegin}) and trim(#{dto.podTimeEnd})
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
		<if test="dto.invoiceNum != null and dto.invoiceNum != ''">
			and xo.invoice_num like concat('%',#{dto.invoiceNum},'%')
		</if>
		<if test="dto.productName != null and dto.productName != ''">
			and xod.product_name like concat('%',#{dto.productName},'%')
		</if>
		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>
		<if test="dto.shdqStartDate != null and dto.shdqStartDate !='' and dto.shdqEndDate != null and dto.shdqEndDate !=''">
			and xre.remittance_expire_date between #{dto.shdqStartDate} and #{dto.shdqEndDate}
		</if>

		<if test="dto.purchaseContractNo != null and dto.purchaseContractNo != ''">
			and xrmp.purchase_contract like concat('%',#{dto.purchaseContractNo},'%')
		</if>
		<if test="dto.qualityControlPerson != null and dto.qualityControlPerson != ''">
			and xo.quality_control_person like concat('%',#{dto.qualityControlPerson},'%')
		</if>
		<if test="dto.shipCompany != null and dto.shipCompany != ''">
			and xfi.ship_company like concat('%',#{dto.shipCompany},'%')
		</if>

		<if test="supplierIds != null">
			and xrmp.supplier_id in
			<foreach collection="supplierIds" item="supplierId" separator="," open="(" close=")">
				#{supplierId}
			</foreach>
		</if>
		<if test="dto.overseasReceiver != null and dto.overseasReceiver != ''">
			and xo.overseas_receiver like concat('%',#{dto.overseasReceiver},'%')
		</if>
		<if test="dto.domesticSender != null and dto.domesticSender != ''">
			and xo.domestic_sender like concat('%',#{dto.domesticSender},'%')
		</if>
		<if test="dto.orderType != null and dto.orderType != ''">
			and xo.order_type = #{dto.orderType}
		</if>
		<if test="dto.currency != null and dto.currency != ''">
			and xod.currency = #{dto.currency}
		</if>
		and
		xfi.customs_clearance_time is not null
		GROUP BY
		xod.id

		<if test="dto.izReceiveAmount != null">
			) t

			<if test="dto.izReceiveAmount == 0">
				where t.un_receive_amount &gt; 0
			</if>
			<if test="dto.izReceiveAmount == 1">
				where t.un_receive_amount = 0
			</if>
		</if>
		) zzz
		order by
		${dto.column} ${dto.order},
		order_num asc,
		create_time desc,
		order_detail_id asc


    </select>


	<select id="sumSalesStatistics" resultType="com.interesting.modules.reportform.vo.SumSalesStatisticsVO">
		WITH rt AS (
		SELECT
		xo.id AS order_id,
		SUM( remit.remittance_amount ) AS remittance_amount1,
		SUM( remit.factoring_money ) AS factoring_money1,
		SUM( remit.factoring_interest ) AS factoring_interest1,
		SUM( remit.discount ) AS discount1,
		SUM( remit.service_charge ) AS service_charge1,
		SUM( remit.quality ) AS quality1,
		GROUP_CONCAT( COALESCE ( DATE_FORMAT( remit.remittance_date, '%Y/%m/%d' ), '' ) SEPARATOR '|' ) AS
		remittance_date,
		GROUP_CONCAT( COALESCE ( remit.remarks, '' ) SEPARATOR '|' ) AS remittance_remark,
		IFNULL( SUM( COALESCE ( remit.remittance_amount, 0 ) ) + SUM( COALESCE ( remit.factoring_money, 0 ) ), 0 ) AS
		real_receive_amount
		FROM
		xq_order xo
		INNER JOIN xq_remittance_detail remit ON remit.order_id = xo.id
		WHERE
		remit.iz_delete = 0 -- OR remit.order_id IS NULL

		GROUP BY
		remit.order_id
		),
		rrt AS (
		SELECT
		xpn.order_id,
		GROUP_CONCAT( xpn.note ) AS problem_note
		FROM
		xq_problem_note xpn
		WHERE
		xpn.iz_delete = 0
		AND xpn.module_type = 1
		GROUP BY
		order_id
		),
		rrrt AS (
		SELECT
		xod.order_id,
		ifnull( sum( xod.sales_amount ), 0 ) AS total_amount
		FROM
		xq_order_detail xod
		where 1=1 and xod.iz_delete=0
		GROUP BY
		xod.order_id
		),
		rrrrt AS (
		SELECT
		xec.order_id,
		ifnull( sum( xec.price ), 0 ) AS totalExtra
		FROM
		xq_order_extra_cost xec
		where 1=1 and xec.iz_delete=0
		GROUP BY
		xec.order_id
		),
		rrrrrt AS (
		SELECT
		xoc.order_id,
		ifnull( sum( xoc.amount ), 0 ) AS ddkcCommiission
		FROM
		xq_order_commission xoc
		where 1=1 and xoc.iz_delete=0 and xoc.commission_type='ddkc'
		GROUP BY
		xoc.order_id
		)

		select
		ttt.currency,
		round(sum(ttt.creditInsurancePremium),2) totalCreditInsurancePremium,
		round(sum(ttt.factoringInterest),2) totalFactoringInterest,
		round(sum(ttt.real_receive_amount),2) totalRealReceiveAmount,
		round(sum(ttt.un_receive_amount),2) totalUnReceiveAmount,
		round(sum(ttt.salesAmountsuddkc),2) totalSalesAmountSuddkc,
		round(sum(ifnull(ttt.extraFree, 0.00)), 2) extraFree,
		sum(ifnull(ttt.amount, 0.00)) amount,
		sum(ifnull(ttt.other, 0.00)) other

		from
		(

		SELECT
		distinct

		IFNULL(( SELECT SUM( rem.credit_insurance_premium_convert ) FROM xq_credit_insurance rem WHERE rem.iz_delete = 0
		AND
		-- rem.order_id = xo.id ) * ( xod.total_boxes / t.all_box ),0.00) AS creditInsurancePremium,
		rem.order_id = xo.id ) ,0.00) AS creditInsurancePremium,

		IFNULL(( SELECT SUM( rem.factoring_interest ) FROM xq_remittance_detail rem WHERE rem.iz_delete = 0 AND
		rem.order_id =
		-- xo.id ) * ( xod.total_boxes / t.all_box ) ,0.00)AS factoringInterest,
		xo.id )  ,0.00)AS factoringInterest,

		ifnull( rt.real_receive_amount, 0.00 ) AS real_receive_amount,

		ifnull(rrrt.total_amount,0) + ifnull(rrrrt.totalExtra,0) - ifnull(rrrrrt.ddkcCommiission,0) -
		ifnull(rt.real_receive_amount,0 ) - ifnull( rt.factoring_interest1, 0 ) - ifnull( rt.discount1, 0 ) - ifnull(
		rt.service_charge1, 0 ) - ifnull( rt.quality1, 0 ) AS
		un_receive_amount,
		ifnull(rrrt.total_amount,0) + ifnull(rrrrt.totalExtra,0) - ifnull(rrrrrt.ddkcCommiission,0) as salesAmountsuddkc,
		xod.currency,
		xo.id,
		sum(ifnull((select sum(if(xod.currency = 'USD' and xoec.currency &lt;&gt; 'USD', (xoec.price / xoec.exchange_rate), xoec.price)) from xq_order_extra_cost xoec where xoec.iz_delete = 0 and xoec.order_id = xo.id and xoec.order_detail_id = xod.id), 0)) as extraFree,
		(select sum(if(xoc.commission_type = 'ddkc', xoc.amount, 0)) from xq_order_commission xoc where xoc.order_id = xo.id and xoc.iz_delete = 0) as amount,
		(select sum(xrd.discount) from xq_remittance_detail xrd where xrd.order_id = xo.id and xrd.iz_delete = 0) as other

		FROM
		xq_order xo
		LEFT JOIN ( SELECT order_id, SUM( total_boxes ) AS all_box, COUNT( * ) AS record_count FROM xq_order_detail
		WHERE iz_delete = 0 GROUP BY order_id ) t ON t.order_id = xo.id
		left join
		(select order_id,min(remittance_expire_date) as remittance_expire_date from xq_remittance_expire where iz_delete = 0 GROUP BY order_id)
		xre on xre.order_id = xo.id
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
		LEFT JOIN rt rt ON rt.order_id = xo.id
		LEFT JOIN rrt rrt ON rrt.order_id = xo.id
		LEFT JOIN rrrt rrrt ON rrrt.order_id = xo.id
		LEFT JOIN rrrrt rrrrt ON rrrrt.order_id = xo.id
		LEFT JOIN rrrrrt rrrrrt ON rrrrrt.order_id = xo.id
		LEFT JOIN (
		SELECT
		xod.id,
		xod.order_id,
		xpi.product_name_en AS product_name_en,
		CASE

		WHEN xod.packaging LIKE '%/%' THEN
		( SUBSTRING_INDEX( xod.packaging, '/', 1 ) * SUBSTRING_INDEX( xod.packaging, '/', - 1 ) ) ELSE xod.packaging
		END AS cal_packaging,
		xu.`name` AS packaging_name,
		xod.total_boxes,
		xod.packaging_unit,
		xod.packaging,
		xod.product_id,
		xod.layout_requirements,
		xpi.product_name AS product_name,
		CASE

		WHEN xod.price_per_lb IS NULL THEN
		xod.total_boxes
		WHEN xod.price_per_lb = 0 THEN
		xod.total_boxes ELSE xod.total_weight
		END AS total_weight,
		CASE

		WHEN xod.price_per_lb IS NULL THEN
		'CS'
		WHEN xod.price_per_lb = 0 THEN
		'CS' ELSE xu1.`name`
		END AS unit,

		CASE
		WHEN xod.price_per_lb IS NULL THEN
		CONCAT(
		'$',
		ifNull(IF
		( xod.currency = 'CNY', ( ( xod.sales_amount / xod.total_weight ) / o.exchange_rate ), xod.price_per_box )
		,0.00))
		WHEN xod.price_per_lb = 0 THEN
		CONCAT(
		'$',
		ifNull(IF
		( xod.currency = 'CNY', ( ( xod.sales_amount / xod.total_weight ) / o.exchange_rate ), xod.price_per_box )
		,0.00)) ELSE CONCAT( '$', ifNull(IF ( xod.currency = 'CNY', ( xod.price_per_lb / o.exchange_rate ),
		xod.price_per_lb ) ,0.00))
		END AS unit_price,
		CONCAT( '$', ifNULL(xod.sales_amount,0.00) ) AS sales_amount,
		ifnull(xod.currency,'-') AS currency
		FROM
		xq_order_detail xod
		LEFT JOIN xq_order o ON xod.order_id = o.id
		LEFT JOIN xq_product_info xpi ON xod.product_id = xpi.id
		AND xpi.iz_delete = 0
		LEFT JOIN xq_unit xu ON xu.id = xod.packaging_unit
		LEFT JOIN xq_unit xu1 ON xu1.id = xod.weight_per_box_unit
		AND xu1.iz_delete = 0
		LEFT JOIN xq_freight_info xfi on o.id=xfi.order_id
		WHERE
		xod.iz_delete = 0) xod ON xod.order_id = xo.id
		LEFT JOIN xq_raw_material_purchase xrmp ON xrmp.order_id = xo.id
		and xrmp.product_id = xod.product_id
		and xrmp.layout_requirements = xod.layout_requirements
		and xrmp.iz_delete = 0
		LEFT JOIN xq_supplier xs ON xs.id = xrmp.supplier_id

		LEFT JOIN
		xq_unit xu1 on xod.packaging_unit=xu1.id
		LEFT JOIN (
		SELECT order_id,MIN(create_time),insurance_effective_date  FROM xq_credit_insurance GROUP BY order_id
		) t1 ON t1.order_id = xo.id
		WHERE
		xo.iz_delete = 0
		<if test="dto.insuranceEffectiveDateStart != null and dto.insuranceEffectiveDateEnd != null">
			and insurance_effective_date between #{dto.insuranceEffectiveDateStart} and #{dto.insuranceEffectiveDateEnd}
		</if>
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="dto.podTimeBegin != null and dto.podTimeEnd != null">
			and xo.actual_delivery_date between trim(#{dto.podTimeBegin}) and trim(#{dto.podTimeEnd})
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
		<if test="dto.invoiceNum != null and dto.invoiceNum != ''">
			and xo.invoice_num like concat('%',#{dto.invoiceNum},'%')
		</if>
		<if test="dto.productName != null and dto.productName != ''">
			and xod.product_name like concat('%',#{dto.productName},'%')
		</if>
		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>

		<if test="dto.shdqStartDate != null and dto.shdqStartDate !='' and dto.shdqEndDate != null and dto.shdqEndDate !=''">
			and xre.remittance_expire_date between #{dto.shdqStartDate} and #{dto.shdqEndDate}
		</if>
		<if test="dto.purchaseContractNo != null and dto.purchaseContractNo != ''">
			and xrmp.purchase_contract like concat('%',#{dto.purchaseContractNo},'%')
		</if>
		<if test="dto.qualityControlPerson != null and dto.qualityControlPerson != ''">
			and xo.quality_control_person like concat('%',#{dto.qualityControlPerson},'%')
		</if>
		<if test="dto.shipCompany != null and dto.shipCompany != ''">
			and xfi.ship_company like concat('%',#{dto.shipCompany},'%')
		</if>

		<if test="supplierIds != null">
			and xrmp.supplier_id in
			<foreach collection="supplierIds" item="supplierId" separator="," open="(" close=")">
				#{supplierId}
			</foreach>
		</if>
		<if test="dto.overseasReceiver != null and dto.overseasReceiver != ''">
			and xo.overseas_receiver like concat('%',#{dto.overseasReceiver},'%')
		</if>
		<if test="dto.domesticSender != null and dto.domesticSender != ''">
			and xo.domestic_sender like concat('%',#{dto.domesticSender},'%')
		</if>
		<if test="dto.orderType != null and dto.orderType != ''">
			and xo.order_type = #{dto.orderType}
		</if>
		and
		xfi.customs_clearance_time is not null
		GROUP BY
		xo.id
		order by
        xfi.etd asc,
		xo.id desc,xod.product_id desc

		) ttt
		where
		1=1
		<if test="dto.izReceiveAmount != null">
			<if test="dto.izReceiveAmount == 0">
				and ttt.un_receive_amount &gt; 0
			</if>
			<if test="dto.izReceiveAmount == 1">
				and ttt.un_receive_amount = 0
			</if>
		</if>
		<if test="dto.currency != null and dto.currency != ''">
			and ttt.currency = #{dto.currency}
		</if>
		group by ttt.currency
	</select>


	<select id="financeReport" resultType="com.interesting.modules.reportform.vo.FinanceReportVO">
		SELECT
		xrmp.id AS rawPurchaseId,
		xod.id as order_detail_id,
		IFNULL( DATE_FORMAT(xfi.etd, '%Y/%m/%d' ), '-' ) AS etd,
		IFNULL( IF ( xo.order_type = 1, CONCAT( '仓库订单', '-', xw.NAME,' ','客户名称','-',xc.`name` ), xc.`name` ), '-' ) AS
		customer_name,
		IFNULL( xo.order_num, '-' ) AS order_num,
		IFNULL( xrmp.purchase_contract, '-' ) AS purchase_contract_no,
		IFNULL( xo.invoice_num, '-' ) AS invoice_num,
		IFNULL( xod.product_name_en, '-' ) AS product_name_en,
		IFNULL( xod.product_name, '-' ) AS product_name,
		IFNULL( xs.`name`, '-' ) AS supplierName,
		IFNULL(xrmp.weight,0.00) AS weight,
		IFNULL(xrmp.unit_price,0.00) AS unit_price,
		IFNULL(xrmp.currency,'-') AS currency,
		IFNULL(xrmp.purchase_amount,0.00) AS purchase_amount,
		IFNULL(xrmp.kpzl,'-') as kpzl,
		IFNULL(SUBSTRING(xrmp.jxkprq,1,10),'-') as jxkprq,
		IFNULL(xrmp.jxfph,'-') as jxfph,
		IFNULL(xrmp.fpje,0.00) as fpje,
		IFNULL(xrmp.fpse,0.00) as fpse,
		IFNULL(xod.total_weight,0.00) AS total_weight,
		IFNULL(xod.unit,'-') as sales_unit,
		IFNULL(xod.unit_price,0.00) as sales_unit_price,
		IFNULL(xod.currency,'-') as sales_currency,
		IFNULL(xod.sales_amount,0.00) as sales_amount,
		IFNULL(SUBSTRING(xrmp.ckrq,1,10) ,'-')as ckrq,
		IFNULL(xfi.export_declaration_num,'-') AS export_declaration_num,
		IFNULL(xod.hs_code_domestic,'-') as hs_code,
		IFNULL(xrmp.bgje_cfr,0.00) as bgje_cfr,
		IFNULL(xrmp.hyf ,0.00)as hyf,
		IFNULL(xrmp.bgje_fob,0.00) as bgje_fob,
		IFNULL(xrmp.kphl,0.00) as kphl,
		IFNULL(xrmp.ckfpje,0.00) as ckfpje,
		ifNULL(SUBSTRING(xrmp.ckfprq,1,10),'-') as ckfprq,
		ifNULL(xrmp.ckfphm,'-') as ckfphm,
		CONCAT(ifNULL(xrmp.tsl,0.00),'%') as tsl,
		ifNULL(xrmp.tsje,0.00) as tsje,
		ifNULL(SUBSTRING(xrmp.tssj,1,10),'-') as tssj,
		ifNULL(xrmp.shje,0.00) as shje,
		ifNULL(SUBSTRING(xrmp.sdtssj,1,10),'-') as sdtssj,
		ifNULL(SUBSTRING(xrmp.shsj,1,10),'-') as shsj,
		ifNULL(xrmp.shje2,0.00) as shje2,
		ifNULL(SUBSTRING(xrmp.shsj2,1,10),'-') as shsj2,
		ifNULL(xrmp.shje3,0.00) as shje3,
		ifNULL(SUBSTRING(xrmp.shsj3,1,10),'-') as shsj3,
		ifNULL(xrmp.shyh,'-') as shyh,
		IFNULL(sdi.item_text,xrmp.inspection_note) as chfs,
		IFNULL( xo.overseas_receiver, '-' ) AS overseas_receiver,
		IFNULL( xo.domestic_sender, '-' ) AS domestic_sender,
		ifNULL(xrmp.ckfptt,'-') as ckfptt,
		( SELECT count( od.order_id ) FROM xq_order_detail od WHERE od.order_id = xo.id ) AS record_count,
		xod.layout_requirements
FROM
	xq_order xo
	LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
	LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
	LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
	LEFT JOIN (
	SELECT
		xod.id,
		xod.layout_requirements,
		xod.order_id,
		xod.product_id,
		xod.hs_code_domestic,
		xpi.product_name_en AS product_name_en,
		CASE

		WHEN xod.packaging LIKE '%/%' THEN
		( SUBSTRING_INDEX( xod.packaging, '/', 1 ) * SUBSTRING_INDEX( xod.packaging, '/', - 1 ) ) ELSE xod.packaging
		END AS packaging,
		xod.total_boxes,
		xpi.product_name AS product_name,
		CASE

		WHEN xod.price_per_lb IS NULL THEN
		xod.total_boxes
		WHEN xod.price_per_lb = 0 THEN
		xod.total_boxes ELSE xod.total_weight
		END AS total_weight,
		CASE

		WHEN xod.price_per_lb IS NULL THEN
		'CS'
		WHEN xod.price_per_lb = 0 THEN
		'CS' ELSE xu1.`name`
		END AS unit,
		CASE

		WHEN xod.price_per_lb IS NULL THEN
		IF
		( xod.currency = 'CNY', ( ( xod.sales_amount / xod.total_weight ) / o.exchange_rate ), xod.price_per_box )

		WHEN xod.price_per_lb = 0 THEN

		IF
		( xod.currency = 'CNY', ( ( xod.sales_amount / xod.total_weight ) / o.exchange_rate ), xod.price_per_box )
		ELSE IF ( xod.currency = 'CNY', ( xod.price_per_lb / o.exchange_rate ), xod.price_per_lb )
		END AS unit_price,
		xod.sales_amount AS sales_amount,
		xod.currency AS currency
		FROM
		xq_order_detail xod
		LEFT JOIN xq_order o ON xod.order_id = o.id
		LEFT JOIN xq_product_info xpi ON xod.product_id = xpi.id
		AND xpi.iz_delete = 0
		LEFT JOIN xq_unit xu1 ON xu1.id = xod.weight_per_box_unit
		AND xu1.iz_delete = 0
		WHERE
		xod.iz_delete = 0
		) xod ON xod.order_id = xo.id

		LEFT JOIN xq_raw_material_purchase xrmp ON xrmp.order_id = xo.id and xrmp.product_id=xod.product_id AND xrmp.`layout_requirements` = xod.layout_requirements and
		xrmp.iz_delete=0
		left join sys_dict sd on sd.dict_code = 'inspection_note_way' and sd.iz_delete = 0
		left join sys_dict_item sdi on sdi.dict_id = sd.id and sdi.item_value = xrmp.inspection_note and sdi.iz_delete = 0
		LEFT JOIN xq_supplier xs ON xs.id = xrmp.supplier_id and xs.iz_delete=0
		WHERE
		xo.iz_delete = 0
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="supplierIds != null">
			and xrmp.supplier_id in
			<foreach collection="supplierIds" item="supplierId" separator="," open="(" close=")">
				#{supplierId}
			</foreach>
		</if>
		<if test="dto.kpzl != null and dto.kpzl != ''">
			and xrmp.kpzl like concat('%',trim(#{dto.kpzl}),'%')
		</if>
		<if test="dto.jxkprqStart != null and dto.jxkprqStart != '' and dto.jxkprqEnd != null and dto.jxkprqEnd != ''">
			and STR_TO_DATE(xrmp.jxkprq, '%Y-%m-%d')between #{dto.jxkprqStart} and #{dto.jxkprqEnd}
		</if>
		<if test="dto.shrqStart != null and dto.shrqStart != '' and dto.shrqEnd != null and dto.shrqEnd != ''">
			and (STR_TO_DATE(xrmp.shsj, '%Y-%m-%d') between #{dto.shrqStart} and #{dto.shrqEnd}
			or STR_TO_DATE(xrmp.shsj2, '%Y-%m-%d') between #{dto.shrqStart} and #{dto.shrqEnd}
			or STR_TO_DATE(xrmp.shsj3, '%Y-%m-%d') between #{dto.shrqStart} and #{dto.shrqEnd})
		</if>
		<if test="dto.chfs != null and dto.chfs != ''">
			and xfi.inspection_note in
			<foreach collection="chfsList" item="chfs" separator="," open="(" close=")">
				#{chfs}
			</foreach>
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
		<if test="dto.invoiceNum != null and dto.invoiceNum != ''">
			and xo.invoice_num like concat('%',#{dto.invoiceNum},'%')
		</if>
		<if test="dto.productName != null and dto.productName != ''">
			and xod.product_name like concat('%',#{dto.productName},'%')
		</if>
		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>
		<if test="dto.overseasReceiver != null and dto.overseasReceiver != ''">
			and xo.overseas_receiver like concat('%',#{dto.overseasReceiver},'%')
		</if>
		<if test="dto.domesticSender != null and dto.domesticSender != ''">
			and xo.domestic_sender like concat('%',#{dto.domesticSender},'%')
		</if>
		<if test="dto.currency != null and dto.currency != ''">
			and xrmp.currency = #{dto.currency}
		</if>
		<if test="dto.salesCurrency != null and dto.salesCurrency != ''">
			and xod.currency = #{dto.salesCurrency}
		</if>
		and
		xfi.customs_clearance_time is not null
		GROUP BY
		order_detail_id
		order by
		xfi.etd
		<if test="dto.reportFormTimeOrder != null and dto.reportFormTimeOrder !='' and dto.reportFormTimeOrder == 'desc'">
			desc
		</if>
		,
		xo.`create_time`,
		xo.order_num DESC,xod.id


	</select>


	<select id="sumFinanceReport" resultType="com.interesting.modules.reportform.vo.SumFinanceReportVO">
		select
		       ifnull(sum(shje),0.00) as sumShje,
		       ifnull(sum(bgje_fob),0.00) as bgjeFob,
		       ifnull(sum(bgje_cfr),0.00) as bgjeCfr

		from (
		SELECT
		xod.id as order_detail_id,
		IFNULL( DATE_FORMAT(xfi.etd, '%Y/%m/%d' ), '-' ) AS etd,
		IFNULL( IF ( xo.order_type = 1, CONCAT( '仓库订单', '-', xw.NAME,' ','客户名称','-',xc.`name` ), xc.`name` ), '-' ) AS
		customer_name,
		IFNULL( xo.order_num, '-' ) AS order_num,
		IFNULL( xrmp.purchase_contract, '-' ) AS purchase_contract_no,
		IFNULL( xo.invoice_num, '-' ) AS invoice_num,
		IFNULL( xod.product_name_en, '-' ) AS product_name_en,
		IFNULL( xod.product_name, '-' ) AS product_name,
		IFNULL( xs.`name`, '-' ) AS supplierName,
		IFNULL(xrmp.weight,0.00) AS weight,
		IFNULL(xrmp.unit_price,0.00) AS unit_price,
		IFNULL(xrmp.currency,'-') AS currency,
		IFNULL(xrmp.purchase_amount,0.00) AS purchase_amount,
		IFNULL(xrmp.kpzl,'-') as kpzl,
		IFNULL(SUBSTRING(xrmp.jxkprq,1,10),'-') as jxkprq,
		IFNULL(xrmp.jxfph,'-') as jxfph,
		IFNULL(xrmp.fpje,0.00) as fpje,
		IFNULL(xrmp.fpse,0.00) as fpse,
		IFNULL(xod.total_weight,0.00) AS total_weight,
		IFNULL(xod.unit,'-') as sales_unit,
		IFNULL(xod.unit_price,0.00) as sales_unit_price,
		IFNULL(xod.currency,'-') as sales_currency,
		IFNULL(xod.sales_amount,0.00) as sales_amount,
		IFNULL(SUBSTRING(xrmp.ckrq,1,9) ,'-')as ckrq,
		IFNULL(xfi.export_declaration_num,'-') AS export_declaration_num,
		IFNULL(xod.hs_code_domestic,'-') as hs_code,
		IFNULL(xrmp.bgje_cfr,0.00) as bgje_cfr,
		IFNULL(xrmp.hyf ,0.00)as hyf,
		IFNULL(xrmp.bgje_fob,0.00) as bgje_fob,
		IFNULL(xrmp.kphl,0.00) as kphl,
		IFNULL(xrmp.ckfpje,0.00) as ckfpje,
		ifNULL(SUBSTRING(xrmp.ckfprq,1,10),'-') as ckfprq,
		ifNULL(xrmp.ckfphm,'-') as ckfphm,
		CONCAT(ifNULL(xrmp.tsl,0.00),'%') as tsl,
		ifNULL(xrmp.tsje,0.00) as tsje,
		ifNULL(SUBSTRING(xrmp.tssj,1,10),'-') as tssj,
		(IFNULL(xrmp.shje,0.00)+ IFNULL(xrmp.shje2,0.00) + IFNULL(xrmp.shje3,0.00)) AS shje,
		ifNULL(SUBSTRING(xrmp.shsj,1,10),'-') as shsj,
		ifNULL(xrmp.shyh,'-') as shyh,
		IFNULL(sdi.item_text,xfi.inspection_note) as chfs,
		IFNULL( xo.overseas_receiver, '-' ) AS overseas_receiver,
		IFNULL( xo.domestic_sender, '-' ) AS domestic_sender,
		ifNULL(xrmp.ckfptt,'-') as ckfptt,
		( SELECT count( od.order_id ) FROM xq_order_detail od WHERE od.order_id = xo.id ) AS record_count
		FROM
		xq_order xo
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		left join sys_dict sd on sd.dict_code = 'inspection_note_way' and sd.iz_delete = 0
		left join sys_dict_item sdi on sdi.dict_id = sd.id and sdi.item_value = xfi.inspection_note and sdi.iz_delete =
		0
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
		LEFT JOIN (
		SELECT
		xod.id,
		xod.order_id,
		xod.product_id,
		xod.hs_code_domestic,
		xpi.product_name_en AS product_name_en,
		CASE

		WHEN xod.packaging LIKE '%/%' THEN
		( SUBSTRING_INDEX( xod.packaging, '/', 1 ) * SUBSTRING_INDEX( xod.packaging, '/', - 1 ) ) ELSE xod.packaging
		END AS packaging,
		xod.total_boxes,
		xpi.product_name AS product_name,
		CASE

		WHEN xod.price_per_lb IS NULL THEN
		xod.total_boxes
		WHEN xod.price_per_lb = 0 THEN
		xod.total_boxes ELSE xod.total_weight
		END AS total_weight,
		CASE

		WHEN xod.price_per_lb IS NULL THEN
		'CS'
		WHEN xod.price_per_lb = 0 THEN
		'CS' ELSE xu1.`name`
		END AS unit,
		CASE

		WHEN xod.price_per_lb IS NULL THEN
		IF
		( xod.currency = 'CNY', ( ( xod.sales_amount / xod.total_weight ) / o.exchange_rate ), xod.price_per_box )

		WHEN xod.price_per_lb = 0 THEN

		IF
		( xod.currency = 'CNY', ( ( xod.sales_amount / xod.total_weight ) / o.exchange_rate ), xod.price_per_box )
		ELSE IF ( xod.currency = 'CNY', ( xod.price_per_lb / o.exchange_rate ), xod.price_per_lb )
		END AS unit_price,
		xod.sales_amount AS sales_amount,
		xod.currency AS currency
		FROM
		xq_order_detail xod
		LEFT JOIN xq_order o ON xod.order_id = o.id
		LEFT JOIN xq_product_info xpi ON xod.product_id = xpi.id
		AND xpi.iz_delete = 0
		LEFT JOIN xq_unit xu1 ON xu1.id = xod.weight_per_box_unit
		AND xu1.iz_delete = 0
		WHERE
		xod.iz_delete = 0
		) xod ON xod.order_id = xo.id

		LEFT JOIN xq_raw_material_purchase xrmp ON xrmp.order_id = xo.id and xrmp.product_id=xod.product_id and
		xrmp.iz_delete=0
		LEFT JOIN xq_supplier xs ON xs.id = xrmp.supplier_id and xs.iz_delete=0
		WHERE
		xo.iz_delete = 0
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="supplierIds != null">
			and xrmp.supplier_id in
			<foreach collection="supplierIds" item="supplierId" separator="," open="(" close=")">
				#{supplierId}
			</foreach>
		</if>
		<if test="dto.kpzl != null and dto.kpzl != ''">
			and xrmp.kpzl like concat('%',trim(#{dto.kpzl}),'%')
		</if>
		<if test="dto.jxkprqStart != null and dto.jxkprqStart != '' and dto.jxkprqEnd != null and dto.jxkprqEnd != ''">
			and STR_TO_DATE(xrmp.jxkprq, '%Y-%m-%d') between #{dto.jxkprqStart} and #{dto.jxkprqEnd}
		</if>
		<if test="dto.shrqStart != null and dto.shrqStart != '' and dto.shrqEnd != null and dto.shrqEnd != ''">
			and (STR_TO_DATE(xrmp.shsj, '%Y-%m-%d') between #{dto.shrqStart} and #{dto.shrqEnd}
			or STR_TO_DATE(xrmp.shsj2, '%Y-%m-%d') between #{dto.shrqStart} and #{dto.shrqEnd}
			or STR_TO_DATE(xrmp.shsj3, '%Y-%m-%d') between #{dto.shrqStart} and #{dto.shrqEnd})
		</if>
		<if test="dto.chfs != null and dto.chfs != ''">
			and xrmp.inspection_note in
			<foreach collection="chfsList" item="chfs" separator="," open="(" close=")">
				#{chfs}
			</foreach>
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
		<if test="dto.invoiceNum != null and dto.invoiceNum != ''">
			and xo.invoice_num like concat('%',#{dto.invoiceNum},'%')
		</if>
		<if test="dto.productName != null and dto.productName != ''">
			and xod.product_name like concat('%',#{dto.productName},'%')
		</if>
		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>
		<if test="dto.overseasReceiver != null and dto.overseasReceiver != ''">
			and xo.overseas_receiver like concat('%',#{dto.overseasReceiver},'%')
		</if>
		<if test="dto.domesticSender != null and dto.domesticSender != ''">
			and xo.domestic_sender like concat('%',#{dto.domesticSender},'%')
		</if>
		<if test="dto.currency != null and dto.currency != ''">
			and xrmp.currency = #{dto.currency}
		</if>
		<if test="dto.salesCurrency != null and dto.salesCurrency != ''">
			and xod.currency = #{dto.salesCurrency}
		</if>
		and
		xfi.customs_clearance_time is not null
		GROUP BY
		order_detail_id
		order by
		xfi.etd
		<if test="dto.reportFormTimeOrder != null and dto.reportFormTimeOrder !='' and dto.reportFormTimeOrder == 'desc'">
			desc
		</if>
		,
		xrmp.id asc,
		xo.id desc,xod.product_id desc
		) zzz


	</select>


	<select id="sumfactoryFinance" resultType="com.interesting.modules.reportform.vo.SumFactoryFinanceVO">
		WITH rt AS (
		SELECT
		xo.id AS order_id,
		ifnull( SUM( xap.purchase_amount ), 0 ) AS purchase_amount
		FROM
		xq_order xo
		LEFT JOIN (
		SELECT
		xap.order_id,
		xap.purchase_amount
		FROM
		xq_accessories_purchase xap
		LEFT JOIN xq_accessory_info xai ON xai.id = xap.accessory_id
		WHERE
		xai.accessory_name LIKE '%纸箱%'
		and xap.iz_delete=0
		) xap ON xo.id = xap.order_id
		GROUP BY
		xo.id
		),
		rrt AS (
		SELECT
		xo.id AS order_id,
		ifnull( SUM( xap.purchase_amount ), 0 ) AS purchase_amount
		FROM
		xq_order xo
		LEFT JOIN (
		SELECT
		xap.order_id,
		xap.purchase_amount
		FROM
		xq_accessories_purchase xap
		LEFT JOIN xq_accessory_info xai ON xai.id = xap.accessory_id
		WHERE
		xai.accessory_name NOT LIKE '%纸箱%'
		AND xai.accessory_name NOT LIKE '%内袋%'
		and xap.iz_delete=0
		) xap ON xo.id = xap.order_id
		GROUP BY
		xo.id
		),
		rrrt AS (
		SELECT
		xo.id AS order_id,
		ifnull( SUM( xap.purchase_amount ), 0 ) AS purchase_amount
		FROM
		xq_order xo
		LEFT JOIN (
		SELECT
		xap.order_id,
		xap.purchase_amount
		FROM
		xq_accessories_purchase xap
		LEFT JOIN xq_accessory_info xai ON xai.id = xap.accessory_id
		WHERE
		xai.accessory_name LIKE '%内袋%'
		and xap.iz_delete=0
		) xap ON xo.id = xap.order_id
		GROUP BY
		xo.id

		),
		recordCount AS ( SELECT count( 1 ) AS records, t1.source_id FROM xq_payment_detail t1 GROUP BY t1.source_id ),
		payDetail AS (
		SELECT
		TRIM( BOTH ',' FROM CONCAT_WS( ',', GROUP_CONCAT( COALESCE ( pay.pay_remark, '' ) ) ) ) AS pay_remark,
		pay.source_id
		FROM
		xq_payment_detail pay
		WHERE
		pay.iz_delete = 0
		GROUP BY
		pay.source_id
		),
		xpn3 as (
		SELECT
		GROUP_CONCAT( xpn3.note ) as note,
		xpn3.order_id
		FROM
		xq_problem_note xpn3
		WHERE
		xpn3.module_type = '3' and xpn3.iz_delete=0
		GROUP BY
		xpn3.order_id
		),xpn1 as (
		SELECT
		GROUP_CONCAT( xpn1.note ) as note,
		xpn1.order_id
		FROM
		xq_problem_note xpn1
		WHERE
		xpn1.module_type = '1' and xpn1.iz_delete=0
		GROUP BY
		xpn1.order_id
		),xpn2 as (
		SELECT
		GROUP_CONCAT( xpn2.note ) as note,
		xpn2.order_id
		FROM
		xq_problem_note xpn2
		WHERE
		xpn2.module_type = '2' and xpn2.iz_delete=0
		GROUP BY
		xpn2.order_id
		)

		,xpn4 as (
		SELECT
		GROUP_CONCAT( xpn4.insurance_date,xpn4.create_person,xpn4.trans_info ) as note,
		xpn4.order_id
		FROM
		xq_freight_note xpn4
		WHERE
		xpn4.iz_delete =0
		GROUP BY
		xpn4.order_id
		)

		select
		t.currency,
		ifnull(round(sum(t.purchase_amount),2),0.00) totalPurchaseAmount,
		ifnull(round(sum(t.payment_amount),2),0.00) totalPaymentAmount,
		ifnull(round(sum(t.sqye),2),0.00) totalSqye,
		ifnull(round(sum(t.gckke),2),0.00) totalGckke

		from
		(

		SELECT
		IFNULL( xrmp.currency, '-' ) AS currency,
		IFNULL( xrmp.purchase_amount, 0.00 ) AS purchase_amount,
		ifnull(gckk.pay_money,0) AS gckke,
		xrmp.payment_amount,
		if(xrmp.finance_complete_state =1, 0.00,ifnull(xrmp.purchase_amount ,0)- ifnull(gckk.pay_money,0) -
		ifnull(xrmp.payment_amount,0) )AS sqye
		FROM
		xq_order xo
		LEFT JOIN xq_order_detail xod ON xo.id = xod.order_id
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		LEFT JOIN xq_raw_material_purchase xrmp ON xrmp.order_id = xo.id
		AND xod.product_id = xrmp.product_id
		AND xrmp.iz_delete = 0
		LEFT JOIN xq_unit xu ON xrmp.weight_unit = xu.id
		LEFT JOIN xq_unit xu1 ON xod.packaging_unit = xu1.id
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		LEFT JOIN xq_product_info xpi ON xpi.id = xod.product_id
		LEFT JOIN xq_supplier xs ON xs.id = xrmp.supplier_id
		left join sys_dict sd on sd.dict_code = 'inspection_note_way' and sd.iz_delete = 0
		left join sys_dict_item sdi on sd.id = sdi.dict_id and sdi.item_value = xfi.inspection_note and sdi.iz_delete = 0
		LEFT JOIN rt rt ON rt.order_id = xod.order_id
		LEFT JOIN rrt rrt ON rrt.order_id = xod.order_id
		LEFT JOIN rrrt rrrt ON rrrt.order_id = xod.order_id
		LEFT JOIN payDetail pd ON pd.source_id = xrmp.id
		LEFT JOIN (
		SELECT
		t1.pay_money,
		t1.source_id,
		t1.pay_time
		FROM
		xq_payment_detail t1
		WHERE
		t1.iz_delete = 0 AND t1.type = 0
		GROUP BY
		source_id
		order by t1.create_time asc
		) sf ON sf.source_id = xrmp.id
		LEFT JOIN (
		SELECT
		pay_money,
		source_id,
		pay_time
		FROM (
		SELECT
		pay_money,
		source_id,
		pay_time,
		ROW_NUMBER() OVER (PARTITION BY source_id ORDER BY create_time ASC) AS row_num
		FROM
		xq_payment_detail
		WHERE
		iz_delete = 0 AND type = 0
		) t
		WHERE
		row_num = 2
		) zf ON zf.source_id = xrmp.id
		LEFT JOIN (
		SELECT
		source_id,
		SUM(pay_money) AS pay_money
		FROM (
		SELECT
		source_id,
		pay_money,
		ROW_NUMBER() OVER (PARTITION BY source_id ORDER BY create_time asc) AS row_num
		FROM
		xq_payment_detail
		WHERE
		iz_delete = 0 AND type = 0
		) t
		WHERE
		row_num > 2
		GROUP BY
		source_id
		) mf ON mf.source_id = xrmp.id
		LEFT JOIN (
		SELECT
		COALESCE(SUM(t1.pay_money), 0) AS pay_money,
		t2.source_id
		FROM
		(SELECT DISTINCT source_id FROM xq_payment_detail) t2
		LEFT JOIN
		xq_payment_detail t1 ON t1.source_id = t2.source_id AND t1.iz_delete = 0 AND t1.type = 1
		GROUP BY
		t2.source_id
		) gckk on gckk.source_id=xrmp.id
		LEFT JOIN recordCount recordCount ON recordCount.source_id = xrmp.id
		LEFT JOIN xq_remittance_detail xrd ON xrd.order_id = xo.id
		LEFT JOIN xpn1 xpn1 ON xpn1.order_id = xo.id
		LEFT JOIN xpn2 xpn2 ON xpn2.order_id = xo.id
		LEFT JOIN xpn3 xpn3 ON xpn3.order_id = xo.id
		LEFT JOIN xpn4 xpn4 ON xpn4.order_id = xo.id
		LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
		WHERE
		xo.iz_delete = 0
		and xod.iz_delete=0
		and xrmp.iz_delete=0
		AND xfi.customs_clearance_time IS NOT NULL
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
		<if test="dto.invoiceNum != null and dto.invoiceNum != ''">
			and xo.invoice_num like concat('%',#{dto.invoiceNum},'%')
		</if>
		<if test="dto.productName != null and dto.productName != ''">
			and xpi.product_name like concat('%',#{dto.productName},'%')
		</if>
		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>
		<if test="dto.purchaseContractNo != null and dto.purchaseContractNo != ''">
			and xrmp.purchase_contract like concat('%',#{dto.purchaseContractNo},'%')
		</if>
		<if test="dto.qualityControlPerson != null and dto.qualityControlPerson != ''">
			and xo.quality_control_person like concat('%',#{dto.qualityControlPerson},'%')
		</if>
		<if test="supplierIds != null">
			and xrmp.supplier_id in
			<foreach collection="supplierIds" item="supplierId" separator="," open="(" close=")">
				#{supplierId}
			</foreach>
		</if>

		<if test="dto.inspectionNote != null and dto.inspectionNote != ''">
			and FIND_IN_SET(xfi.inspection_note, #{dto.inspectionNote})
		</if>
		<if test="dto.currency != null and dto.currency != ''">
			and xrmp.currency = #{dto.currency}
		</if>
		<if test="dto.sqye != null and dto.sqye != ''">
			<if test="dto.sqye == 1">
				and (xrmp.finance_complete_state = 1
				or (ifnull(xrmp.purchase_amount ,0)- ifnull(gckk.pay_money,0) - ifnull(xrmp.payment_amount,0)) = 0 )
			</if>
			<if test="dto.sqye == 0">
				and (xrmp.finance_complete_state &lt;&gt; 1
				and (ifnull(xrmp.purchase_amount ,0)- ifnull(gckk.pay_money,0) - ifnull(xrmp.payment_amount,0)) &lt;&gt; 0 )
			</if>
		</if>

<!--		<if test="dto.supplierName!=null and dto.supplierName!=''">-->
<!--			and xs.`name` like concat('%',#{dto.supplierName},'%')-->
<!--		</if>-->
		GROUP BY
		xrmp.id
		ORDER BY
        xfi.etd asc,
		xo.id desc,xod.product_id desc
		) t

		group by t.currency

	</select>


	<select id="financeTemplateExport" resultType="com.interesting.modules.reportform.vo.FinanceTemplateVO">
			SELECT
			xrmp.id AS rawPurchaseId,
			xod.id AS order_detail_id,
			IFNULL( xo.order_num, '-' ) AS order_num,
			IFNULL( xod.product_name, '-' ) AS product_name,
			IFNULL( xs.`name`, '-' ) AS supplierName,
			xrmp.id as raw_purchase_id,
        IFNULL( xrmp.weight, 0.00 ) AS weight,
        IFNULL( xrmp.unit_price, 0.00 ) AS unit_price,
        IFNULL( xrmp.currency, '' ) AS currency,
        IFNULL( xrmp.purchase_amount, 0.00 ) AS purchase_amount,
			IFNULL( xrmp.kpzl, '' ) AS kpzl,
        IFNULL( xrmp.jxkprq, '' ) AS jxkprq,
			IFNULL( xrmp.jxfph, '' ) AS jxfph,
        IFNULL( xrmp.fpje, 0.00 ) AS fpje,
        IFNULL( xrmp.fpse, 0.00 ) AS fpse,
        IFNULL( xrmp.ckrq, '' ) AS ckrq,
			IFNULL( xfi.export_declaration_num, '' ) AS export_declaration_num,
			IFNULL( xrmp.hs_code, '' ) AS hs_code,
        IFNULL( xrmp.bgje_cfr, 0.00 ) AS bgje_cfr,
        IFNULL( xrmp.hyf, 0.00 ) AS hyf,
        IFNULL( xrmp.bgje_fob, 0.00 ) AS bgje_fob,
        IFNULL( xrmp.kphl, 0.00 ) AS kphl,
        IFNULL( xrmp.ckfpje, 0.00 ) AS ckfpje,
        IFNULL( xrmp.ckfprq , '' ) AS ckfprq,
			IFNULL( xrmp.ckfphm, '' ) AS ckfphm,
        IFNULL( xrmp.tsl, 0.00 ) AS tsl,
        IFNULL( xrmp.tsje, 0.00 ) AS tsje,
        IFNULL( xrmp.tssj, '' ) AS tssj,
        IFNULL( xrmp.sdtssj, '' ) AS sdtssj,
        IFNULL( xrmp.shje, 0.00 ) AS shje,
        IFNULL(xrmp.shsj, '' ) AS shsj,
		IFNULL( xrmp.shje2, 0.00 ) AS shje2,
		IFNULL(xrmp.shsj2, '' ) AS shsj2,
		IFNULL( xrmp.shje3, 0.00 ) AS shje3,
		IFNULL(xrmp.shsj3, '' ) AS shsj3,
		IFNULL(xod.currency,'-') AS sales_currency,
		IFNULL(sdi.item_text,xfi.inspection_note) AS chfs,
			IFNULL( xrmp.shyh, '' ) AS shyh,
			IFNULL( xrmp.ckfptt, '' ) AS ckfptt,
		xfi.etd,
		xod.layout_requirements
		FROM
			xq_order xo
			LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
			LEFT JOIN sys_dict sd ON sd.dict_code = 'inspection_note_way' AND sd.iz_delete = 0
			LEFT JOIN sys_dict_item sdi ON sdi.dict_id = sd.id AND sdi.item_value = xfi.inspection_note AND sdi.iz_delete = 0
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
			LEFT JOIN (
			SELECT
				xod.id,
				xod.layout_requirements,
				xod.order_id,
				xod.currency,
				xpi.product_name AS product_name,
				xod.product_id AS product_id
			FROM
				xq_order_detail xod
				LEFT JOIN xq_order o ON xod.order_id = o.id
				LEFT JOIN xq_product_info xpi ON xod.product_id = xpi.id
				AND xpi.iz_delete = 0
			WHERE
				xod.iz_delete = 0
			) xod ON xod.order_id = xo.id
			LEFT JOIN xq_raw_material_purchase xrmp ON xrmp.order_id = xo.id
			AND xrmp.product_id = xod.product_id
			AND xrmp.`layout_requirements` = xod.layout_requirements
			AND xrmp.iz_delete = 0
			LEFT JOIN xq_supplier xs ON xs.id = xrmp.supplier_id
			AND xs.iz_delete = 0
		WHERE
			xo.iz_delete = 0
			AND xfi.customs_clearance_time IS NOT NULL
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="supplierIds != null">
			and xrmp.supplier_id in
			<foreach collection="supplierIds" item="supplierId" separator="," open="(" close=")">
				#{supplierId}
			</foreach>
		</if>
		<if test="dto != null ">
			<if test="dto.kpzl != null and dto.kpzl != ''">
				and xrmp.kpzl like concat('%',trim(#{dto.kpzl}),'%')
			</if>
			<if test="dto.jxkprqStart != null and dto.jxkprqStart != '' and dto.jxkprqEnd != null and dto.jxkprqEnd != ''">
				and xrmp.jxkprq between #{dto.jxkprqStart} and #{dto.jxkprqEnd}
			</if>
			<if test="dto.chfs != null and dto.chfs != ''">
				and xfi.inspection_note in
				<foreach collection="chfsList" item="chfs" separator="," open="(" close=")">
					#{chfs}
				</foreach>
			</if>
			<if test="dto.orderNum != null and dto.orderNum != ''">
				and xo.order_num like concat('%',#{dto.orderNum},'%')
			</if>
			<if test="dto.invoiceNum != null and dto.invoiceNum != ''">
				and xo.invoice_num like concat('%',#{dto.invoiceNum},'%')
			</if>
			<if test="dto.productName != null and dto.productName != ''">
				and xod.product_name like concat('%',#{dto.productName},'%')
			</if>
			<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
				and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
			</if>
			<if test="dto.overseasReceiver != null and dto.overseasReceiver != ''">
				and xo.overseas_receiver like concat('%',#{dto.overseasReceiver},'%')
			</if>
			<if test="dto.domesticSender != null and dto.domesticSender != ''">
				and xo.domestic_sender like concat('%',#{dto.domesticSender},'%')
			</if>
			<if test="dto.currency != null and dto.currency != ''">
				and xrmp.currency = #{dto.currency}
			</if>
		</if>

        GROUP BY
        xod.id
        ORDER BY
		xfi.etd ASC,
		xo.`create_time`,
		xo.order_num DESC,xod.id



	</select>


	<select id="freightReportTemplate" resultType="com.interesting.modules.reportform.vo.FreightReportTemplateVO">

		WITH gnlyf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gnlyf_agent,
		'gnlyf' AS fee_type,
        xfci.finance_amount AS gnlyf_price,
		xfci.pay_time,
		xfci.pay_money,
        xfci.application_time,
        xfci.payable_amount,
        xfci.paid_amount
		FROM
		xq_freight_cost_info xfci
        LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gnlyf'
		-- and xfci.customer_id is null
		-- and xfci.supplier_id is null
		and xfci.order_id is not null
        and xfci.finance_amount != 0
		and xfci.iz_default_color !=0
		),
		gnbgf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gnbgf_agent,
        xfci.finance_amount AS gnbgf_price,
		'gnbgf' AS fee_type,
		xfci.pay_time,
		xfci.pay_money,
        xfci.application_time,
        xfci.payable_amount,
        xfci.paid_amount
		FROM
		xq_freight_cost_info xfci
        LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gnbgf'
		-- and xfci.customer_id is null
		-- and xfci.supplier_id is null
		and xfci.order_id is not null
        and xfci.finance_amount != 0
		and xfci.iz_default_color !=0
		),
		hybxf AS (
		SELECT
		xie.order_id,
		xie.insurance_company,
        xie.finance_confirm_amount as insurance_fee,
		xie.application_date,
		'hybxf' AS fee_type,
		xie.pay_time,
        xie.pay_money,
        xie.payable_amount,
        xie.paid_amount
		FROM
		xq_insurance_expenses xie
        LEFT JOIN xq_order xo ON xo.id = xie.order_id
		WHERE
		xie.iz_delete = 0
        and xie.finance_confirm_amount !=0
		),
		gncdf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gncdf_agent,
		'gncdf' AS fee_type,
		xfci.price AS gncdf_price,
		xfci.pay_time,
		xfci.pay_money,
        xfci.application_time,
        xfci.payable_amount,
        xfci.paid_amount
		FROM
		xq_freight_cost_info xfci
        LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gncdf'
		-- and xfci.customer_id is null
		-- and xfci.supplier_id is null
		and xfci.order_id is not null
        and xfci.price != 0
		and xfci.iz_default_color !=0
        ),
        shf AS (
        SELECT
        xfci.order_id,
        xfci.agent AS shf_agent,
        'shf' AS fee_type,
        xfci.finance_amount AS shf_price,
        xfci.pay_time,
        xfci.pay_money,
        xfci.application_time,
        xfci.payable_amount,
        xfci.paid_amount
        FROM
        xq_freight_cost_info xfci
        LEFT JOIN xq_order xo ON xo.id = xfci.order_id
        WHERE
        xfci.iz_delete = 0
        AND xfci.fee_type = 'shf'
		-- and xfci.customer_id is null
		-- and xfci.supplier_id is null
        and xfci.order_id is not null
        and xfci.finance_amount != 0
		) ,
		gnewfy1 AS (
		SELECT
		xfci.order_id,
		xfci.agent ,
		'ewfy1' AS fee_type,
		xfci.finance_amount,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy1'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=1
		) ,
		gnewfy2 AS (
		SELECT
		xfci.order_id,
		xfci.agent,
		'ewfy2' AS fee_type,
		xfci.finance_amount,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy2'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=1
		)
	SELECT
        xod.id AS order_detail_id,
        IFNULL( DATE_FORMAT(xfi.etd, '%Y/%m/%d' ),null) AS etd,
		IF ( xo.order_type = 1, CONCAT( '仓库订单', '-', xw.NAME ), xc.`name` ) AS customer_name,
		xo.order_num,
		IFNULL( gnlyf.gnlyf_price, 0.00 ) AS gnlyf_price,
		gnlyf.gnlyf_agent,
		IFNULL( gnlyf.pay_money, 0.00 ) AS gnlyfFinanceAmount,
        IFNULL( DATE_FORMAT(gnlyf.application_time, '%Y/%m/%d' ), null ) AS gnlyfApplicationTime,
        IFNULL( DATE_FORMAT(gnlyf.pay_time, '%Y/%m/%d' ),null ) AS gnlyfFinanceAuditTime,
        IFNULL( gnlyf.payable_amount, 0.00 ) AS gnlyfPayableAmount,
        IFNULL( gnlyf.paid_amount,0.00) AS gnlyfPaidAmount,

		IFNULL( gnbgf.gnbgf_price, 0.00 ) AS gnbgf_price,
		gnbgf.gnbgf_agent,
		IFNULL( gnbgf.pay_money, 0.00 ) AS gnbgfFinanceAmount,
        IFNULL( DATE_FORMAT(gnbgf.application_time, '%Y/%m/%d' ), null) AS gnbgfApplicationTime,
        IFNULL( DATE_FORMAT(gnbgf.pay_time, '%Y/%m/%d' ), null ) AS gnbgfFinanceAuditTime,
        IFNULL( gnbgf.payable_amount, 0.00 ) AS gnbgfPayableAmount,
        IFNULL( gnbgf.paid_amount, 0.00 ) AS gnbgfPaidAmount,

		IFNULL( hybxf.insurance_fee, 0.00 ) AS gnhyf_price,
		hybxf.insurance_company AS gnhyf_agent,
		IFNULL( hybxf.pay_money, 0.00 ) AS gnhyfFinanceAmount,
        IFNULL(DATE_FORMAT(hybxf.application_date, '%Y/%m/%d' ), null ) AS gnhyfApplicationTime,
        IFNULL(DATE_FORMAT( hybxf.pay_time, '%Y/%m/%d' ), null ) AS gnhyfFinanceAuditTime,
        IFNULL( hybxf.payable_amount, 0.00 ) AS gnhyfPayableAmount,
        IFNULL( hybxf.paid_amount, 0.00 ) AS gnhyfPaidAmount,

		IFNULL( gncdf.gncdf_price, 0.00 ) AS gncdf_price,
		gncdf.gncdf_agent AS gncdf_agent,
        IFNULL( DATE_FORMAT(gncdf.application_time, '%Y/%m/%d' ),null ) AS gncdfApplicationTime,
		IFNULL( gncdf.pay_money, 0.00 ) AS gncdfFinanceAmount,
        IFNULL( DATE_FORMAT(gncdf.pay_time, '%Y/%m/%d' ), null ) AS gncdfFinanceAuditTime,
        IFNULL( gncdf.payable_amount, 0.00 ) AS gncdfPayableAmount,
        IFNULL( gncdf.paid_amount, 0.00 ) AS gncdfPaidAmount,

        IFNULL( shf.shf_price, 0.00 ) AS shf_price,
        shf.shf_agent,
        IFNULL( DATE_FORMAT(shf.application_time, '%Y/%m/%d' ), null ) AS shfApplicationTime,
        IFNULL( shf.pay_money, 0.00 ) AS shfFinanceAmount,
        IFNULL(DATE_FORMAT( shf.pay_time, '%Y/%m/%d' ), null ) AS shfFinanceAuditTime,
        IFNULL( shf.payable_amount, 0.00 ) AS shfPayableAmount,
        IFNULL( shf.paid_amount, 0.00 ) AS shfPaidAmount,
		IFNULL( gnewfy1.finance_amount, 0.00 ) AS gnewfy1_price,
		IFNULL( gnewfy1.agent, null ) AS gnewfy1_agent,
		IFNULL( gnewfy1.pay_money, 0.00 ) AS gnewfy1FinanceAmount,
		IFNULL( SUBSTRING(gnewfy1.pay_time,1,10), null) AS gnewfy1FinanceAuditTime,

		IFNULL( gnewfy2.finance_amount, 0.00 ) AS gnewfy2_price,
		IFNULL( gnewfy2.agent, null ) AS gnewfy2_agent,
		IFNULL( gnewfy2.pay_money, 0.00 ) AS gnewfy2FinanceAmount,
		IFNULL( SUBSTRING(gnewfy2.pay_time,1,10),  null) AS gnewfy2FinanceAuditTime
		FROM
		xq_order xo
		LEFT JOIN xq_order_detail xod ON xo.id = xod.order_id
		AND xod.iz_delete = 0
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		AND xfi.iz_delete = 0
		LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		AND xc.iz_delete = 0
        LEFT JOIN xq_product_info xpi ON xpi.id = xod.product_id
        AND xpi.iz_delete = 0
		LEFT JOIN gnlyf gnlyf ON gnlyf.order_id = xo.id
		LEFT JOIN gnbgf gnbgf ON gnbgf.order_id = xo.id
		LEFT JOIN hybxf hybxf ON hybxf.order_id = xo.id
		LEFT JOIN gncdf gncdf ON gncdf.order_id = xo.id
        LEFT JOIN shf shf ON shf.order_id = xo.id
		LEFT JOIN gnewfy1 ON gnewfy1.order_id = xo.id
		LEFT JOIN gnewfy2 ON gnewfy2.order_id = xo.id
		WHERE
		xo.iz_delete = 0
        <!--		<if test="dto.customerName!=null and dto.customerName!=''">-->
        <!--			AND (xc.name LIKE CONCAT('%', #{dto.customerName}, '%') or xc.abbr LIKE CONCAT('%', #{dto.customerName},-->
        <!--			'%') )-->
        <!--		</if>-->
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>

		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>
        <if test="dto.gnlyfApplicationTimeStart != null and dto.gnlyfApplicationTimeStart !='' and dto.gnlyfApplicationTimeEnd != null and dto.gnlyfApplicationTimeEnd !=''">
            and gnlyf.application_time between #{dto.gnlyfApplicationTimeStart} and #{dto.gnlyfApplicationTimeEnd}
        </if>
        <if test="dto.gnbgfApplicationTimeStart != null and dto.gnbgfApplicationTimeStart !='' and dto.gnbgfApplicationTimeEnd != null and dto.gnbgfApplicationTimeEnd !=''">
            and gnbgf.application_time between #{dto.gnbgfApplicationTimeStart} and #{dto.gnbgfApplicationTimeEnd}
        </if>
        <if test="dto.gnhyfApplicationTimeStart != null and dto.gnhyfApplicationTimeStart !='' and dto.gnhyfApplicationTimeEnd != null and dto.gnhyfApplicationTimeEnd !=''">
            and hybxf.application_date between #{dto.gnhyfApplicationTimeStart} and #{dto.gnhyfApplicationTimeEnd}
        </if>
        <if test="dto.gncdfApplicationTimeStart != null and dto.gncdfApplicationTimeStart !='' and dto.gncdfApplicationTimeEnd != null and dto.gncdfApplicationTimeEnd !=''">
            and gncdf.application_time between #{dto.gncdfApplicationTimeStart} and #{dto.gncdfApplicationTimeEnd}
        </if>
        <if test="dto.shfApplicationTimeStart != null and dto.shfApplicationTimeStart !='' and dto.shfApplicationTimeEnd != null and dto.shfApplicationTimeEnd !=''">
            and shf.application_time between #{dto.shfApplicationTimeStart} and #{dto.shfApplicationTimeEnd}
        </if>
		<if test="dto.gnlyfAgent != null and dto.gnlyfAgent != ''">
			and gnlyf.gnlyf_agent like concat('%',#{dto.gnlyfAgent},'%')
		</if>
		<if test="dto.gnbgfAgent != null and dto.gnbgfAgent != ''">
			and gnbgf.gnbgf_agent like concat('%',#{dto.gnbgfAgent},'%')
		</if>
		<if test="dto.gnhyfAgent != null and dto.gnhyfAgent != ''">
			and hybxf.insurance_company like concat('%',#{dto.gnhyfAgent},'%')
		</if>

		<if test="dto.gncdfAgent!=null and dto.gncdfAgent!=''">
			and gncdf.gncdf_agent like concat('%',#{dto.gncdfAgent},'%')
		</if>
        <if test="dto.shfAgent!=null and dto.shfAgent!=''">
            and shf.shf_agent like concat('%',#{dto.shfAgent},'%')
        </if>
		<if test="dto.payTimeStartDate != null and dto.payTimeStartDate !='' and dto.payTimeStartEnd != null and dto.payTimeStartEnd !=''">
			and (gnlyf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnbgf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or hybxf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gncdf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnewfy1.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnewfy2.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or shf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd})
		</if>
		-- AND (
		-- EXISTS ( SELECT 1 FROM gnlyf WHERE gnlyf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gnbgf WHERE gnbgf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM hybxf WHERE hybxf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gncdf WHERE gncdf.order_id = xo.id )
		-- )

        GROUP BY
        xo.id
		ORDER BY
        xfi.etd
        <if test="dto.reportFormTimeOrder != null and dto.reportFormTimeOrder !='' and dto.reportFormTimeOrder == 'desc'">
            desc
        </if>
        ,
        xo.id desc,xod.product_id desc

	</select>
	<select id="sumFreightKC" resultType="com.interesting.modules.reportform.vo.SumFreightKCVO">
		SELECT
			'CNY' currency,
		    sum(truck_fee) totalFreightKC
		FROM
		`xq_truck_info` xti
		LEFT JOIN xq_order xo on xo.id = xti.order_id
		where 1=1 and
		xti.iz_delete=0
		<if test="dto != null">
			<if test="dto.orderNum != null and dto.orderNum != ''">
				AND order_num LIKE CONCAT('%', #{dto.orderNum}, '%')
			</if>
			<if test="dto.truck != null and dto.truck != ''">
				AND truck_company LIKE CONCAT('%', #{dto.truck}, '%')
			</if>
			<if test="dto.applyDateStart != null and dto.applyDateStart != '' and dto.applyDateEnd != null and dto.applyDateEnd != ''">
				and apply_date between #{dto.applyDateStart} and #{dto.applyDateEnd}
			</if>
			<if test="dto.payDateStart != null and dto.payDateStart != '' and dto.payDateEnd != null and dto.payDateEnd != ''">
				and pay_date between #{dto.payDateStart} and #{dto.payDateEnd}
			</if>
		</if>
	</select>
	<select id="sumFreightTY" resultType="com.interesting.modules.reportform.vo.SumFreightTYVO">
		WITH gnhyf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gnhyf_agent,
		'gnhyf' AS fee_type,
		xfci.price AS gnhyf_price,
		xfci.application_time,
		xfci.pay_time,
		xfci.pay_money
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gnhyf'
		AND xfci.iz_return_fee = 1

		),
		gngzf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gngzf_agent,
		xfci.price AS gngzf_price,
		xfci.application_time,
		'gngzf' AS fee_type,
		xfci.pay_time,
		xfci.pay_money
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gngzf'
		AND xfci.iz_return_fee = 1

		),
		gwkcf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gwkcf_agent,
		'gwkcf' AS fee_type,
		xfci.price AS gwkcf_price,
		xfci.application_time,
		xfci.pay_time,
		xfci.pay_money
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gwkcf'
		AND xfci.iz_return_fee = 1

		),
		ewfy1 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy1_agent,
		'ewfy1' AS fee_type,
		xfci.price AS ewfy1_price,
		xfci.application_time,
		xfci.pay_time,
		xfci.pay_money
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy1'
		AND xfci.iz_return_fee = 1

		)

		select
		    'CNY' currency,
		IFNULL( sum(t.gnhyf_price), 0.00 ) AS totalgnhyf,

		IFNULL( sum(t.gngzf_price), 0.00 ) AS totalgngzf,

		IFNULL( sum(t.gwkcf_price),0.00 ) AS totalgwkcf,

		IFNULL( sum(t.ewfy1_price), 0.00 ) AS totalewfy1

		from (
		SELECT
		IFNULL( gnhyf.gnhyf_price, 0.00 ) AS gnhyf_price,

		IFNULL( gngzf.gngzf_price, 0.00 ) AS gngzf_price,

		IFNULL( gwkcf.gwkcf_price,0.00 ) AS gwkcf_price,

		IFNULL( ewfy1.ewfy1_price, 0.00 ) AS ewfy1_price
		FROM
		xq_order xo
		LEFT JOIN xq_order_detail xod ON xo.id = xod.order_id
		AND xod.iz_delete = 0
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		AND xfi.iz_delete = 0
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		AND xc.iz_delete = 0
		LEFT JOIN gnhyf gnhyf ON gnhyf.order_id = xo.id
		LEFT JOIN gngzf gngzf ON gngzf.order_id = xo.id
		LEFT JOIN gwkcf gwkcf ON gwkcf.order_id = xo.id
		LEFT JOIN ewfy1 ewfy1 ON ewfy1.order_id = xo.id
		WHERE
		xo.iz_delete = 0
		AND (
		EXISTS ( SELECT 1 FROM gnhyf WHERE gnhyf.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM gngzf WHERE gngzf.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM gwkcf WHERE gwkcf.order_id = xo.id )
		OR EXISTS ( SELECT 1 FROM ewfy1 WHERE ewfy1.order_id = xo.id )
		)

		<if test="dto.payDateStart != null and dto.payDateStart != '' and dto.payDateEnd != null and dto.payDateEnd != ''">
			and ((gnhyf.pay_time between #{dto.payDateStart} and #{dto.payDateEnd}) or (gngzf.pay_time between #{dto.payDateStart} and #{dto.payDateEnd})
			or (gwkcf.pay_time between #{dto.payDateStart} and #{dto.payDateEnd}) or (ewfy1.pay_time between #{dto.payDateStart} and #{dto.payDateEnd}))
		</if>

		<if test="dto.applicationDateStart != null and dto.applicationDateStart != '' and dto.applicationDateEnd != null and dto.applicationDateEnd != ''">
			and ((gnhyf.application_time between #{dto.applicationDateStart} and #{dto.applicationDateEnd}) or (gngzf.application_time between #{dto.applicationDateStart} and #{dto.applicationDateEnd})
			 or (gwkcf.application_time between #{dto.applicationDateStart} and #{dto.applicationDateEnd}) or (ewfy1.application_time between #{dto.applicationDateStart} and #{dto.applicationDateEnd}))
		</if>
		<if test="dto.customerName!=null and dto.customerName!=''">
		  AND (xc.name LIKE CONCAT('%', #{dto.customerName},'%') or xc.abbr LIKE CONCAT('%', #{dto.customerName},'%') )
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
		<!--<if test="dto.productName != null and dto.productName != ''">-->
		<!--and xpi.product_name like concat('%',#{dto.productName},'%')-->
		<!--</if>-->
		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>
		<!--<if test="dto.loadingPort != null and dto.loadingPort != ''">-->
		<!--and xfi.loading_port like concat('%',#{dto.loadingPort},'%')-->
		<!--</if>-->
		<!--<if test="dto.destinationPort != null and dto.destinationPort != ''">-->
		<!--and xfi.destination_port like concat('%',#{dto.destinationPort},'%')-->
		<!--</if>-->
		<!--<if test="dto.shipCompany != null and dto.shipCompany != ''">-->
		<!--and xfi.ship_company like concat('%',#{dto.shipCompany},'%')-->
		<!--</if>-->

		<!--<if test="dto.billOfLading!=null and dto.billOfLading!=''">-->
		<!--and xfi.bill_of_lading like concat('%',#{dto.billOfLading},'%')-->
		<!--</if>-->
		<!--<if test="dto.containerNo != null and dto.containerNo != ''">-->
		<!--and xfi.container_no like concat('%',#{dto.containerNo},'%')-->
		<!--</if>-->
		GROUP BY
		xo.id
		)t
	</select>


	<select id="freightGWReportTemplate" resultType="com.interesting.modules.reportform.vo.FreightReportGWTemplateVO">
		-- 国内海运费
		WITH gnhyf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gnhyf_agent,
		'gnhyf' AS fee_type,
		xfci.finance_amount AS gnhyf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gnhyf'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0

		),
		-- 国内港杂费
		gngzf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gngzf_agent,
		xfci.finance_amount AS gngzf_price,
		'gngzf' AS fee_type,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gngzf'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		),
		-- 清关关费
		qggs AS (
		SELECT
		xfci.order_id,
		xfci.agent AS qggs_agent,
		xfci.finance_amount AS qggs_price,
		'qggs' AS fee_type,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'qggs'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		),
		gwqgf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gwqgf_agent,
		'gwqgf' AS fee_type,
		xfci.finance_amount AS gwqgf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'gwqgf'
		AND xfci.order_id IS NOT NULL
		AND xfci.price != 0
		),
		gwkcf AS (
		SELECT
		xfci.order_id,
		xfci.agent AS gwkcf_agent,
		'gwkcf' AS fee_type,
		xfci.finance_amount AS gwkcf_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type like 'gwkcf%'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		),
		ewfy1 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy1_agent,
		'ewfy1' AS fee_type,
		xfci.finance_amount AS ewfy1_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy1'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy2 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy2_agent,
		'ewfy2' AS fee_type,
		xfci.finance_amount AS ewfy2_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy2'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy3 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy3_agent,
		'ewfy3' AS fee_type,
		xfci.finance_amount AS ewfy3_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy3'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy4 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy4_agent,
		'ewfy4' AS fee_type,
		xfci.finance_amount AS ewfy4_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy4'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy5 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy5_agent,
		'ewfy5' AS fee_type,
		xfci.finance_amount AS ewfy5_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy5'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		ewfy6 AS (
		SELECT
		xfci.order_id,
		xfci.agent AS ewfy6_agent,
		'ewfy6' AS fee_type,
		xfci.finance_amount AS ewfy6_price,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy6'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=0
		),
		gnewfy3 AS (
		SELECT
		xfci.order_id,
		xfci.agent ,
		'ewfy3' AS fee_type,
		xfci.finance_amount,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy3'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=1
		) ,
		gnewfy4 AS (
		SELECT
		xfci.order_id,
		xfci.agent,
		'ewfy4' AS fee_type,
		xfci.finance_amount,
		xfci.pay_time,
		xfci.pay_money,
		xfci.application_time
		FROM
		xq_freight_cost_info xfci
		LEFT JOIN xq_order xo ON xo.id = xfci.order_id
		WHERE
		xfci.iz_delete = 0
		AND xfci.fee_type = 'ewfy4'
		AND xfci.order_id IS NOT NULL
		AND xfci.finance_amount != 0
		AND xfci.iz_domestic=1
		)

		SELECT
		xod.id AS order_detail_id,
		IFNULL(DATE_FORMAT( xfi.etd, '%Y/%m/%d' ), null ) AS etd,
		IFNULL( IF ( xo.order_type = 1, CONCAT( '仓库订单', '-', xw.NAME ), xc.`name` ), null) AS customer_name,
		xo.order_num,
		IFNULL( gnhyf.gnhyf_price, 0.00 ) AS gnhyf_price,
		gnhyf.gnhyf_agent,
		IFNULL( gnhyf.pay_money, 0.00 ) AS gnhyfFinanceAmount,
		IFNULL( IFNULL( SUBSTRING(gnhyf.pay_time,1,10), null ), null) AS gnhyfFinanceAuditTime,
		-- IFNULL( gnhyf.application_time, '-' ) AS gnhyfApplicationTime,

		IFNULL( gngzf.gngzf_price, 0.00 ) AS gngzf_price,
		gngzf.gngzf_agent,
		IFNULL( gngzf.pay_money, 0.00 ) AS gngzfFinanceAmount,
		IFNULL( IFNULL( SUBSTRING(gngzf.pay_time,1,10), null ), null ) AS gngzfFinanceAuditTime,
		-- IFNULL( gngzf.application_time, '-' ) AS gngzfApplicationTime,

		IFNULL( qggs.qggs_price, 0.00 ) + IFNULL( gwqgf.gwqgf_price, 0.00 ) AS gwqgf_price,
		gwqgf.gwqgf_agent,
		IFNULL( gwqgf.pay_money, 0.00 ) AS gwqgfFinanceAmount,
		IFNULL( SUBSTRING(gwqgf.pay_time,1,10), null ) AS gwqgfFinanceAuditTime,
		-- IFNULL( gwqgf.application_time, '-' ) AS gwqgfApplicationTime,

		IFNULL( gwkcf.gwkcf_price, 0.00 ) AS gwkcf_price,
		gwkcf.gwkcf_agent,
		IFNULL( gwkcf.pay_money, 0.00 ) AS gwkcfFinanceAmount,
		IFNULL( SUBSTRING(gwkcf.pay_time,1,10), null ) AS gwkcfFinanceAuditTime,
		-- IFNULL( gwkcf.application_time, '-' ) AS gwkcfApplicationTime

		IFNULL( ewfy1.ewfy1_price, 0.00 ) AS ewfy1_price,
		ewfy1.ewfy1_agent,
		IFNULL( ewfy1.pay_money, 0.00 ) AS ewfy1FinanceAmount,
		IFNULL( SUBSTRING(ewfy1.pay_time,1,10), null ) AS ewfy1FinanceAuditTime,
		-- IFNULL( ewfy1.application_time, '-' ) AS ewfy1ApplicationTime,

		IFNULL( ewfy2.ewfy2_price, 0.00 ) AS ewfy2_price,
		ewfy2.ewfy2_agent,
		IFNULL( ewfy2.pay_money, 0.00 ) AS ewfy2FinanceAmount,
		IFNULL( SUBSTRING(ewfy2.pay_time,1,10), null) AS ewfy2FinanceAuditTime,
		-- IFNULL( ewfy2.application_time, '-' ) AS ewfy2ApplicationTime,

		IFNULL( ewfy3.ewfy3_price, 0.00 ) AS ewfy3_price,
		ewfy3.ewfy3_agent,
		IFNULL( ewfy3.pay_money, 0.00 ) AS ewfy3FinanceAmount,
		IFNULL( SUBSTRING(ewfy3.pay_time,1,10), null ) AS ewfy3FinanceAuditTime,
		-- IFNULL( ewfy3.application_time, '-' ) AS ewfy3ApplicationTime,

		IFNULL( ewfy4.ewfy4_price, 0.00 ) AS ewfy4_price,
		ewfy4.ewfy4_agent,
		IFNULL( ewfy4.pay_money, 0.00 ) AS ewfy4FinanceAmount,
		IFNULL( SUBSTRING(ewfy3.pay_time,1,10), null ) AS ewfy4FinanceAuditTime,
		-- IFNULL( ewfy4.application_time, '-' ) AS ewfy4ApplicationTime,

		IFNULL( ewfy5.ewfy5_price, 0.00 ) AS ewfy5_price,
		ewfy5.ewfy5_agent,
		IFNULL( ewfy5.pay_money, 0.00 ) AS ewfy5FinanceAmount,
		IFNULL( SUBSTRING(ewfy5.pay_time,1,10), null ) AS ewfy5FinanceAuditTime,
		-- IFNULL( ewfy5.application_time, '-' ) AS ewfy5ApplicationTime,

		IFNULL( ewfy6.ewfy6_price, 0.00 ) AS ewfy6_price,
		ewfy6.ewfy6_agent,
		IFNULL( ewfy6.pay_money, 0.00 ) AS ewfy6FinanceAmount,
		IFNULL( SUBSTRING(ewfy6.pay_time,1,10), null ) AS ewfy6FinanceAuditTime,
		-- IFNULL( ewfy6.application_time, '-' ) AS ewfy6ApplicationTime

		IFNULL( gnewfy3.finance_amount, 0.00 ) AS gnewfy3_price,
		IFNULL( gnewfy3.agent, null ) AS gnewfy3_agent,
		IFNULL( gnewfy3.pay_money, 0.00 ) AS gnewfy3FinanceAmount,
		IFNULL( SUBSTRING(gnewfy3.pay_time,1,10), null ) AS gnewfy3FinanceAuditTime,

		IFNULL( gnewfy4.finance_amount, 0.00 ) AS gnewfy4_price,
		IFNULL( gnewfy4.agent, null ) AS gnewfy4_agent,
		IFNULL( gnewfy4.pay_money, 0.00 ) AS gnewfy4FinanceAmount,
		IFNULL( SUBSTRING(gnewfy4.pay_time,1,10), null ) AS gnewfy4FinanceAuditTime

		FROM
		xq_order xo
		LEFT JOIN xq_order_detail xod ON xo.id = xod.order_id
		AND xod.iz_delete = 0
		LEFT JOIN xq_freight_info xfi ON xfi.order_id = xo.id
		AND xfi.iz_delete = 0
		LEFT JOIN xq_warehouse xw ON xw.id = xo.warehouse_id
		LEFT JOIN xq_customer xc ON xo.customer_id = xc.id
		AND xc.iz_delete = 0
		LEFT JOIN xq_product_info xpi ON xpi.id = xod.product_id
		AND xpi.iz_delete = 0
		LEFT JOIN gnhyf gnhyf ON gnhyf.order_id = xo.id
		LEFT JOIN gngzf gngzf ON gngzf.order_id = xo.id
		LEFT JOIN qggs qggs ON qggs.order_id = xo.id
		LEFT JOIN gwqgf ON gwqgf.order_id = xo.id
		LEFT JOIN gwkcf gwkcf ON gwkcf.order_id = xo.id
		LEFT JOIN ewfy1 ewfy1 ON ewfy1.order_id = xo.id
		LEFT JOIN ewfy2 ewfy2 ON ewfy2.order_id = xo.id
		LEFT JOIN ewfy3 ewfy3 ON ewfy3.order_id = xo.id
		LEFT JOIN ewfy4 ewfy4 ON ewfy4.order_id = xo.id
		LEFT JOIN ewfy5 ewfy5 ON ewfy5.order_id = xo.id
		LEFT JOIN ewfy6 ewfy6 ON ewfy6.order_id = xo.id
		LEFT JOIN gnewfy3 ON gnewfy3.order_id = xo.id
		LEFT JOIN gnewfy4 ON gnewfy4.order_id = xo.id
		WHERE
		xo.iz_delete = 0
		-- AND (
		-- EXISTS ( SELECT 1 FROM gnhyf WHERE gnhyf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gngzf WHERE gngzf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM qggs WHERE qggs.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gwqgf WHERE gwqgf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM gwkcf WHERE gwkcf.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy2 WHERE ewfy2.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy1 WHERE ewfy1.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy3 WHERE ewfy3.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy4 WHERE ewfy4.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy5 WHERE ewfy5.order_id = xo.id )
		-- OR EXISTS ( SELECT 1 FROM ewfy6 WHERE ewfy6.order_id = xo.id )
		-- )

		<!--		<if test="dto.customerName!=null and dto.customerName!=''">-->
		<!--			AND (xc.name LIKE CONCAT('%', #{dto.customerName}, '%') or xc.abbr LIKE CONCAT('%', #{dto.customerName},-->
		<!--			'%') )-->
		<!--		</if>-->
		<if test="customerIds != null">
			AND xo.customer_id in
			<foreach collection="customerIds" item="customerId" separator="," open="(" close=")">
				#{customerId}
			</foreach>
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
		<if test="dto.etdStartDate != null and dto.etdStartDate !='' and dto.etdEndDate != null and dto.etdEndDate !=''">
			and xfi.etd between #{dto.etdStartDate} and #{dto.etdEndDate}
		</if>

		<if test="dto.shipCompany != null and dto.shipCompany != ''">
			and xfi.ship_company like concat('%',#{dto.shipCompany},'%')
		</if>

		<if test="dto.gnhyfAgent != null and dto.gnhyfAgent != ''">
			and gnhyf.gnhyf_agent like concat('%',#{dto.gnhyfAgent},'%')
		</if>

		<if test="dto.gngzfAgent != null and dto.gngzfAgent != ''">
			and gngzf.gngzf_agent like concat('%',#{dto.gngzfAgent},'%')
		</if>
		<if test="dto.gwqgfAgent != null and dto.gwqgfAgent != ''">
			and gwqgf.gwqgf_agent like concat('%',#{dto.gwqgfAgent},'%')
		</if>

		<if test="dto.gwkcfAgent != null and dto.gwkcfAgent != ''">
			and gwkcf.gwkcf_agent like concat('%',#{dto.gwkcfAgent},'%')
		</if>

		<if test="dto.ewfy1Agent != null and dto.ewfy1Agent != ''">
			and ewfy1.ewfy1_agent like concat('%',#{dto.ewfy1Agent},'%')
		</if>

		<if test="dto.ewfy2Agent != null and dto.ewfy2Agent != ''">
			and ewfy2.ewfy2_agent like concat('%',#{dto.ewfy2Agent},'%')
		</if>

		<if test="dto.ewfy3Agent != null and dto.ewfy3Agent != ''">
			and ewfy3.ewfy1_agent like concat('%',#{dto.ewfy3Agent},'%')
		</if>

		<if test="dto.ewfy4Agent != null and dto.ewfy4Agent != ''">
			and ewfy4.ewfy4_agent like concat('%',#{dto.ewfy4Agent},'%')
		</if>

		<if test="dto.ewfy5Agent != null and dto.ewfy5Agent != ''">
			and ewfy5.ewfy5_agent like concat('%',#{dto.ewfy5Agent},'%')
		</if>

		<if test="dto.ewfy6Agent != null and dto.ewfy6Agent != ''">
			and ewfy1.ewfy6_agent like concat('%',#{dto.ewfy6Agent},'%')
		</if>

		<if test="dto.gwcyfAgent != null and dto.gwcyfAgent != ''">
			and gwcyf.gwcyf_agent like concat('%',#{dto.gwcyfAgent},'%')
		</if>


		<if test="dto.payTimeStartDate != null and dto.payTimeStartDate !='' and dto.payTimeStartEnd != null and dto.payTimeStartEnd !=''">
			and (gnhyf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gngzf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gwqgf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gwkcf.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy1.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy2.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy3.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy4.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy5.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or ewfy6.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnewfy3.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			or gnewfy4.pay_time between #{dto.payTimeStartDate} and #{dto.payTimeStartEnd}
			    )
		</if>


		GROUP BY
		xo.id
		ORDER BY
		xfi.etd
		<if test="dto.reportFormTimeOrder != null and dto.reportFormTimeOrder !='' and dto.reportFormTimeOrder == 'desc'">
			desc
		</if>
		,
		xo.id desc,xod.product_id desc
	</select>


	<select id="getWarehouseProfit" resultType="com.interesting.modules.reportform.vo.TiHuoLiRunVO">
		SELECT
			oed.id,
			oed.`source_rep_num`,
			w.`name` warehouseName,
			w.`id` warehouseId,
			oed.`bol_time`,
			xpi.`product_name`,
			xc.`name` customerName,
			oed.`warehouse_lot`,
			oed.`product_id`,
			IFNULL(xod.`weight_per_box`,0) weightPerBox,
			IFNULL(xod.price_per_lb,0) pricePerlb,
			oed.`exit_num`,
			oed.`unit_price`,
			oed.`exit_money`,
			ROUND(IFNULL((xod.`weight_per_box` * xod.price_per_lb),0),2) dgcb,
			ROUND(IFNULL((xod.`weight_per_box` * xod.price_per_lb),0),2) * oed.`exit_num` zcb,
			(oed.`exit_money` - ROUND(IFNULL((xod.`weight_per_box` * xod.price_per_lb),0),2) * oed.`exit_num` +
			ifnull((select sum(if(xod.currency = 'USD' and xoec.currency &lt;&gt; 'USD', (xoec.price / xoec.exchange_rate), xoec.price)) from xq_order_extra_cost xoec where xoec.iz_delete = 0 and xoec.order_id = xo.id and xoec.order_detail_id = xod.id and xoec.customer_order_num = oed.customer_order_num), 0)) ml,
			IFNULL(xod.`weight_per_box` * oed.`exit_num`,0) zbs,

			(
				SELECT ifnull(round(IFNULL(SUM(xoc.amount),0) * oed.exit_money / oed2.total_exit_money, 2), 0) FROM xq_order_commission xoc WHERE xoc.iz_delete = 0 AND xoc.order_id = xo.id AND xoc.customer_order_num =  oed.`customer_order_num`   AND xoc.commission_type IN ('ddkc','zjsyj')
			) commission,
			(
				SELECT IFNULL(SUM(xti.truck_fee),0) FROM xq_truck_info xti WHERE xti.iz_delete = 0 AND xti.order_id = xo.id  AND  xti.customer_order_num = oed.`customer_order_num`
			) kcewfy,

			IFNULL(oed.`credit_insurance_premium_convert`,0) creditInsurancePremiumConvert,
			(
				SELECT IFNULL(SUM(xrd.factoring_interest),0) FROM xq_remittance_detail xrd WHERE iz_delete = 0 AND  xrd.order_id = xo.id and xrd.order_num = oed.`customer_order_num`
			) factoringInterest,
			oed.`customer_order_num`,
			ifnull((select sum(if(xod.currency = 'USD' and xoec.currency &lt;&gt; 'USD', (xoec.price / xoec.exchange_rate), xoec.price)) from xq_order_extra_cost xoec where xoec.iz_delete = 0 and xoec.order_id = xo.id and xoec.order_detail_id = xod.id and xoec.customer_order_num = oed.customer_order_num), 0) as extraFree


		FROM
			xq_overseas_exit_detail oed
				LEFT JOIN xq_warehouse w ON w.`id` = oed.`warehouse_id`
				LEFT JOIN xq_product_info xpi ON xpi.`id` = oed.`product_id`
				LEFT JOIN xq_customer xc ON xc.`id` = oed.`customer_id`
				LEFT JOIN xq_order xo ON (xo.`order_num` = oed.`source_rep_num` AND xo.`iz_delete` = 0)
				LEFT JOIN xq_order_detail xod ON (xod.`order_id` = xo.`id` AND xod.`product_id` = oed.`product_id` AND xod.iz_delete = 0)
				left join
				(select source_rep_num, customer_order_num, sum(exit_money) total_exit_money
				 from xq_overseas_exit_detail
				 where iz_delete = 0
				 group by source_rep_num, customer_order_num) oed2
				 on oed.source_rep_num = oed2.source_rep_num
				 and oed.customer_order_num = oed2.customer_order_num

		WHERE oed.iz_delete = 0
		  AND oed.`source_rep_num` IS NOT NULL
		  AND oed.`source_rep_num` != ''
		<if test="dto.bolTimeStart != null and dto.bolTimeStart !='' and dto.bolTimeEnd != null and dto.bolTimeEnd !=''">
			AND oed.`bol_time` between #{dto.bolTimeStart} and #{dto.bolTimeEnd}
		</if>
		<if test="dto.productName != null and '' != dto.productName">
			AND xpi.`product_name` like concat('%',#{dto.productName},'%')
		</if>

		<if test="dto.sourceRepNum != null and '' != dto.sourceRepNum">
			AND oed.`source_rep_num` like concat('%',#{dto.sourceRepNum},'%')
		</if>
		<if test="dto.customerOrderNum != null and '' != dto.customerOrderNum">
			AND oed.`customer_order_num` like concat('%',#{dto.customerOrderNum},'%')
		</if>
		<if test="dto.warehouseLot != null and '' != dto.warehouseLot">
			AND oed.`warehouse_lot` like concat('%',#{dto.warehouseLot},'%')
		</if>
		<if test="dto.customerId != null and '' != dto.customerId">
			AND oed.`customer_id` = #{dto.customerId}
		</if>
		ORDER BY oed.`warehouse_id`,oed.bol_time
	</select>

	<select id="getWarehouseFreeByDate" resultType="BigDecimal">
		SELECT IFNULL(SUM(audit_amount),0) FROM `xq_warehouse_expenses` WHERE warehouse_id = #{warehouseId} and iz_delete = 0
		<if test="bolTimeEnd != null and '' != bolTimeEnd and bolTimeStart != null and '' != bolTimeStart">
			AND invoice_date BETWEEN  #{bolTimeStart}  AND #{bolTimeEnd}
		</if>
	</select>


	<select id="getWarehouseProfitByYear" resultType="com.interesting.modules.reportform.vo.TiHuoLiRunTotalVO">

		SELECT
			months.month_number AS MONTH,
			IFNULL(tt.exitNum,0) AS exitNum,
			IFNULL(tt.zbs,0) zbs,
			IFNULL(tt.ml,0) AS ml,
			IFNULL(tt.exitMoney,0) AS exitMoney,
			IFNULL(t.audit_amount,0) AS warehouseFree,
			IFNULL(tt.extraFree,0) AS extraFree
		FROM
			(
			SELECT 1 AS month_number UNION ALL
			SELECT 2 UNION ALL
			SELECT 3 UNION ALL
			SELECT 4 UNION ALL
			SELECT 5 UNION ALL
			SELECT 6 UNION ALL
			SELECT 7 UNION ALL
			SELECT 8 UNION ALL
			SELECT 9 UNION ALL
			SELECT 10 UNION ALL
			SELECT 11 UNION ALL
			SELECT 12
			) AS months

			LEFT JOIN (
			SELECT
			MONTH(t.bolTime) bolTime,
			SUM(t.exitNum) exitNum,
			SUM(t.zbs) zbs,
			SUM(t.exitMoney) exitMoney,
			SUM(t.ml) ml,
			SUM(t.extraFree) extraFree

			FROM (

			SELECT
				oed.bol_time AS bolTime,
				COALESCE(oed.exit_num, 0) AS exitNum,
				COALESCE(xod.weight_per_box * oed.exit_num, 0) AS zbs,
				COALESCE(oed.exit_money, 0) AS exitMoney,
				COALESCE(oed.exit_money - ROUND(COALESCE(xod.weight_per_box * xod.price_per_lb), 2) * COALESCE(oed.exit_num)
				+ ifnull(if(xod.currency = 'USD' and xoec.currency &lt;&gt; 'USD', (xoec.price / xoec.exchange_rate), xoec.price), 0), 0) AS ml,
				ifnull(if(xod.currency = 'USD' and xoec.currency &lt;&gt; 'USD', (xoec.price / xoec.exchange_rate), xoec.price), 0) as extraFree
			FROM
			xq_overseas_exit_detail oed
			LEFT JOIN xq_order xo ON (xo.order_num = oed.source_rep_num AND xo.iz_delete = 0)
			INNER JOIN xq_order_detail xod ON (xod.order_id = xo.id AND xod.product_id = oed.product_id AND xod.iz_delete = 0)
			left join xq_order_extra_cost xoec on xoec.iz_delete = 0 and xoec.order_id = xo.id and xoec.order_detail_id = xod.id and xoec.customer_order_num = oed.customer_order_num
			WHERE
			oed.iz_delete = 0
			AND YEAR(oed.bol_time) = #{year}
			) t GROUP BY MONTH(t.bolTime)

			) AS tt ON months.month_number = tt.bolTime

			LEFT JOIN (
				SELECT MONTH(invoice_date) invoiceDate,COALESCE(SUM(audit_amount),0) audit_amount FROM xq_warehouse_expenses
			    WHERE iz_delete = 0 and YEAR(invoice_date) = #{year} GROUP BY MONTH(invoice_date)
			) AS t ON t.invoiceDate = months.month_number

	</select>



	<select id="getWarehouseFeeByYear" resultType="com.interesting.modules.reportform.vo.TiHuoLiRunMonthVO">
		SELECT
			t.`warehouseName` ,
			SUM(CASE WHEN MONTH(t.`bol_time`) = 1 THEN t.kcewfy + t.commission + t.creditInsurancePremiumConvert + t.factoringInterest  ELSE 0 END) AS january,
			SUM(CASE WHEN MONTH(t.`bol_time`) = 2 THEN t.kcewfy + t.commission + t.creditInsurancePremiumConvert + t.factoringInterest  ELSE 0 END) AS february,
			SUM(CASE WHEN MONTH(t.`bol_time`) = 3 THEN t.kcewfy + t.commission + t.creditInsurancePremiumConvert + t.factoringInterest  ELSE 0 END) AS march,
			SUM(CASE WHEN MONTH(t.`bol_time`) = 4 THEN t.kcewfy + t.commission + t.creditInsurancePremiumConvert + t.factoringInterest  ELSE 0 END) AS april,
			SUM(CASE WHEN MONTH(t.`bol_time`) = 5 THEN t.kcewfy + t.commission + t.creditInsurancePremiumConvert + t.factoringInterest  ELSE 0 END) AS may,
			SUM(CASE WHEN MONTH(t.`bol_time`) = 6 THEN t.kcewfy + t.commission + t.creditInsurancePremiumConvert + t.factoringInterest  ELSE 0 END) AS june,
			SUM(CASE WHEN MONTH(t.`bol_time`) = 7 THEN t.kcewfy + t.commission + t.creditInsurancePremiumConvert + t.factoringInterest  ELSE 0 END) AS july,
			SUM(CASE WHEN MONTH(t.`bol_time`) = 8 THEN t.kcewfy + t.commission + t.creditInsurancePremiumConvert + t.factoringInterest  ELSE 0 END) AS august,
			SUM(CASE WHEN MONTH(t.`bol_time`) = 9 THEN t.kcewfy + t.commission + t.creditInsurancePremiumConvert + t.factoringInterest  ELSE 0 END) AS september,
			SUM(CASE WHEN MONTH(t.`bol_time`) =10 THEN t.kcewfy + t.commission + t.creditInsurancePremiumConvert + t.factoringInterest  ELSE 0 END) AS october,
			SUM(CASE WHEN MONTH(t.`bol_time`) =11 THEN t.kcewfy + t.commission + t.creditInsurancePremiumConvert + t.factoringInterest  ELSE 0 END) AS november,
			SUM(CASE WHEN MONTH(t.`bol_time`) =12 THEN t.kcewfy + t.commission + t.creditInsurancePremiumConvert + t.factoringInterest  ELSE 0 END) AS ecember,
			SUM(t.kcewfy+ t.commission + t.creditInsurancePremiumConvert + t.factoringInterest) AS total
		FROM
			(
				SELECT
					DISTINCT
					oed.`bol_time`,
					oed.`customer_order_num` ,
					w.`name` warehouseName,
					(
						SELECT IFNULL(SUM(xti.truck_fee),0) FROM xq_truck_info xti WHERE xti.iz_delete = 0 AND xti.order_id = xo.id AND  xti.customer_order_num = oed.`customer_order_num`
					) kcewfy,
					(
						SELECT IFNULL(SUM(xoc.amount),0) FROM xq_order_commission xoc WHERE xoc.iz_delete = 0 AND xoc.order_id = xo.id  AND xoc.customer_order_num =  oed.`customer_order_num`   AND xoc.commission_type IN ('ddkc','zjsyj')
					) commission,
					IFNULL(oed.`credit_insurance_premium_convert`,0) creditInsurancePremiumConvert,
					(
						SELECT IFNULL(SUM(xrd.factoring_interest),0) FROM xq_remittance_detail xrd WHERE iz_delete = 0 AND  xrd.order_id = xo.id AND xrd.order_num = oed.`customer_order_num`
					) factoringInterest


				FROM
					xq_overseas_exit_detail oed
						LEFT JOIN xq_warehouse w ON w.`id` = oed.`warehouse_id`
						LEFT JOIN xq_order xo ON (xo.`order_num` = oed.`source_rep_num` AND xo.`iz_delete` = 0)
						LEFT JOIN xq_order_detail xod ON (xod.`order_id` = xo.`id` AND xod.`product_id` = oed.`product_id` AND xod.iz_delete = 0)

				WHERE oed.iz_delete = 0
				  AND oed.`source_rep_num` IS NOT NULL
				  AND oed.`source_rep_num` != ''
				  AND YEAR(oed.bol_time) = #{year}

			) t GROUP BY warehouseName

	</select>



	<select id="getPayableList" resultType="com.interesting.modules.reportform.vo.PayableVO">

		SELECT * FROM (
		SELECT
		rmp.product_id,
		1 type,
		rmp.id AS id,
		rmp.`order_id`,
		xs.`name`,
		o.`order_num`,
		xpi.`product_name`,
		rmp.`layout_requirements`,
		xfi.loading_date,
		xfi.eta,
		rmp.first_payment_rate,
		rmp.first_payment_expire_date,
		rmp.payment_expire_date,
		ROUND(IF(rmp.currency = 'CNY',IF(rmp.dqyfk &lt; 100,0,rmp.dqyfk),0),2) dqyfkCNY,
		ROUND(IF(rmp.currency != 'CNY',IF(rmp.dqyfk &lt; 100,0,rmp.dqyfk),0),2) dqyfkUSD,
		ROUND(IF(rmp.currency = 'CNY',IF(rmp.zyfk &lt; 100,0,rmp.zyfk),0),2) zyfkCNY,
		ROUND(IF(rmp.currency != 'CNY',IF(rmp.zyfk &lt; 100,0,rmp.zyfk),0),2) zyfkUSD,
		CONCAT_WS('|',
		NULLIF(rmp.purchase_note, '')
		,NULLIF((
		-- 		订单信息
		SELECT GROUP_CONCAT(note SEPARATOR '|') remark
		FROM xq_problem_note WHERE iz_delete = 0 AND module_type = 1 AND  order_id = rmp.`order_id`
		), '')
		,NULLIF((
		-- 		原料采购
		SELECT GROUP_CONCAT(note SEPARATOR '|') remark
		FROM xq_problem_note WHERE iz_delete = 0 AND module_type = 3 AND  order_id = rmp.`order_id`
		), '')
		-- 付款备注
		,NULLIF((
		SELECT GROUP_CONCAT(pay_remark SEPARATOR '|') remark
		FROM xq_payment_detail WHERE iz_delete = 0 AND TYPE = 0 AND source_id = rmp.id
		),"")
		,NULLIF((
		-- 		 货运备注
		SELECT GROUP_CONCAT(remark SEPARATOR '|') AS remark
		FROM (
		SELECT CONCAT_WS('', IFNULL(insurance_date, ''), NULLIF(create_person, ''), NULLIF(trans_info, '')) AS remark
		FROM xq_freight_note
		WHERE order_id = rmp.`order_id` AND iz_delete = 0
		) AS subquery
		), '')
		) AS remark,
		IFNULL(sdi.item_text,rmp.inspection_note) AS chfs,
		ROUND(IF(rmp.currency = 'CNY',xpd.total_pay_money,0),2) yfkjeCNY,
		ROUND(IF(rmp.currency != 'CNY',xpd.total_pay_money,0),2) yfkjeUSD,
		xpd.payment_detail_id payment_detail_ids

		FROM

		(
		SELECT
		rmp.id,
		rmp.first_payment_rate,
		rmp.first_payment_expire_date,
		rmp.payment_expire_date,
		rmp.first_payment,
		rmp.`layout_requirements`,
		rmp.currency,
		rmp.`order_id`,
		rmp.`supplier_id`,
		rmp.product_id,
		rmp.purchase_note,
		CASE
		-- 当前日期大于首付款日期-7天 并且 小于尾款日期-7天
		WHEN CURDATE() BETWEEN DATE_SUB(rmp.first_payment_expire_date, INTERVAL 8 DAY) AND DATE_SUB(rmp.payment_expire_date, INTERVAL 8 DAY) THEN
		-- 如果采购总价CNY大于0 到期应付款 = 采购总价CNY / 汇率 * 首付比例 /100 - 已付金额 - 扣款金额
		(IF(rmp.purchase_amount_cny>0,rmp.purchase_amount_cny/#{dto.exchangeRate}*(rmp.first_payment_rate/100),rmp.first_payment)) - COALESCE((SELECT SUM(pd.pay_money) FROM xq_payment_detail pd WHERE pd.iz_delete = 0 AND pd.source_id = rmp.id AND pd.type = 0 ), 0) -
		COALESCE((SELECT SUM(pd.pay_money) FROM xq_payment_detail pd WHERE pd.iz_delete = 0 AND pd.source_id = rmp.id AND pd.type = 1 ), 0)
		-- 当前日期大于等于 尾款日期 -7 天
		WHEN CURDATE() &gt;=   DATE_SUB(rmp.payment_expire_date, INTERVAL 8 DAY) THEN
		(IF(rmp.purchase_amount_cny>0,rmp.purchase_amount_cny/#{dto.exchangeRate},rmp.purchase_amount)) - COALESCE((SELECT SUM(pd.pay_money) FROM xq_payment_detail pd WHERE pd.iz_delete = 0 AND pd.source_id = rmp.id AND pd.type = 0 ), 0) -
		COALESCE((SELECT SUM(pd.pay_money) FROM xq_payment_detail pd WHERE pd.iz_delete = 0 AND pd.source_id = rmp.id AND pd.type = 1 ), 0)

		-- 当前日期大于等于 首付款日期 -7 天 并且 尾款日期为空
		WHEN CURDATE() &gt;= DATE_SUB(rmp.first_payment_expire_date, INTERVAL 8 DAY) AND rmp.payment_expire_date IS NULL THEN
		(IF(rmp.purchase_amount_cny>0,rmp.purchase_amount_cny/#{dto.exchangeRate},rmp.purchase_amount)) - COALESCE((SELECT SUM(pd.pay_money) FROM xq_payment_detail pd WHERE pd.iz_delete = 0 AND pd.source_id = rmp.id AND pd.type = 0 ), 0) -
		COALESCE((SELECT SUM(pd.pay_money) FROM xq_payment_detail pd WHERE pd.iz_delete = 0 AND pd.source_id = rmp.id AND pd.type = 1 ), 0)

		ELSE 0
		END AS dqyfk,
		(
		-- 如果采购总价CNY大于0 总应付款 = 采购总价CNY / 汇率  - 已付金额 - 扣款金额
		(IF(rmp.purchase_amount_cny>0,rmp.purchase_amount_cny/#{dto.exchangeRate},rmp.purchase_amount)) - COALESCE((SELECT SUM(pd.pay_money) FROM xq_payment_detail pd WHERE pd.iz_delete = 0 AND pd.source_id = rmp.id AND pd.type = 0 ), 0) -
		COALESCE((SELECT SUM(pd.pay_money) FROM xq_payment_detail pd WHERE pd.iz_delete = 0 AND pd.source_id = rmp.id AND pd.type = 1 ), 0)
		) AS zyfk,
		rmp.inspection_note


		FROM xq_freight_info xfi
		LEFT JOIN xq_order xo ON xo.id = xfi.order_id AND xo.iz_delete = 0
		INNER JOIN xq_raw_material_purchase rmp ON rmp.order_id = xo.id AND rmp.iz_delete = 0 AND rmp.finance_complete_state = 0


		WHERE xfi.iz_delete = 0 AND customs_clearance_time IS NOT NULL

		<if test="dto!= null and  dto.supplierId != null and '' != dto.supplierId">
			AND rmp.supplier_id = #{dto.supplierId}
		</if>
		<if test="dto!= null and  dto.chfsList != null">
			AND rmp.inspection_note in
			<foreach collection="dto.chfsList" item="chfs" separator="," open="(" close=")">
				#{chfs}
			</foreach>
		</if>

		<if test="dto!= null and  dto.firstDateStart != null and '' != dto.firstDateStart and dto.firstDateEnd != null and '' != dto.firstDateEnd">
			AND rmp.first_payment_expire_date BETWEEN #{dto.firstDateStart} AND #{dto.firstDateEnd}
		</if>

		<if test="dto!= null and  dto.expireDateStart != null and '' != dto.expireDateStart and dto.expireDateEnd != null and '' != dto.expireDateEnd">
			AND rmp.payment_expire_date BETWEEN #{dto.expireDateStart} AND #{dto.expireDateEnd}
		</if>
		) rmp
		LEFT JOIN xq_supplier xs ON xs.`id` = rmp.`supplier_id`
		LEFT JOIN xq_order o ON o.`id` = rmp.`order_id`
		LEFT JOIN xq_product_info xpi ON xpi.id = rmp.`product_id`
		LEFT JOIN xq_freight_info xfi ON rmp.`order_id` = xfi.`order_id` AND xfi.`iz_delete` = 0
		LEFT JOIN sys_dict sd ON sd.dict_code = 'inspection_note_way' AND sd.iz_delete = 0
		LEFT JOIN sys_dict_item sdi ON sdi.dict_id = sd.id AND sdi.item_value = rmp.inspection_note AND sdi.iz_delete = 0
		left join
		(select source_id,
		sum(pay_money) total_pay_money,
		group_concat(prepayments_id separator ",") payment_detail_id
		from xq_payment_detail
		where
		iz_delete = 0
		and type = 0
		and prepayments_id is not null
		group by source_id) xpd
		on xpd.source_id = rmp.id

		where o.`iz_delete` = 0

		UNION ALL

		(WITH t AS (
		SELECT
		xwd.`source_id`,
		SUM(IF(xwd.currency = 'CNY',xwd.money,0)) cny,
		SUM(IF(xwd.currency = 'USD',xwd.money,0)) usd,
		group_concat(if(xwd.remark = '', null, xwd.remark) Separator "|") remark

		FROM xq_withhold_detail xwd
		LEFT JOIN xq_raw_material_purchase rmp ON xwd.`source_id` = rmp.`id`
		WHERE xwd.`iz_delete` = 0
		GROUP BY xwd.`source_id`
		)


		SELECT
		rmp.product_id,
		2 type,
		t.source_id AS id,
		rmp.`order_id`,
		xs.`name`,
		o.`order_num`,
		xpi.`product_name`,
		rmp.`layout_requirements`,
		xfi.loading_date,
		xfi.eta,
		rmp.first_payment_rate,
		rmp.first_payment_expire_date,
		rmp.payment_expire_date,
		t.cny dqyfkCNY,
		t.usd  dqyfkUSD,
		t.cny  zyfkCNY,
		t.usd zyfkUSD,
		t.remark,
		NULL,
		null as yfkjeCNY,
		null as yfkjeUSD,
		null as payment_detail_ids

		FROM
		t

		LEFT JOIN xq_raw_material_purchase rmp ON t.source_id = rmp.id
		LEFT JOIN xq_supplier xs ON xs.`id` = rmp.`supplier_id`
		LEFT JOIN xq_order o ON o.`id` = rmp.`order_id`
		LEFT JOIN xq_product_info xpi ON xpi.id = rmp.`product_id`
		LEFT JOIN xq_freight_info xfi ON rmp.`order_id` = xfi.`order_id` AND xfi.`iz_delete` = 0

		WHERE
		rmp.iz_delete = 0 AND rmp.finance_complete_state = 0 and o.`iz_delete` = 0
		<if test="dto!= null and  dto.supplierId != null and '' != dto.supplierId">
			AND rmp.supplier_id = #{dto.supplierId}
		</if>

		<if test="dto!= null and  dto.firstDateStart != null and '' != dto.firstDateStart and dto.firstDateEnd != null and '' != dto.firstDateEnd">
			AND rmp.first_payment_expire_date BETWEEN #{dto.firstDateStart} AND #{dto.firstDateEnd}
		</if>

		<if test="dto!= null and  dto.chfsList != null">
			AND rmp.inspection_note in
			<foreach collection="dto.chfsList" item="chfs" separator="," open="(" close=")">
				#{chfs}
			</foreach>
		</if>
		<if test="dto!= null and  dto.expireDateStart != null and '' != dto.expireDateStart and dto.expireDateEnd != null and '' != dto.expireDateEnd">
			AND rmp.payment_expire_date BETWEEN #{dto.expireDateStart} AND #{dto.expireDateEnd}
		</if>

		)

		) tt
		where
		1=1
		<if test="dto!= null and  dto.productName != null and '' != dto.orderNum">
			AND tt.`product_name` LIKE CONCAT('%',#{dto.productName},'%')
		</if>
		<if test="dto!= null and  dto.orderNum != null and '' != dto.orderNum">
			AND tt.order_num LIKE CONCAT('%',#{dto.orderNum},'%')
		</if>
		ORDER BY
		tt.`name`,
		<if test="dto!= null and  dto.column != null and '' != dto.column">
			#{dto.column} #{dto.order} ,
		</if>
		tt.loading_date,tt.`order_num`,tt.id,tt.`product_id`,tt.type


	</select>


	<select id="freightTYReportNew" resultType="com.interesting.modules.reportform.vo.FreightTYReportNewVO">
		SELECT
			xfi.id,
			xo.`order_num`,
			xfi.`return_ship_company`,
			xfi.`return_voyage_number`,
			xfi.`return_bill_of_lading`,
			xfi.`return_container_no`,
			xfi.`return_loading_port`,
			xfi.`return_destination_port`,
			xfi.`return_net_weight`,
			xfi.`return_gross_weight`,
			xfi.`return_box_num`,
			xpi.`product_name`,
			fci.`layout_requirements`,
			fci.`agent`,
			IFNULL( DATE_FORMAT(fci.`application_time`, '%Y-%m-%d' ), null) application_time,
			IFNULL( DATE_FORMAT(fci.`pay_time`, '%Y-%m-%d' ), null) pay_time,
			IFNULL( DATE_FORMAT(fci.`finance_audit_time`, '%Y-%m-%d' ), null) finance_audit_time,
			fci.`remark`,
			fci.`currency`,
			fci.`price`,
			fci.`finance_amount`,
			dict.item_text feeTypeName,
			fci.`fee_type`
		FROM xq_freight_info xfi
		 LEFT JOIN xq_order xo ON xo.`id` = xfi.`order_id` AND xo.`iz_delete` = 0
		 LEFT JOIN xq_freight_cost_info fci ON fci.`order_id` = xo.`id` AND fci.`iz_delete` = 0 AND fci.`iz_return_fee` = 1
		 LEFT JOIN xq_product_info xpi ON xpi.`id` = fci.`product_id` AND xpi.`iz_delete` = 0
		 LEFT JOIN (
				SELECT * FROM sys_dict_item
				WHERE iz_delete= 0
				AND dict_id = (SELECT id FROM sys_dict sd WHERE iz_delete = 0 AND dict_code = 'fee_type')
			) dict ON dict.item_value = fci.`fee_type`
		WHERE xfi.`iz_delete` = 0
		  AND xfi.`return_cargo_time` IS NOT NULL
		<if test="dto.payDateStart != null and dto.payDateStart != '' and dto.payDateEnd != null and dto.payDateEnd != ''">
			and DATE_FORMAT(fci.`pay_time`, '%Y-%m-%d' ) between #{dto.payDateStart} and #{dto.payDateEnd}
		</if>

		<if test="dto.applicationDateStart != null and dto.applicationDateStart != '' and dto.applicationDateEnd != null and dto.applicationDateEnd != ''">
			and DATE_FORMAT(fci.`application_time`, '%Y-%m-%d' ) between #{dto.applicationDateStart} and #{dto.applicationDateEnd}
		</if>
		<if test="dto.orderNum != null and dto.orderNum != ''">
			and xo.order_num like concat('%',#{dto.orderNum},'%')
		</if>
		<if test="dto.returnBillOfLading != null and dto.returnBillOfLading != ''">
			and xfi.`return_bill_of_lading` like concat('%',#{dto.returnBillOfLading},'%')
		</if>
		<if test="dto.returnLoadingPort != null and dto.returnLoadingPort != ''">
			and xfi.`return_loading_port` like concat('%',#{dto.returnLoadingPort},'%')
		</if>
		<if test="dto.returnDestinationPort != null and dto.returnDestinationPort != ''">
			and xfi.`return_destination_port` like concat('%',#{dto.returnDestinationPort},'%')
		</if>
		<if test="dto.feeType != null and dto.feeType != ''">
			and fci.`fee_type` = #{dto.feeType}
		</if>

		order by
		<if test="dto!= null and  dto.column != null and '' != dto.column">
			${dto.column} ${dto.order} ,
		</if>
		xo.`order_num`,xpi.`product_name`
	</select>


	<select id="sumFreightTYNew" resultType="com.interesting.modules.reportform.vo.SumFreightTYNewVO">

		select
			t.`currency`,
			sum(ifnull(t.`finance_amount`,0)) financeAmountTotal,
		    sum(ifnull(t.`price`,0)) priceTotal
		from (
			SELECT
				xfi.id,
				xo.`order_num`,
				xfi.`return_ship_company`,
				xfi.`return_voyage_number`,
				xfi.`return_bill_of_lading`,
				xfi.`return_container_no`,
				xfi.`return_loading_port`,
				xfi.`return_destination_port`,
				xfi.`return_net_weight`,
				xfi.`return_gross_weight`,
				xfi.`return_box_num`,
				xpi.`product_name`,
				fci.`layout_requirements`,
				fci.`agent`,
				fci.`application_time`,
				fci.`pay_time`,
				fci.`remark`,
				fci.`currency`,
				fci.`price`,
				fci.`finance_amount`,
				fci.`finance_audit_time`,
				dict.item_text feeTypeName,
				fci.`fee_type`
			FROM xq_freight_info xfi
			LEFT JOIN xq_order xo ON xo.`id` = xfi.`order_id` AND xo.`iz_delete` = 0
			LEFT JOIN xq_freight_cost_info fci ON fci.`order_id` = xo.`id` AND fci.`iz_delete` = 0 AND fci.`iz_return_fee` =
			1
			LEFT JOIN xq_product_info xpi ON xpi.`id` = fci.`product_id` AND xpi.`iz_delete` = 0
			LEFT JOIN (
			SELECT * FROM sys_dict_item
			WHERE iz_delete= 0
			AND dict_id = (SELECT id FROM sys_dict sd WHERE iz_delete = 0 AND dict_code = 'fee_type')
			) dict ON dict.item_value = fci.`fee_type`
			WHERE xfi.`iz_delete` = 0
			AND xfi.`return_cargo_time` IS NOT NULL
			<if test="dto.payDateStart != null and dto.payDateStart != '' and dto.payDateEnd != null and dto.payDateEnd != ''">
				and DATE_FORMAT(fci.`pay_time`, '%Y-%m-%d' ) between #{dto.payDateStart} and #{dto.payDateEnd}
			</if>

			<if test="dto.applicationDateStart != null and dto.applicationDateStart != '' and dto.applicationDateEnd != null and dto.applicationDateEnd != ''">
				and DATE_FORMAT(fci.`application_time`, '%Y-%m-%d' ) between #{dto.applicationDateStart} and #{dto.applicationDateEnd}
			</if>
			<if test="dto.orderNum != null and dto.orderNum != ''">
				and xo.order_num like concat('%',#{dto.orderNum},'%')
			</if>
			<if test="dto.returnBillOfLading != null and dto.returnBillOfLading != ''">
				and xfi.`return_bill_of_lading` like concat('%',#{dto.returnBillOfLading},'%')
			</if>
			<if test="dto.returnLoadingPort != null and dto.returnLoadingPort != ''">
				and xfi.`return_loading_port` like concat('%',#{dto.returnLoadingPort},'%')
			</if>
			<if test="dto.returnDestinationPort != null and dto.returnDestinationPort != ''">
				and xfi.`return_destination_port` like concat('%',#{dto.returnDestinationPort},'%')
			</if>
			<if test="dto.feeType != null and dto.feeType != ''">
				and fci.`fee_type` = #{dto.feeType}
			</if>
		    ) t WHERE t.`currency` IS NOT NULL GROUP BY t.`currency`
	</select>
</mapper>
